---
# Red Hat Insights has recommended one or more actions for you, a system administrator, to review and if you
# deem appropriate, deploy on your systems running Red Hat software. Based on the analysis, we have automatically
# generated an Ansible Playbook for you. Please review and test the recommended actions and the Playbook as
# they may contain configuration changes, updates, reboots and/or other changes to your systems. Red Hat is not
# responsible for any adverse outcomes related to these recommendations or Playbooks.
#
# remediate-v1
# https://console.redhat.com/insights/remediations/94b4dff3-c529-43db-b4e0-a262c36ce00b
# Generated by Red Hat Insights on Tue, 04 Jun 2024 07:24:02 GMT
# Created by arief_amarullah

# Set Account Expiration Following Inactivity
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_account_disable_post_pw_expiration,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_rhv,multi_platform_sle
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Set Account Expiration Following Inactivity
  hosts: 'vian.local'
  become: true
  vars:
    var_account_disable_post_pw_expiration: '30'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzTXlRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      bHhORkF2VW04M2JWZ3laSEF2VDFjdmNHRmlSazVTZVRKNFFrWUthakJhTmpSVVJYaElaQ3RUT1N0
      aGFrTXJSRlYzZWtGMGNXOXhhRXRyT0U4eVpFaE9ORzlwWkROVGNFWndTRFZwUmtnNWVXVlNUVTFJ
      UjNwaE1TdFNNd3BEYnpSb2RGRTRNSE56YW5rMlMxRkdLMmd3TVZOalVVMVhRM0J4WVhkR2VrcHdZ
      bE13VFd0U1FWUTFRVGxyZHpob2JsSkdjV0ZLTmxVNVlXaE9ZbHBhQ25aSGVqZzVjM1YyY0dGU2NG
      a3pWRmw0UW5wV1dHaFRiV015YWk5WFZuRTFWalJoVDBjellTODBhbGR3T1ZsWE5URnpjWFZ5VlN0
      ck0xbFJlVzR4T0c4S05HUlZXVlZsVHpoMVoxRTVPVzlaU3pGUVpGSnNUVU41TVhwRFZYbGFORXc1
      YWk5b1ZVWTVSeXQ1UVV4SE9YSjJhV29yZUZsQlQyRkRNMUl3U25WSk13cHVkRlJOTWtoMVFtcHdV
      RVZ2Y25aWFJHWnhhbEZJZVN0RWRWRnhjRVJGWnpSRmQwWlRabU54ZEdSamNWSnFNMnQzYmtFd1ow
      eElZVmxGUkVaMlRtNUxDa296WVhsblJUUlBUMmhDWlZwWmNuUjNXVTFqUjNSV04yUlBXaXRQVm0w
      eVZUVkJaMGR3V21wdWRIZHBSVUptWjJ0TFlWZHhkME5OZGtaalFXbzJaRWtLZUc0M1lrbDRiRkZP
      VmpJd1VIY3hTVmMxYWxVeVVta3hhRk5CV1VKaFNGaDFSbWg2YUc1T05tUnVOMFoxWkVwSlExWnpR
      V3RZZVc5bldETkpXbmszTUFwS2NWWm1OakpLYnpSb2VFTXpkbWR2WkM5U0wzVmpOVEZrU25VeFFV
      WnNhV1V5UmxGNFZGcHVWM0I2ZEhWT01rbFdTMWQ1UWtsVVVFRjNlbUZDZG5CaUNqbDNUbG8yWnpk
      clFTOHZibTVGVUhSSGVHSm9SMnRhWldWaFlXVkRWRXA2Vlc5c1FqRmlibEZHTDNoWFlrSXphR3hZ
      T0V0U09EVmlVMW8wY0dkNGNFWUtkSEJ1TmpkQlIzQXhaVmRTTWt4WFVrWkhWMmcxZUU1S1ZWYzJR
      MHRxUkVkSmIxVmtlREpDYTFaNlIxaDVTMmxqZFcxUFZYZFBVV1oxYUdoc2NWTkpXUXBDU0VsQlNW
      RkxTVkJ4U1V0TE1IbEVkMFJxZUFvOVpsTTVOUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-80954-1
    - CJIS-5.6.2.1.1
    - DISA-STIG-RHEL-08-020260
    - NIST-800-171-3.5.6
    - NIST-800-53-AC-2(3)
    - NIST-800-53-CM-6(a)
    - NIST-800-53-IA-4(e)
    - PCI-DSS-Req-8.1.4
    - PCI-DSSv4-8.2.6
    - account_disable_post_pw_expiration
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Set Account Expiration Following Inactivity
      lineinfile:
        create: true
        dest: /etc/default/useradd
        regexp: ^INACTIVE
        line: INACTIVE={{ var_account_disable_post_pw_expiration }}
      when: '"shadow-utils" in ansible_facts.packages'


# Set Password Maximum Age
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_accounts_maximum_age_login_defs,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_rhv,multi_platform_sle,multi_platform_debian
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Set Password Maximum Age
  hosts: 'vian.local'
  become: true
  vars:
    var_accounts_maximum_age_login_defs: '365'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzTjVRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      Sk9XVkF2TVc1Tk4yWnRObmh5Wkd4WlNXNXdSRGswSzFaNWVqY0tiVTVFYmtrMlVHcFZaRnBzV0U5
      U2MwaGthM2t4YlhJeE1XUmxMMkpUVFVjNVUzWTFXR2hpUmtGNmExQllhbEI1ZEZSelVFSnRWRGhq
      VkZwVmEwZDRRZ3BvZVVrd1JWa3Zka2s1Wkd0RGRHZDZhakZ2WTI1SlZHdEVOM2QxV0hWS1l6VnVl
      a3R2YWpWMlRURk9kRU5IVFhJNWMwaG1RbkJpUTBWS1VUVjJTRlpJQ2xsS01tUmFTa052TlU1cU0w
      ZFJZVkY2U1M5WVNIQmxPVmMyTm10UGFHWTVkM1ptUW5NNVR6WnBRVEV5U201c1JuSjZjWFZtTXpo
      NU9XSmxURUp3VVZvS2VUWjJUelppZURCdmQyTjBWV3BJVlhFcmVVMHZaRU4zVDBjeU4zcG1PVFpv
      VVhsTFFtOWpUM2xDWlZRMmRuTnNkM2xWY2tnMFdtcHJkazV5UTNkblZnbzBRMlppWkZGSWMybFRS
      RTh2ZFU1YU9IRlRiRlpRUVUxTFJFMDFNMjl1YVZabWVtdHFNbWd6UVdVMFZsUk9hbWx5TVVSeGJV
      RXZTbXBHWVZGWlVXUmlDbVpWTW5aVk0wUm1ORkZ4YldOYVNXWkdjMjVsUjIxQ1dtcHdZa3B6ZGtS
      UE9TdERXRlZCV2xOS2NqTktNREJqVUZKRllVUnpPRTB6ZGxOdUswMXFjMmNLVFRWeWQybzVUV0p4
      ZUhCelZXbEJTa1UzYmtKRlVVNUtZbFZ0Tm5oTGJtOWlPREJ4U1d0cWFGUmlWM0pqTkc5bU0wRkNi
      MU5oT0c1RVUzcFpZMVk1UndwV1ZYbEdhVVZVVVdKek1tbHhOM2gzZFdrcmR6ZENjV1pIT0dwQmNW
      QXpjRXRGTjNJeGR5OWxhRXh4YlZWdkx6Um9ibVIwT1c1RWRERlJWVkpVU0RkR0NtaFVZM0lyYXk5
      TldGVTJNWEJFVW5SR1lVeHRNalpvY0dSUFJWcExVa3RHU2xCTE9FbDRhbG95VjJGbWNFaG9lV2hu
      T1VORWJrNVBTR3hhVjI5TFNYRUtaRk54WTFKT0wzbHBZMnBvV0RkRllXSm1UMWRVUjBwamVqbFNW
      WFZMZDFWMVYxUmtWVGRGU0RWbVN6TTNjRWRJVnpCbFluTlFMMlpVU25WRk1sUTFjQXBGUWtkRUsx
      Vm9lRGRUWW1RemN5dG9iR1l3YlFvOVVDczVhQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-80647-1
    - CJIS-5.6.2.1
    - DISA-STIG-RHEL-08-020200
    - NIST-800-171-3.5.6
    - NIST-800-53-CM-6(a)
    - NIST-800-53-IA-5(1)(d)
    - NIST-800-53-IA-5(f)
    - PCI-DSS-Req-8.2.4
    - PCI-DSSv4-8.3.9
    - accounts_maximum_age_login_defs
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Set Password Maximum Age
      lineinfile:
        create: true
        dest: /etc/login.defs
        regexp: ^#?PASS_MAX_DAYS
        line: PASS_MAX_DAYS {{ var_accounts_maximum_age_login_defs }}
      when: '"shadow-utils" in ansible_facts.packages'


# Ensure PAM Enforces Password Requirements - Prevent the Use of Dictionary Words
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_accounts_password_pam_dictcheck,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_rhv,multi_platform_ubuntu,multi_platform_sle
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure PAM Enforces Password Requirements - Prevent the Use of Dictionary Words
  hosts: 'vian.local'
  become: true
  vars:
    var_password_pam_dictcheck: '1'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzTjVRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      QTRVVkZCU1dwNGVuQlhjMFl2ZGxSR1pIQjZNbFJuWm5WbFlUWUtTVkpCWVdkSlRTOURNVE5rT0Ro
      V1IyUXlkV2c0ZWpWbVEyUkpaM2haUWpSMlpGbDFhMDVwZUhGcVRVZG1SbVJZY21Wc01ITTVRVUZM
      VlVScFUwNU5lQW92TUhsS1VTdGlkVkZNVGtwNlprcEdZVWd3YjNSWmQzQmxZV000T1RkMWVqRlJi
      a0Z1U1RkSU0xRjJNVFpWYVVKVFJVUmhlalpLTVhjd2J6ZEJkbTFNQ2tKSllsVjVWazgzY0VkWWNV
      aHRZVUZaY1RSTVpFNXlkMVUyTW5oeE9FRlNiMWx0YWpKdE9DOTRTMmxyWVZaV09UZENVVEJ3TkhW
      VFZXUlJhMWhEVm5VS2NXSnVjbXM1U1RKQmFGRm9UbGwzTUM5VVIzaEJWVXAxUzJ0NU1VTlRVMFpR
      Y1hnNGJFVTBObTFJT0cxSkx6bFpjVVIzTjBwemFVSklZWEpaVDJGdGVncHVTVzlGVWxkQlIzZ3JX
      VW92ZFRoM1ZWRjBkblZ1Y1UxT1UyNWxlamt3WW5RNVEzSkxUR0pzYkc5Mk5WVkhSa2MxYmpscGJ6
      aEhTM294V21RNGFIZGtDbGxuWkVOVmFqaE9WM1kyYmxvMmNFUlVhRWxuY3pBNGVUQllOblZFZG10
      VWEwaGFiamxsYldsdFltaElVV3A2T0dsalVUSldTVFZLZURGQ1pWb3ZPVEFLTTBkMlkxcExXRkZF
      ZVdoelpVSmpZMlp4YWxkbmJITnJkMUpNY2pGdlZEZzVPVzgyWlZKc2VIazJSa1ZLWkU1RWMxTTJi
      V0pWY21OdFl6WjJWMVppYlFwVWNYTldMMVZXVUdWMmVXdDNOMHhXZEZKWWJIZHhRbVpKVmpCcFNE
      Vm9hbVpzUm5Vek5VTldVV0ZLZVc1SmIwdEtaWHBXVml0VGNqQkpOMnRyTkVsVUNtRjRibEU1TjJ4
      UlJVRnllRXROZUVnMlVHMVBZM1pEWlZSRFNVZDVjVlJ1UkRNclZTOXRORThyZGtsWFZ6VTJMMjVy
      UnpaTVoycE1WREphY1ZsU1dXUUtURTlNUmswelNuRkhiMFIwT0hGcGVEWjNjMHh5Ums5a2JqQm5l
      VmxRWm5KWlJEQjNNVU15YW5wSWJDOTRXRTVZVlhKSlREaHpWMFYyYjJwMVFtSkpXUXBSUjFSQ2R6
      WlhjSEZLT0dodk1HNVlVRlZzYndvOWFrbFNaQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-86233-4
    - DISA-STIG-RHEL-08-020300
    - NIST-800-53-CM-6(a)
    - NIST-800-53-IA-5(1)(a)
    - NIST-800-53-IA-5(4)
    - NIST-800-53-IA-5(c)
    - accounts_password_pam_dictcheck
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Ensure PAM Enforces Password Requirements - Prevent the Use of Dictionary Words - Ensure PAM variable dictcheck is set accordingly
      ansible.builtin.lineinfile:
        create: true
        dest: /etc/security/pwquality.conf
        regexp: ^#?\s*dictcheck
        line: dictcheck = {{ var_password_pam_dictcheck }}
      when: '"pam" in ansible_facts.packages'


# Ensure PAM Enforces Password Requirements - Minimum Different Characters
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_accounts_password_pam_difok,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_rhv,multi_platform_ubuntu,multi_platform_sle
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure PAM Enforces Password Requirements - Minimum Different Characters
  hosts: 'vian.local'
  become: true
  vars:
    var_password_pam_difok: '2'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUk5RVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      cG9kMUF2UVhSalpEWktiV040YmpaMVpEQlhRM2hDYkU5MlFsUUtURTAyWXpWMU1HNUJlR2N6TTFO
      UGFsbGFhbk5VVjB0RmVHVlhUMDA0VUVKNVZIQnNRemxTTkZvck5sbE5SbVl2U3pBMmJGazRRbXh5
      YlZsbmFtdDFZZ3BpYkdWWGNubHpTamcxVkRONFVEUmxPV3B0YURVeFVpOXdSak5YZWxNeFpYVmha
      V0Y1YldkbmREZExaalZYTDFoRWRFOUNPVEJUUm1kU1lXbzNiamRqQ2tzMGVFZFFXVkJQVDI5bWNU
      WkJXV3gwTVVreVFWQkpjV2xFVFdkT1RVdE9UMVpIVm5GMFptcHVXWEF3Tkc0elJIbFVSR1ZpVjJG
      UWQwWm9SRFl6UTA0S1FVSmhjV1pwZDBWdEsxVlhjelpyV1RVNVJEVkhLeXRtZVhSM2FuY3ZjSFZF
      Y1d4YVRrcHNiRmhrWldoaFEzVmlUVW81Y3paRllrMUlielZFYVZkd1RBb3JUbGhTWm1GM1JsZDJO
      Mk12VEUxRVltTlZObFpLUzFwTFlWUmlXa3gxWmtORFRHSTBOV3hoYjJzeGRsTnZkM1ZaZG5rMmFt
      dDBRMUJvYXpoaFFsbFZDbGxrV0dONmVXTjVNbkZ2Y1dOemNsWmhVRXRTYmtNcmFVNW5iV2xYYW1G
      VE9GRTFNVTVtUW5rNVNFRTNkRlJTTlN0emRXTnpTMGRuYUZOM05GTkdRMm9LVTFGSFdrdEpUbE53
      TTB0c1QwazFla0pZYTBJMVMwNXNXa3RvZGpWV2JsTldiVTVXVmt4ME5XRnFjazU0WVU1TldWRmxR
      a1oxYlU1SmFWVjZkelZ5ZUFwNksySTRUMHBuY1VoWFNXUk5ObU5pV1cxckwxUkpRWEV3WjNGNFlr
      RlhVVFZaTWxVeU1tMTBaMmRLYTJZemQybHViMGhGV0V0a1FVbDFaMDh2TUZVNENqSTNlVkUzT0d0
      c2QycGlOWEJJU1Vzd1EzUnBZVlZ2WWxKdVNDdEJVVWMwUWpSVFVuWmpPRVY2TTB3MVNWVTBlRE5C
      VTBwVFJsbElUVVEwUm10aVVUSUtjelJEUVhKemRsQjNkbmt5ZVhaa00xWm1hREYyYjFSblptdFZZ
      MEZhTVVGcmVGQnRia2xoUjFsS2RubEdlVXR5YkdKbVIxbG1ZakpYV2s1NkwwcG5jUXBqVmxRdlIy
      OTVkMWQ2VTNCT1NFZE5PVWRXYXdvOVFXUkdNZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-80654-7
    - CJIS-5.6.2.1.1
    - DISA-STIG-RHEL-08-020170
    - NIST-800-53-CM-6(a)
    - NIST-800-53-IA-5(1)(b)
    - NIST-800-53-IA-5(4)
    - NIST-800-53-IA-5(c)
    - accounts_password_pam_difok
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Ensure PAM Enforces Password Requirements - Minimum Different Characters - Ensure PAM variable difok is set accordingly
      ansible.builtin.lineinfile:
        create: true
        dest: /etc/security/pwquality.conf
        regexp: ^#?\s*difok
        line: difok = {{ var_password_pam_difok }}
      when: '"pam" in ansible_facts.packages'


# Ensure PAM Enforces Password Requirements - Enforce for root User
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_accounts_password_pam_enforce_root,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure PAM Enforces Password Requirements - Enforce for root User
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-83377-2
    - NIST-800-53-CM-6(a)
    - NIST-800-53-IA-5(1)(a)
    - NIST-800-53-IA-5(4)
    - NIST-800-53-IA-5(c)
    - accounts_password_pam_enforce_root
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzTjZRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      ZzBNRkF2YWpCeGIzWlNNbTQ0VTBJek1FUmliM1JwTDNsMVQwY0tURUVyWVM5VVNrWnNhVkpNYUds
      UE5tTnpXalJxT1ZacU9XbEVhR0p0V2xaTkswcHpZbXBHY25kM2IxWmxRMlpuY0hWNGJHaEJZM0J1
      Ym5CTVpITldOZ3BSU2xKYWFESjZTVVpHYlRkSGNVSlNPVVpwY1VVNE0zUllVekpaYUNzck5XOHpj
      M1pqYW01V1JYWTBUakIyV2pOMFlrSllTRGRCTUhkc2RqWmtiMUpDQ2t0QlFscFBPV1ZYYUVkMlkw
      dEhiek5pZDJsRFYxTlhlR1UxZFZoQ1Z6ZHdaMEVyTVdOUmVVcGFSWFF3UkVkVldtbFdZM2RTVlV4
      WVUya3paa3hCVUNzS1RscDNRMkpYTWxCQmEyNWpZMGQ1U0ZkUU9VdFpRWE50T1RoVFdHWm9iV2RM
      Y1ROek1tZ3dTeko0VVhaVVlsZDFibFZIU0RsRFlsZDJiRFY0WWlzMlpncHpVakJFTDJKMVF6UjRi
      RzV4VlhsdlRIaEpUbEJuTVVsWVluWkxiR1IyUnpkM1R5dGpXRk5yVm5FNWVtMUJjblY1VVRRclFt
      ZzVVR2h5TUdOdU4xZEJDbmRuZUd0cmVUZFNNMkpuZW1WVVUzSmhla293WTNaVVJYZFBNVlozWVNz
      NWFYZGpXR3RMV2xwcU1uQlhTVGxHTjBvd1IzWklZbFkxY210dWNUTlhNMHNLZGpWR1YzWjFWVmw1
      YTBwUlppc3pNMll6YkhSb2FIRnljV0UyVW5oVE9WRTFVV1J3V1RKdVpDOXJNSEJrWjFKRGN6VTNN
      V2N2Y2t3MFNGVlFNRlF2ZEFwR1kxQmhZelpRU2xGNU0xSnBWamMyVm1sQ1YzWlpkWEV5Y0c5S1JW
      a3ZiV2g0T0ZaWmRsZENOek5TVUVST1kwOUdWVFIxU0VNd09XVmFUa2xYYm05Q0NuTk1ORlYwUzNG
      Nk5sQmxORlZsZEVRck9IUXZNWEpMUTFaRlJuWm1WVGRQVjJOdE9UWXZUVGhtTmtnNWVFbHNNelZ5
      YzNsSk9VZEtjVTlVUkVoRFJHZ0taMDlSWVU5WlpFVmtibUpESzBZeGJHSnNNbHBIV0RoR1NrOU9Z
      WGhTWldKMk5ITnliazFOWWpGWGIzRllSRzkzZDFFM1ExRlJPVUpXYWtkUVJtbEJOUXBxV1VWUlJU
      aHNkVGgxWlRkd2RUSjRkWGhLVFFvOVFuZzBUZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Ensure PAM Enforces Password Requirements - Enforce for root User
      lineinfile:
        path: /etc/security/pwquality.conf
        create: true
        line: enforce_for_root
        state: present
      when: '"pam" in ansible_facts.packages'


# Set Password Maximum Consecutive Repeating Characters
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_accounts_password_pam_maxrepeat,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_rhv,multi_platform_ubuntu,multi_platform_sle
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Set Password Maximum Consecutive Repeating Characters
  hosts: 'vian.local'
  become: true
  vars:
    var_password_pam_maxrepeat: '3'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzTXhRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      ZEdORkF2TVdOcFJVOUpPVE5PU21sNGJqQm5NV0ZMV1hrMlpub0tVV3BOV205dFJVaHBPV1oyY0ZC
      allsUmFSRFJKVFVGdWJHcFlWbEpUVWxWSmRYUnZSbFpUY1ZNdlNHOTNTazAyWTNkWmExaDNRWG80
      YXl0MlFrSm1VZ3BoT1RWek1YVnllbWRpVm5wbFV6RldUMHg1VlVNck1HTkhMM04wU0d4RVlWRnlS
      bm8xYTBJdk4zTnJZbWsxWlVoaWJGb3hNMlp4Y1ZKYUsybGpZM0UyQ2xSQ1dHNTBUV0ZhZGpCa1lV
      SlFTa3RySzJ0QlpIbDFPRFJEWkdGYVZFNDBXbTg1ZDNwb2F6SlZjMXB5YkRCS2NuUjNRVzVMTDNW
      VmIycERWMkYzTkZFS1dXcFJhbWh0WkZCSWRDdEVkblpyTDJoSmRsWmljbXhJYjBneFZIQkZObkp2
      VTA0NVIzbFhVVk5PVURoNWVGZGFWRmhSYVdsSWFtdDFjVVpOWlhObGNRcDBjR05ZTVhSdVQwMTNl
      RVE1ZW5NNFppczFTMHROVUVsRFpXWlZaMDR3ZVU5T2JEaEZOVU5xVTJ0dVVUTjNUazF6TTBSc2NE
      UjFaMVZQZHpKVVFVcFdDbk4zUTFndlMxZHJkMkYyYW5KTGJWZE9hbkl5U0c4NVFVNVlNamNyZW01
      MlNIaG9kMGhvT0ZKcGRHUk5heTlJTjBablFUSXdlRzVsZFc1RlRVZHdTRGdLVkZwbk1HUm5iR050
      Y0RsRlZFVkJkMVYxVm01MmRqQm9iRkZwVVN0ak9HZzFSR2MzZG14aVNUaE5PRUZ1V0ZZelMzbFpl
      RTlJY0ZCS2IxQkdUREpIYXdwS1EyZ3JibVZLU0VJMlQxZ3dSWEZPVW1oUGNtb3pjVlpRTUZwUk9W
      a3pPSGMwY2s1VlduVnVPVEpRVkhaeVluTm5WSGRzUzB0aE4xRnBjMGgwY1dZM0NtUklSM2xuZEhK
      SmFDdFphM2xGVmpka04zbFRXbEJNVFRkS2JVOXNOak5ZVDJ4cVdEZHhXVVJwTkU5UmEycDFURFpR
      Ymlzd1RXcFZaMWQzU0ZaTE1Fc0tNR2Q0UlhsTVFqTmhUMFJ1TVdkRlVHdHViakpyY0dFMFFYSXZj
      VEkwVFU5d1dEUm9XakJUTUV4NVYyOTNOVTFxUkd0UGMyNXhWVm96TkVob2J6QXlZZ3BqYW5ob1ZX
      SldMMXBxUzNCTlpIWkhaRWwyWndvOU0yWjFhUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-82066-2
    - DISA-STIG-RHEL-08-020150
    - NIST-800-53-CM-6(a)
    - NIST-800-53-IA-5(4)
    - NIST-800-53-IA-5(c)
    - accounts_password_pam_maxrepeat
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Set Password Maximum Consecutive Repeating Characters - Ensure PAM variable maxrepeat is set accordingly
      ansible.builtin.lineinfile:
        create: true
        dest: /etc/security/pwquality.conf
        regexp: ^#?\s*maxrepeat
        line: maxrepeat = {{ var_password_pam_maxrepeat }}
      when: '"pam" in ansible_facts.packages'


# Ensure PAM Enforces Password Requirements - Minimum Different Categories
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_accounts_password_pam_minclass,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_rhv,multi_platform_ubuntu,multi_platform_sle
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure PAM Enforces Password Requirements - Minimum Different Categories
  hosts: 'vian.local'
  become: true
  vars:
    var_password_pam_minclass: '4'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzTjZRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      dERhMUF2UVhjd1ltdFNNVXBSUVdvMk5qQkVaMEl5YzJOc2ExRUtiMkpxU3pWbFRUWm9jR2x3VldG
      aVduazNaMDUwY3pOSVEyRnhTMmswTTNGNVRUVXZka1JsTHpnM2R6Sk9TMFJSVjNjd2VrUjFiV2h2
      YjNwMEx6QTFjd3BpVVhaWFN6aHFVVkE0Wm14NU9EQjBNRVJMZG05T1dHOXRUSEJTU0VSR1pWVnhP
      RVl5UTJabE1IQmhNMVZ1TUVaSWNWSTVhVFJ1TWsxelVsVmhlVVF6Q20xUFkwMTJWaXQ1UTBWV05F
      UjFhamgyVVdWcWNFaHBXRFV6TTNCNk9TODBiMDV5UkRKMFQzUXJUbEpTT1VabmNsQlFaRGREUjBs
      RksyWk1XWGt3V1hRS1YzWk5XRkZLV21keWVTdFZkVFF5TldoWk0zQnhTVlJyV2xKc1NFbE5jMnN6
      YmtVMldFczVha0pUZEd4bFdubHBRMk12UkhsNVVIUnBORU5VZFd4UWNBcG5NM2RtYlZZMFQwVTJX
      VU5rVkhSd01rWTFNME5NV0U5WmFtcEhTVGhKYmtOeE5qZ3lieXRTTnpoa05XbExkRUl5VTBGVk1H
      aG9hSEZ3V20wM2F6RjJDa2N4SzJOd1lsZFdTVE5UTTBWallWVTNhalJ2TTBoSVQzWjNaaXRuZWts
      NU1taE5Sa0pYVGxwbU1VZDJNSFF3YlVsTWJVNXNSRUpIVUdodVIzcEhiVXdLZEhONU1FZDVVbGhX
      WWpocVNXbFpPVEZYTW1Zdk5tRnZNbm8zZW5GemRHNW5ObVJQZVc5RWEyTnVUR0ZRY1RFemRtRm9O
      bkY1WlROcVN6UktWemhSUlFwd04yUlZMM2hKTVZOd01EQjVUMlZHT1hCclVEZzBhV2N6VFdsMWFt
      Y3lWV05NZDJaV05VbEpOMkpOYVVvMmVtRkRjemRHVUZsMWFqbFZOalJpTUdGeUNuQlRNa2w0YmxV
      M01saEZRMXBLWm14bFEybElXR0pCYVhWek1ucEtSbU5NUmxaQmQxaG1TMjV0WkZJdmQwSlhSVk5r
      WldFM1ZGSkZXRXcwUTBKNUx6QUtjMWxvVjBoSWVuTlRSbEEyTldZMlFuVlNkMWx6U2xncldtVldO
      bFJTWjFwUldWSk5OMUpzZFhoQmNFcFBLM055TWpSWFVpdFFkRFZJWjBNeUt6TnVXQW94V1dkR1RF
      NVRPREo2ZUdOSllqbG1NbU00UXdvOWJDOUxiQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-82046-4
    - DISA-STIG-RHEL-08-020160
    - NIST-800-53-CM-6(a)
    - NIST-800-53-IA-5(1)(a)
    - NIST-800-53-IA-5(4)
    - NIST-800-53-IA-5(c)
    - accounts_password_pam_minclass
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Ensure PAM Enforces Password Requirements - Minimum Different Categories - Ensure PAM variable minclass is set accordingly
      ansible.builtin.lineinfile:
        create: true
        dest: /etc/security/pwquality.conf
        regexp: ^#?\s*minclass
        line: minclass = {{ var_password_pam_minclass }}
      when: '"pam" in ansible_facts.packages'


# Ensure PAM Enforces Password Requirements - Minimum Length
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_accounts_password_pam_minlen,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_rhv,multi_platform_ubuntu,multi_platform_sle
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure PAM Enforces Password Requirements - Minimum Length
  hosts: 'vian.local'
  become: true
  vars:
    var_password_pam_minlen: '14'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzTXdRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      SnZVVkF2YVUwMlYyVXZlbXRWVVVSd01HRkNZa1J4Y0hrNGFHc0tLM0F3SzBkYWJXTlJjR2t5VkhS
      dFJ5dFNWRk5TUlZWYVJsRTJkVWhKY0dwQmRqaEtUWEJ3VTNWd05HbzRkVE5xY20xeEszWXJhRWcx
      WWtWMFNsVlJTZ3BuVXpKNVUwZE1hVXRpY2l0cmVUUjJibmxQYW01UVdtdHllV2sxVTFad01GZENW
      ek5rYlZRMldGQm5hMFpvWWs5R09TOXBSMGt5TnpKR2VFbFRLMGQ0Q2tOUVltZzNUVVpRWjBoYWJu
      WkxjWG95UVcxQ1RrdHNTRnBhY1VKVVdIcFJjRTEzY0hjdlJUUkVaMlp4UWl0YVMxb3pSVkJXVkcx
      b1FUQmxLMjR2VlM4S1dXNTJZazFIVkVzMVIxaG1hMjE1TjI4d2VuSXhlVEZsYlM5alJUWnVUM1ZD
      WVdKMGJHMXpMMHRxVG1oWFJtaG1ZbHBOU1hGWllrUkJSR3RHUWxZMGFncHlhMjVxVjBoNVkwMVhS
      RkF6ZDBoWVlqWm9kRkZSYkZkRE1ERjZXVlY0ZWxoMWVEQXZkRUZaUWxOcVEyOU1lVnBTWkRoRllV
      SkdNVTVpYUd0T0wwWk5DblpDYjFWcFFrOUpMMHgxV0dkcWVraHBLMDU0ZFc4dlMyWlRia1JGYWta
      a2FqQXZRa0k1VTJKd2J6WjVUMUJpWWpCMldHbHpSWFpNWWxabFMyZHZaU3NLVkVGdmVWTk5NbFJ2
      TUdab1YycExTbGhxVVU5dlpUY3Jla0ZIWm1acFZuUnFkMlJaTkhSb2MwUlNRVmxCVW14YUwwVjJj
      MlJCYzNWSGVFd3hkWGxwZEFwSGNtMTFWbUppTWxOclNHZDZjRlZyUkN0c1QwaHZkVU52ZUVNM1RU
      ZEViRUUyY0VGbGJHaEVWVmxNVDBZd1IzWlNXbFpqZG0xcFNrRkhiM2hEY21sTUNsQTVSVWR1Wkhw
      UVRWSTRTVmc0UlV4S2QxVnJNbWRuYzJoV2VXVXdUbmN3YVhNeldXeG9XbmR5WVcxTVNtaG9MMFZ2
      YjBaQ2IyRktRazFZVUZkdVluRUtURk5zY2pWb1JsRnVNMmRQZW1ZM1JIQnVjVzl6UW5wd1FtZGxk
      RTlpYW1wMFN6Wk9UbG94TVhRNVp6bGljbEYwZVZwbEszTlFSemhpU2xRcmIxRkNVQW94V20wM1pr
      RjBLMUpGWWpsVVNDOXFLMjFrYWdvOWQxUkpid290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-80656-2
    - CJIS-5.6.2.1.1
    - DISA-STIG-RHEL-08-020230
    - NIST-800-53-CM-6(a)
    - NIST-800-53-IA-5(1)(a)
    - NIST-800-53-IA-5(4)
    - NIST-800-53-IA-5(c)
    - PCI-DSS-Req-8.2.3
    - PCI-DSSv4-8.3.6
    - accounts_password_pam_minlen
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Ensure PAM Enforces Password Requirements - Minimum Length - Ensure PAM variable minlen is set accordingly
      ansible.builtin.lineinfile:
        create: true
        dest: /etc/security/pwquality.conf
        regexp: ^#?\s*minlen
        line: minlen = {{ var_password_pam_minlen }}
      when: '"pam" in ansible_facts.packages'


# Limit Password Reuse: password-auth
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_accounts_password_pam_pwhistory_remember_password_auth,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_rhv,multi_platform_sle
# reboot = false
# strategy = configure
# complexity = low
# disruption = medium
- name: 'Limit Password Reuse: password-auth'
  hosts: 'vian.local'
  become: true
  vars:
    var_password_pam_remember: '24'
    var_password_pam_remember_control_flag: requisite,required
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzTXdRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      aFZjMUF2YW1OUWF6RlJVM1JLYVU5RmF6WjBhbkp0YlhkdGJsQUtVRGs1ZFRKWlpVZEtUSGRHY0ZN
      MFVFdzJUVkJQVlhOWk0wUTFlV2syUldGTWJucDJiSGgxU0ZkTGNqUnZhMEpGVUN0clVXdDNNR3RJ
      UjI5elRUUmpaQXAyTVhjdlJHbHBLM3AyYzFONVZDczRSVEp2YTFwNVJpdDZPVEpVVVRGVVdWaEZa
      M2t5TURkVmJqUnZWR2RZYUdnemMwaEtXRWQyZWpSQ1RqaDNLMGRDQ2xWSVIydHBSWEE0V1VSTVIy
      OUlabXQ0VTFNMGFuWlJTMWxQVGpabmJ6TkJiWFIzUVVSQk9GZFlRMVJ4ZW1STGNDdGtTVklyY1VS
      b1ltWnBaSE5OYUZZS1oxRjRRWGgyTXpKR2NteGxRMGR5WXpGR2VYaG9aWFp0U1hSclduVjZVM1pz
      WVM5cWMycHBWakk0U2tzNE1DdFlLM2RHVUUwMFRqTXlTek5XWVZocVpRcFdNMVYyVVZSNVkxQmhT
      RE5EVmxCa05tZHRTbnBqY0Vkdk1EQXhLMnQzTkhadWVEUnBjeTlJV2pSNk9VMXFUUzlSYVV0elpF
      Wm1aV1pWT0RsV2VXSktDblJDYW5KcVpIZ3hhV2R3VkVOdmNVSTBaV3hGWWxSdlpUbFdVbWhDU0d4
      aVVFNUdlRTlrUmtwbVYwYzNiMWMzVVhwMVMxQTNXbTlZWXpSMGNGWkplbE1LUzB4MFV6aFVSMjFa
      U25wNlJERTBTVXcwY1dwSWRYTlBha1JGTmtRMmFsazFTRXRRYzI5MWRreE9UVk5KYmxBd2RVcENh
      REZ3VjNGWkszUk5XREo2UkFwNVFXWklka1V3WjBGM1F6UXpOM2hoYkUxcWMzbHhLMFptYUdwSWMx
      WjNkbXMzTldOSVVreDZkMVl3UXk5QlJ6VjRNM1ZGUmsxclZWWkRNM0ZYVVRac0NsUjNlVFJZVlRo
      MVZ6ZHVOMEpGT1hWemVrWjZiMU53T1V4cGIzQjBTR2h6TVRFclVGVkVWQzl3WkRCRVpqYzJkRE1y
      WkV0MFFrVlVZWEpKY25wMmRXZ0tlRUphYzNoSFoxZ3dSa1kzY1N0WVR6UmtTVWxhU0RKWk1IWXdO
      alJrVFhGWlNuVjBVWEYwYTFKVWF6aE1NMWxPVUhaM1F6QnBaa1pqTVZnNFRFdGtNQXBCVWtWSGRF
      aDRkSGRKVWxkV1N6aFFTbWxMYndvOVprVTNkd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-83478-8
    - CJIS-5.6.2.1.1
    - DISA-STIG-RHEL-08-020220
    - NIST-800-171-3.5.8
    - NIST-800-53-IA-5(1)(e)
    - NIST-800-53-IA-5(f)
    - PCI-DSS-Req-8.2.5
    - PCI-DSSv4-8.3.7
    - accounts_password_pam_pwhistory_remember_password_auth
    - configure_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - no_reboot_needed
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: 'Limit Password Reuse: password-auth - Check if system relies on authselect tool'
      ansible.builtin.stat:
        path: /usr/bin/authselect
      register: result_authselect_present
      when: '"pam" in ansible_facts.packages'

    - name: 'Limit Password Reuse: password-auth - Collect the available authselect features'
      ansible.builtin.command:
        cmd: authselect list-features minimal
      register: result_authselect_available_features
      changed_when: false
      when:
        - '"pam" in ansible_facts.packages'
        - result_authselect_present.stat.exists

    - name: 'Limit Password Reuse: password-auth - Enable pam_pwhistory.so using authselect feature'
      block:

        - name: 'Limit Password Reuse: password-auth - Check integrity of authselect current profile'
          ansible.builtin.command:
            cmd: authselect check
          register: result_authselect_check_cmd
          changed_when: false
          failed_when: false

        - name: 'Limit Password Reuse: password-auth - Informative message based on the authselect integrity check result'
          ansible.builtin.assert:
            that:
              - result_authselect_check_cmd.rc == 0
            fail_msg:
              - authselect integrity check failed. Remediation aborted!
              - This remediation could not be applied because an authselect profile was not selected or the selected profile is not intact.
              - It is not recommended to manually edit the PAM files when authselect tool is available.
              - In cases where the default authselect profile does not cover a specific demand, a custom authselect profile is recommended.
            success_msg:
              - authselect integrity check passed

        - name: 'Limit Password Reuse: password-auth - Get authselect current features'
          ansible.builtin.shell:
            cmd: authselect current | tail -n+3 | awk '{ print $2 }'
          register: result_authselect_features
          changed_when: false
          when:
            - result_authselect_check_cmd is success

        - name: 'Limit Password Reuse: password-auth - Ensure "with-pwhistory" feature is enabled using authselect tool'
          ansible.builtin.command:
            cmd: authselect enable-feature with-pwhistory
          register: result_authselect_enable_feature_cmd
          when:
            - result_authselect_check_cmd is success
            - result_authselect_features.stdout is not search("with-pwhistory")

        - name: 'Limit Password Reuse: password-auth - Ensure authselect changes are applied'
          ansible.builtin.command:
            cmd: authselect apply-changes -b
          when:
            - result_authselect_enable_feature_cmd is not skipped
            - result_authselect_enable_feature_cmd is success
      when:
        - '"pam" in ansible_facts.packages'
        - result_authselect_present.stat.exists
        - result_authselect_available_features.stdout is search("with-pwhistory")

    - name: 'Limit Password Reuse: password-auth - Enable pam_pwhistory.so in appropriate PAM files'
      block:

        - name: 'Limit Password Reuse: password-auth - Define the PAM file to be edited as a local fact'
          ansible.builtin.set_fact:
            pam_file_path: /etc/pam.d/password-auth

        - name: 'Limit Password Reuse: password-auth - Check if system relies on authselect tool'
          ansible.builtin.stat:
            path: /usr/bin/authselect
          register: result_authselect_present

        - name: 'Limit Password Reuse: password-auth - Ensure authselect custom profile is used if authselect is present'
          block:

            - name: 'Limit Password Reuse: password-auth - Check integrity of authselect current profile'
              ansible.builtin.command:
                cmd: authselect check
              register: result_authselect_check_cmd
              changed_when: false
              failed_when: false

            - name: 'Limit Password Reuse: password-auth - Informative message based on the authselect integrity check result'
              ansible.builtin.assert:
                that:
                  - result_authselect_check_cmd.rc == 0
                fail_msg:
                  - authselect integrity check failed. Remediation aborted!
                  - This remediation could not be applied because an authselect profile was not selected or the selected profile is not intact.
                  - It is not recommended to manually edit the PAM files when authselect tool is available.
                  - In cases where the default authselect profile does not cover a specific demand, a custom authselect profile is recommended.
                success_msg:
                  - authselect integrity check passed

            - name: 'Limit Password Reuse: password-auth - Get authselect current profile'
              ansible.builtin.shell:
                cmd: authselect current -r | awk '{ print $1 }'
              register: result_authselect_profile
              changed_when: false
              when:
                - result_authselect_check_cmd is success

            - name: 'Limit Password Reuse: password-auth - Define the current authselect profile as a local fact'
              ansible.builtin.set_fact:
                authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                authselect_custom_profile: '{{ result_authselect_profile.stdout }}'
              when:
                - result_authselect_profile is not skipped
                - result_authselect_profile.stdout is match("custom/")

            - name: 'Limit Password Reuse: password-auth - Define the new authselect custom profile as a local fact'
              ansible.builtin.set_fact:
                authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                authselect_custom_profile: custom/hardening
              when:
                - result_authselect_profile is not skipped
                - result_authselect_profile.stdout is not match("custom/")

            - name: 'Limit Password Reuse: password-auth - Get authselect current features to also enable them in the custom profile'
              ansible.builtin.shell:
                cmd: authselect current | tail -n+3 | awk '{ print $2 }'
              register: result_authselect_features
              changed_when: false
              when:
                - result_authselect_profile is not skipped
                - authselect_current_profile is not match("custom/")

            - name: 'Limit Password Reuse: password-auth - Check if any custom profile with the same name was already created'
              ansible.builtin.stat:
                path: /etc/authselect/{{ authselect_custom_profile }}
              register: result_authselect_custom_profile_present
              changed_when: false
              when:
                - authselect_current_profile is not match("custom/")

            - name: 'Limit Password Reuse: password-auth - Create an authselect custom profile based on the current profile'
              ansible.builtin.command:
                cmd: authselect create-profile hardening -b {{ authselect_current_profile }}
              when:
                - result_authselect_check_cmd is success
                - authselect_current_profile is not match("custom/")
                - not result_authselect_custom_profile_present.stat.exists

            - name: 'Limit Password Reuse: password-auth - Ensure authselect changes are applied'
              ansible.builtin.command:
                cmd: authselect apply-changes -b --backup=before-hardening-custom-profile
              when:
                - result_authselect_check_cmd is success
                - result_authselect_profile is not skipped
                - authselect_current_profile is not match("custom/")
                - authselect_custom_profile is not match(authselect_current_profile)

            - name: 'Limit Password Reuse: password-auth - Ensure the authselect custom profile is selected'
              ansible.builtin.command:
                cmd: authselect select {{ authselect_custom_profile }}
              register: result_pam_authselect_select_profile
              when:
                - result_authselect_check_cmd is success
                - result_authselect_profile is not skipped
                - authselect_current_profile is not match("custom/")
                - authselect_custom_profile is not match(authselect_current_profile)

            - name: 'Limit Password Reuse: password-auth - Restore the authselect features in the custom profile'
              ansible.builtin.command:
                cmd: authselect enable-feature {{ item }}
              loop: '{{ result_authselect_features.stdout_lines }}'
              register: result_pam_authselect_restore_features
              when:
                - result_authselect_profile is not skipped
                - result_authselect_features is not skipped
                - result_pam_authselect_select_profile is not skipped

            - name: 'Limit Password Reuse: password-auth - Ensure authselect changes are applied'
              ansible.builtin.command:
                cmd: authselect apply-changes -b --backup=after-hardening-custom-profile
              when:
                - result_authselect_check_cmd is success
                - result_authselect_profile is not skipped
                - result_pam_authselect_restore_features is not skipped

            - name: 'Limit Password Reuse: password-auth - Change the PAM file to be edited according to the custom authselect profile'
              ansible.builtin.set_fact:
                pam_file_path: /etc/authselect/{{ authselect_custom_profile }}/{{ pam_file_path | basename }}
          when:
            - result_authselect_present.stat.exists

        - name: 'Limit Password Reuse: password-auth - Check if expected PAM module line is present in {{ pam_file_path }}'
          ansible.builtin.lineinfile:
            path: '{{ pam_file_path }}'
            regexp: ^\s*password\s+{{ '{{ var_password_pam_remember_control_flag.split(",")[0] }}' | regex_escape() }}\s+pam_pwhistory.so\s*.*
            state: absent
          check_mode: true
          changed_when: false
          register: result_pam_line_present

        - name: 'Limit Password Reuse: password-auth - Include or update the PAM module line in {{ pam_file_path }}'
          block:

            - name: 'Limit Password Reuse: password-auth - Check if required PAM module line is present in {{ pam_file_path }} with different control'
              ansible.builtin.lineinfile:
                path: '{{ pam_file_path }}'
                regexp: ^\s*password\s+.*\s+pam_pwhistory.so\s*
                state: absent
              check_mode: true
              changed_when: false
              register: result_pam_line_other_control_present

            - name: 'Limit Password Reuse: password-auth - Ensure the correct control for the required PAM module line in {{ pam_file_path }}'
              ansible.builtin.replace:
                dest: '{{ pam_file_path }}'
                regexp: ^(\s*password\s+).*(\bpam_pwhistory.so.*)
                replace: \1{{ var_password_pam_remember_control_flag.split(",")[0] }} \2
              register: result_pam_module_edit
              when:
                - result_pam_line_other_control_present.found == 1

            - name: 'Limit Password Reuse: password-auth - Ensure the required PAM module line is included in {{ pam_file_path }}'
              ansible.builtin.lineinfile:
                dest: '{{ pam_file_path }}'
                insertafter: ^password.*requisite.*pam_pwquality\.so
                line: password    {{ var_password_pam_remember_control_flag.split(",")[0] }}    pam_pwhistory.so
              register: result_pam_module_add
              when:
                - result_pam_line_other_control_present.found == 0 or result_pam_line_other_control_present.found > 1

            - name: 'Limit Password Reuse: password-auth - Ensure authselect changes are applied'
              ansible.builtin.command:
                cmd: authselect apply-changes -b
              when:
                - result_authselect_present is defined
                - result_authselect_present.stat.exists
                - |-
                  (result_pam_module_add is defined and result_pam_module_add.changed)
                   or (result_pam_module_edit is defined and result_pam_module_edit.changed)
          when:
            - result_pam_line_present.found is defined
            - result_pam_line_present.found == 0
      when:
        - '"pam" in ansible_facts.packages'
        - |
          (result_authselect_available_features.stdout is defined and result_authselect_available_features.stdout is not search("with-pwhistory")) or result_authselect_available_features is not defined

    - name: 'Limit Password Reuse: password-auth - Check the presence of /etc/security/pwhistory.conf file'
      ansible.builtin.stat:
        path: /etc/security/pwhistory.conf
      register: result_pwhistory_conf_check
      when: '"pam" in ansible_facts.packages'

    - name: 'Limit Password Reuse: password-auth - pam_pwhistory.so parameters are configured in /etc/security/pwhistory.conf file'
      block:

        - name: 'Limit Password Reuse: password-auth - Ensure the pam_pwhistory.so remember parameter in /etc/security/pwhistory.conf'
          ansible.builtin.lineinfile:
            path: /etc/security/pwhistory.conf
            regexp: ^\s*remember\s*=
            line: remember = {{ var_password_pam_remember }}
            state: present

        - name: 'Limit Password Reuse: password-auth - Ensure the pam_pwhistory.so remember parameter is removed from PAM files'
          block:

            - name: 'Limit Password Reuse: password-auth - Check if /etc/pam.d/password-auth file is present'
              ansible.builtin.stat:
                path: /etc/pam.d/password-auth
              register: result_pam_file_present

            - name: 'Limit Password Reuse: password-auth - Check the proper remediation for the system'
              block:

                - name: 'Limit Password Reuse: password-auth - Define the PAM file to be edited as a local fact'
                  ansible.builtin.set_fact:
                    pam_file_path: /etc/pam.d/password-auth

                - name: 'Limit Password Reuse: password-auth - Check if system relies on authselect tool'
                  ansible.builtin.stat:
                    path: /usr/bin/authselect
                  register: result_authselect_present

                - name: 'Limit Password Reuse: password-auth - Ensure authselect custom profile is used if authselect is present'
                  block:

                    - name: 'Limit Password Reuse: password-auth - Check integrity of authselect current profile'
                      ansible.builtin.command:
                        cmd: authselect check
                      register: result_authselect_check_cmd
                      changed_when: false
                      failed_when: false

                    - name: 'Limit Password Reuse: password-auth - Informative message based on the authselect integrity check result'
                      ansible.builtin.assert:
                        that:
                          - result_authselect_check_cmd.rc == 0
                        fail_msg:
                          - authselect integrity check failed. Remediation aborted!
                          - This remediation could not be applied because an authselect profile was not selected or the selected profile is not intact.
                          - It is not recommended to manually edit the PAM files when authselect tool is available.
                          - In cases where the default authselect profile does not cover a specific demand, a custom authselect profile is recommended.
                        success_msg:
                          - authselect integrity check passed

                    - name: 'Limit Password Reuse: password-auth - Get authselect current profile'
                      ansible.builtin.shell:
                        cmd: authselect current -r | awk '{ print $1 }'
                      register: result_authselect_profile
                      changed_when: false
                      when:
                        - result_authselect_check_cmd is success

                    - name: 'Limit Password Reuse: password-auth - Define the current authselect profile as a local fact'
                      ansible.builtin.set_fact:
                        authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                        authselect_custom_profile: '{{ result_authselect_profile.stdout }}'
                      when:
                        - result_authselect_profile is not skipped
                        - result_authselect_profile.stdout is match("custom/")

                    - name: 'Limit Password Reuse: password-auth - Define the new authselect custom profile as a local fact'
                      ansible.builtin.set_fact:
                        authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                        authselect_custom_profile: custom/hardening
                      when:
                        - result_authselect_profile is not skipped
                        - result_authselect_profile.stdout is not match("custom/")

                    - name: 'Limit Password Reuse: password-auth - Get authselect current features to also enable them in the custom profile'
                      ansible.builtin.shell:
                        cmd: authselect current | tail -n+3 | awk '{ print $2 }'
                      register: result_authselect_features
                      changed_when: false
                      when:
                        - result_authselect_profile is not skipped
                        - authselect_current_profile is not match("custom/")

                    - name: 'Limit Password Reuse: password-auth - Check if any custom profile with the same name was already created'
                      ansible.builtin.stat:
                        path: /etc/authselect/{{ authselect_custom_profile }}
                      register: result_authselect_custom_profile_present
                      changed_when: false
                      when:
                        - authselect_current_profile is not match("custom/")

                    - name: 'Limit Password Reuse: password-auth - Create an authselect custom profile based on the current profile'
                      ansible.builtin.command:
                        cmd: authselect create-profile hardening -b {{ authselect_current_profile }}
                      when:
                        - result_authselect_check_cmd is success
                        - authselect_current_profile is not match("custom/")
                        - not result_authselect_custom_profile_present.stat.exists

                    - name: 'Limit Password Reuse: password-auth - Ensure authselect changes are applied'
                      ansible.builtin.command:
                        cmd: authselect apply-changes -b --backup=before-hardening-custom-profile
                      when:
                        - result_authselect_check_cmd is success
                        - result_authselect_profile is not skipped
                        - authselect_current_profile is not match("custom/")
                        - authselect_custom_profile is not match(authselect_current_profile)

                    - name: 'Limit Password Reuse: password-auth - Ensure the authselect custom profile is selected'
                      ansible.builtin.command:
                        cmd: authselect select {{ authselect_custom_profile }}
                      register: result_pam_authselect_select_profile
                      when:
                        - result_authselect_check_cmd is success
                        - result_authselect_profile is not skipped
                        - authselect_current_profile is not match("custom/")
                        - authselect_custom_profile is not match(authselect_current_profile)

                    - name: 'Limit Password Reuse: password-auth - Restore the authselect features in the custom profile'
                      ansible.builtin.command:
                        cmd: authselect enable-feature {{ item }}
                      loop: '{{ result_authselect_features.stdout_lines }}'
                      register: result_pam_authselect_restore_features
                      when:
                        - result_authselect_profile is not skipped
                        - result_authselect_features is not skipped
                        - result_pam_authselect_select_profile is not skipped

                    - name: 'Limit Password Reuse: password-auth - Ensure authselect changes are applied'
                      ansible.builtin.command:
                        cmd: authselect apply-changes -b --backup=after-hardening-custom-profile
                      when:
                        - result_authselect_check_cmd is success
                        - result_authselect_profile is not skipped
                        - result_pam_authselect_restore_features is not skipped

                    - name: 'Limit Password Reuse: password-auth - Change the PAM file to be edited according to the custom authselect profile'
                      ansible.builtin.set_fact:
                        pam_file_path: /etc/authselect/{{ authselect_custom_profile }}/{{ pam_file_path | basename }}
                  when:
                    - result_authselect_present.stat.exists

                - name: 'Limit Password Reuse: password-auth - Ensure the "remember" option from "pam_pwhistory.so" is not present in {{ pam_file_path }}'
                  ansible.builtin.replace:
                    dest: '{{ pam_file_path }}'
                    regexp: (.*password.*pam_pwhistory.so.*)\bremember\b=?[0-9a-zA-Z]*(.*)
                    replace: \1\2
                  register: result_pam_option_removal

                - name: 'Limit Password Reuse: password-auth - Ensure authselect changes are applied'
                  ansible.builtin.command:
                    cmd: authselect apply-changes -b
                  when:
                    - result_authselect_present.stat.exists
                    - result_pam_option_removal is changed
              when:
                - result_pam_file_present.stat.exists
      when:
        - '"pam" in ansible_facts.packages'
        - result_pwhistory_conf_check.stat.exists

    - name: 'Limit Password Reuse: password-auth - pam_pwhistory.so parameters are configured in PAM files'
      block:

        - name: 'Limit Password Reuse: password-auth - Define the PAM file to be edited as a local fact'
          ansible.builtin.set_fact:
            pam_file_path: /etc/pam.d/password-auth

        - name: 'Limit Password Reuse: password-auth - Check if system relies on authselect tool'
          ansible.builtin.stat:
            path: /usr/bin/authselect
          register: result_authselect_present

        - name: 'Limit Password Reuse: password-auth - Ensure authselect custom profile is used if authselect is present'
          block:

            - name: 'Limit Password Reuse: password-auth - Check integrity of authselect current profile'
              ansible.builtin.command:
                cmd: authselect check
              register: result_authselect_check_cmd
              changed_when: false
              failed_when: false

            - name: 'Limit Password Reuse: password-auth - Informative message based on the authselect integrity check result'
              ansible.builtin.assert:
                that:
                  - result_authselect_check_cmd.rc == 0
                fail_msg:
                  - authselect integrity check failed. Remediation aborted!
                  - This remediation could not be applied because an authselect profile was not selected or the selected profile is not intact.
                  - It is not recommended to manually edit the PAM files when authselect tool is available.
                  - In cases where the default authselect profile does not cover a specific demand, a custom authselect profile is recommended.
                success_msg:
                  - authselect integrity check passed

            - name: 'Limit Password Reuse: password-auth - Get authselect current profile'
              ansible.builtin.shell:
                cmd: authselect current -r | awk '{ print $1 }'
              register: result_authselect_profile
              changed_when: false
              when:
                - result_authselect_check_cmd is success

            - name: 'Limit Password Reuse: password-auth - Define the current authselect profile as a local fact'
              ansible.builtin.set_fact:
                authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                authselect_custom_profile: '{{ result_authselect_profile.stdout }}'
              when:
                - result_authselect_profile is not skipped
                - result_authselect_profile.stdout is match("custom/")

            - name: 'Limit Password Reuse: password-auth - Define the new authselect custom profile as a local fact'
              ansible.builtin.set_fact:
                authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                authselect_custom_profile: custom/hardening
              when:
                - result_authselect_profile is not skipped
                - result_authselect_profile.stdout is not match("custom/")

            - name: 'Limit Password Reuse: password-auth - Get authselect current features to also enable them in the custom profile'
              ansible.builtin.shell:
                cmd: authselect current | tail -n+3 | awk '{ print $2 }'
              register: result_authselect_features
              changed_when: false
              when:
                - result_authselect_profile is not skipped
                - authselect_current_profile is not match("custom/")

            - name: 'Limit Password Reuse: password-auth - Check if any custom profile with the same name was already created'
              ansible.builtin.stat:
                path: /etc/authselect/{{ authselect_custom_profile }}
              register: result_authselect_custom_profile_present
              changed_when: false
              when:
                - authselect_current_profile is not match("custom/")

            - name: 'Limit Password Reuse: password-auth - Create an authselect custom profile based on the current profile'
              ansible.builtin.command:
                cmd: authselect create-profile hardening -b {{ authselect_current_profile }}
              when:
                - result_authselect_check_cmd is success
                - authselect_current_profile is not match("custom/")
                - not result_authselect_custom_profile_present.stat.exists

            - name: 'Limit Password Reuse: password-auth - Ensure authselect changes are applied'
              ansible.builtin.command:
                cmd: authselect apply-changes -b --backup=before-hardening-custom-profile
              when:
                - result_authselect_check_cmd is success
                - result_authselect_profile is not skipped
                - authselect_current_profile is not match("custom/")
                - authselect_custom_profile is not match(authselect_current_profile)

            - name: 'Limit Password Reuse: password-auth - Ensure the authselect custom profile is selected'
              ansible.builtin.command:
                cmd: authselect select {{ authselect_custom_profile }}
              register: result_pam_authselect_select_profile
              when:
                - result_authselect_check_cmd is success
                - result_authselect_profile is not skipped
                - authselect_current_profile is not match("custom/")
                - authselect_custom_profile is not match(authselect_current_profile)

            - name: 'Limit Password Reuse: password-auth - Restore the authselect features in the custom profile'
              ansible.builtin.command:
                cmd: authselect enable-feature {{ item }}
              loop: '{{ result_authselect_features.stdout_lines }}'
              register: result_pam_authselect_restore_features
              when:
                - result_authselect_profile is not skipped
                - result_authselect_features is not skipped
                - result_pam_authselect_select_profile is not skipped

            - name: 'Limit Password Reuse: password-auth - Ensure authselect changes are applied'
              ansible.builtin.command:
                cmd: authselect apply-changes -b --backup=after-hardening-custom-profile
              when:
                - result_authselect_check_cmd is success
                - result_authselect_profile is not skipped
                - result_pam_authselect_restore_features is not skipped

            - name: 'Limit Password Reuse: password-auth - Change the PAM file to be edited according to the custom authselect profile'
              ansible.builtin.set_fact:
                pam_file_path: /etc/authselect/{{ authselect_custom_profile }}/{{ pam_file_path | basename }}
          when:
            - result_authselect_present.stat.exists

        - name: 'Limit Password Reuse: password-auth - Check if expected PAM module line is present in {{ pam_file_path }}'
          ansible.builtin.lineinfile:
            path: '{{ pam_file_path }}'
            regexp: ^\s*password\s+{{ 'requisite' | regex_escape() }}\s+pam_pwhistory.so\s*.*
            state: absent
          check_mode: true
          changed_when: false
          register: result_pam_line_present

        - name: 'Limit Password Reuse: password-auth - Include or update the PAM module line in {{ pam_file_path }}'
          block:

            - name: 'Limit Password Reuse: password-auth - Check if required PAM module line is present in {{ pam_file_path }} with different control'
              ansible.builtin.lineinfile:
                path: '{{ pam_file_path }}'
                regexp: ^\s*password\s+.*\s+pam_pwhistory.so\s*
                state: absent
              check_mode: true
              changed_when: false
              register: result_pam_line_other_control_present

            - name: 'Limit Password Reuse: password-auth - Ensure the correct control for the required PAM module line in {{ pam_file_path }}'
              ansible.builtin.replace:
                dest: '{{ pam_file_path }}'
                regexp: ^(\s*password\s+).*(\bpam_pwhistory.so.*)
                replace: \1requisite \2
              register: result_pam_module_edit
              when:
                - result_pam_line_other_control_present.found == 1

            - name: 'Limit Password Reuse: password-auth - Ensure the required PAM module line is included in {{ pam_file_path }}'
              ansible.builtin.lineinfile:
                dest: '{{ pam_file_path }}'
                line: password    requisite    pam_pwhistory.so
              register: result_pam_module_add
              when:
                - result_pam_line_other_control_present.found == 0 or result_pam_line_other_control_present.found > 1

            - name: 'Limit Password Reuse: password-auth - Ensure authselect changes are applied'
              ansible.builtin.command:
                cmd: authselect apply-changes -b
              when:
                - result_authselect_present is defined
                - result_authselect_present.stat.exists
                - |-
                  (result_pam_module_add is defined and result_pam_module_add.changed)
                   or (result_pam_module_edit is defined and result_pam_module_edit.changed)
          when:
            - result_pam_line_present.found is defined
            - result_pam_line_present.found == 0

        - name: 'Limit Password Reuse: password-auth - Check if the required PAM module option is present in {{ pam_file_path }}'
          ansible.builtin.lineinfile:
            path: '{{ pam_file_path }}'
            regexp: ^\s*password\s+{{ 'requisite' | regex_escape() }}\s+pam_pwhistory.so\s*.*\sremember\b
            state: absent
          check_mode: true
          changed_when: false
          register: result_pam_module_remember_option_present

        - name: 'Limit Password Reuse: password-auth - Ensure the "remember" PAM option for "pam_pwhistory.so" is included in {{ pam_file_path }}'
          ansible.builtin.lineinfile:
            path: '{{ pam_file_path }}'
            backrefs: true
            regexp: ^(\s*password\s+{{ 'requisite' | regex_escape() }}\s+pam_pwhistory.so.*)
            line: \1 remember={{ var_password_pam_remember }}
            state: present
          register: result_pam_remember_add
          when:
            - result_pam_module_remember_option_present.found == 0

        - name: 'Limit Password Reuse: password-auth - Ensure the required value for "remember" PAM option from "pam_pwhistory.so" in {{ pam_file_path }}'
          ansible.builtin.lineinfile:
            path: '{{ pam_file_path }}'
            backrefs: true
            regexp: ^(\s*password\s+{{ 'requisite' | regex_escape() }}\s+pam_pwhistory.so\s+.*)(remember)=[0-9a-zA-Z]+\s*(.*)
            line: \1\2={{ var_password_pam_remember }} \3
          register: result_pam_remember_edit
          when:
            - result_pam_module_remember_option_present.found > 0

        - name: 'Limit Password Reuse: password-auth - Ensure authselect changes are applied'
          ansible.builtin.command:
            cmd: authselect apply-changes -b
          when:
            - result_authselect_present.stat.exists
            - (result_pam_remember_add is defined and result_pam_remember_add.changed) or (result_pam_remember_edit is defined and result_pam_remember_edit.changed)
      when:
        - '"pam" in ansible_facts.packages'
        - not result_pwhistory_conf_check.stat.exists


# Limit Password Reuse: system-auth
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_accounts_password_pam_pwhistory_remember_system_auth,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_rhv,multi_platform_sle
# reboot = false
# strategy = configure
# complexity = low
# disruption = medium
- name: 'Limit Password Reuse: system-auth'
  hosts: 'vian.local'
  become: true
  vars:
    var_password_pam_remember: '24'
    var_password_pam_remember_control_flag: requisite,required
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzTXhRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rs
      bFlVVkF2YVVwT2NsbDRUR1Z3VEV4cWRHZFlZMWRFTnpFd1NHZ0tlWFk0U0hSdk9UQnZZVkZzYjNZ
      clVYQk5TME5DUnpnMlkwNUZiRVpVTnpFNVpqRkJMMjlMZUhwQlIzVXlXblJGYmsxWFFUWlFVMVJE
      YzA1WlZGRjBZd3ByUW1Gd1ZGcHRPVnBSWTJ4WGMzSjRkVGx6TVRob05WVlVlSGxEZVZCWE55OHZO
      MlZPYVZGNVlrUlFabVY1Y1cxNFVqTnJWMlF5WW1SRmEzWkRZV2c0Q214NmNIbG5ibkU0TXpBMlpq
      SnBORzQyYzFCRVkzTjVZM013Wm1OdVdHNTVlR0ZqT1c1M1N6UlpaR05xWlhOelpIVkRNSFZHY1Zs
      M1pqRnpUelUwZEZjS1dpOXhLMFUxZWxKaFpFdFdlazlSUld3M1FsbHdaVmxLZVRkeWNHNWFTVmRH
      T1ZGSlFuUmliazlOYm1OTU0xTmlRbGhzYmpkRlNEaFlSa1pUWTNOcU9Rb3pWWEl3TDJ3ME5HMVZP
      R3hRYXk5UVVuVk9lWGhyVlRKbmVYVlJlbk5MUWxsYU1ISjNOa2s0VXlzM1JYSk1jMkl4UzIxeWMx
      RnlWVXRRT0RnNFVreHBDbE1yUVVsR1ZGWmpVMkozWnpOWWNrb3pOakpJTVRNelRuTmtkR2swWW1J
      d1NVTkpiazgzVDBKRWVsbGlXR3RpUkM5cGIyWkNVbGR2WXl0VVVrZ3hWa2NLUm04MlZ6Wlpla2t4
      UVVwTFdscFJiR1pIY0U1RmVXRlRlRFJGTDI5RlVrNTJhWEJvU0ZjeFluZGlWbXhxTkUxdlpEaHVZ
      MmR2ZDJkWFkwSlhZemRXVEFveWEzUlNkbVFyWjJaWUt6aHBTVGx0ZEZwcE56aG5WbUZ1Y1RWNmVq
      Sk1SR05RWVVsWk1EbDBiVzFJU2xBelowcE9ZMWxOVDBVdmNYTlhMM1ZQYTBVekNqQlhMM2szUm5B
      ek9IZEVMMmNySzBwM2FsRlpORmQzVTJadk9GWjZNVEJKVVhkTVEyUkpLekpUUW1KNlZYTm9jWGxG
      VkhFemNERkRaVEIwTDB0WFNXMEtTMmR6U1ZSc1lUVllNWHBLTDFSb2FWZDVOV2gyYVhWNll6QTJR
      azVVWkdsdFUxWjBhMFJ1TnpSaFJFRkdjVVJqVnk5c2VtWmtTaloxUmtkdFZGa3ZWd3BZUXl0c1oy
      WllPRWcxUnpaWE0yNXVPR2t2YkFvOU9XbGhSUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-83480-4
    - CJIS-5.6.2.1.1
    - DISA-STIG-RHEL-08-020221
    - NIST-800-171-3.5.8
    - NIST-800-53-IA-5(1)(e)
    - NIST-800-53-IA-5(f)
    - PCI-DSS-Req-8.2.5
    - PCI-DSSv4-8.3.7
    - accounts_password_pam_pwhistory_remember_system_auth
    - configure_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - no_reboot_needed
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: 'Limit Password Reuse: system-auth - Check if system relies on authselect tool'
      ansible.builtin.stat:
        path: /usr/bin/authselect
      register: result_authselect_present
      when: '"pam" in ansible_facts.packages'

    - name: 'Limit Password Reuse: system-auth - Collect the available authselect features'
      ansible.builtin.command:
        cmd: authselect list-features minimal
      register: result_authselect_available_features
      changed_when: false
      when:
        - '"pam" in ansible_facts.packages'
        - result_authselect_present.stat.exists

    - name: 'Limit Password Reuse: system-auth - Enable pam_pwhistory.so using authselect feature'
      block:

        - name: 'Limit Password Reuse: system-auth - Check integrity of authselect current profile'
          ansible.builtin.command:
            cmd: authselect check
          register: result_authselect_check_cmd
          changed_when: false
          failed_when: false

        - name: 'Limit Password Reuse: system-auth - Informative message based on the authselect integrity check result'
          ansible.builtin.assert:
            that:
              - result_authselect_check_cmd.rc == 0
            fail_msg:
              - authselect integrity check failed. Remediation aborted!
              - This remediation could not be applied because an authselect profile was not selected or the selected profile is not intact.
              - It is not recommended to manually edit the PAM files when authselect tool is available.
              - In cases where the default authselect profile does not cover a specific demand, a custom authselect profile is recommended.
            success_msg:
              - authselect integrity check passed

        - name: 'Limit Password Reuse: system-auth - Get authselect current features'
          ansible.builtin.shell:
            cmd: authselect current | tail -n+3 | awk '{ print $2 }'
          register: result_authselect_features
          changed_when: false
          when:
            - result_authselect_check_cmd is success

        - name: 'Limit Password Reuse: system-auth - Ensure "with-pwhistory" feature is enabled using authselect tool'
          ansible.builtin.command:
            cmd: authselect enable-feature with-pwhistory
          register: result_authselect_enable_feature_cmd
          when:
            - result_authselect_check_cmd is success
            - result_authselect_features.stdout is not search("with-pwhistory")

        - name: 'Limit Password Reuse: system-auth - Ensure authselect changes are applied'
          ansible.builtin.command:
            cmd: authselect apply-changes -b
          when:
            - result_authselect_enable_feature_cmd is not skipped
            - result_authselect_enable_feature_cmd is success
      when:
        - '"pam" in ansible_facts.packages'
        - result_authselect_present.stat.exists
        - result_authselect_available_features.stdout is search("with-pwhistory")

    - name: 'Limit Password Reuse: system-auth - Enable pam_pwhistory.so in appropriate PAM files'
      block:

        - name: 'Limit Password Reuse: system-auth - Define the PAM file to be edited as a local fact'
          ansible.builtin.set_fact:
            pam_file_path: /etc/pam.d/system-auth

        - name: 'Limit Password Reuse: system-auth - Check if system relies on authselect tool'
          ansible.builtin.stat:
            path: /usr/bin/authselect
          register: result_authselect_present

        - name: 'Limit Password Reuse: system-auth - Ensure authselect custom profile is used if authselect is present'
          block:

            - name: 'Limit Password Reuse: system-auth - Check integrity of authselect current profile'
              ansible.builtin.command:
                cmd: authselect check
              register: result_authselect_check_cmd
              changed_when: false
              failed_when: false

            - name: 'Limit Password Reuse: system-auth - Informative message based on the authselect integrity check result'
              ansible.builtin.assert:
                that:
                  - result_authselect_check_cmd.rc == 0
                fail_msg:
                  - authselect integrity check failed. Remediation aborted!
                  - This remediation could not be applied because an authselect profile was not selected or the selected profile is not intact.
                  - It is not recommended to manually edit the PAM files when authselect tool is available.
                  - In cases where the default authselect profile does not cover a specific demand, a custom authselect profile is recommended.
                success_msg:
                  - authselect integrity check passed

            - name: 'Limit Password Reuse: system-auth - Get authselect current profile'
              ansible.builtin.shell:
                cmd: authselect current -r | awk '{ print $1 }'
              register: result_authselect_profile
              changed_when: false
              when:
                - result_authselect_check_cmd is success

            - name: 'Limit Password Reuse: system-auth - Define the current authselect profile as a local fact'
              ansible.builtin.set_fact:
                authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                authselect_custom_profile: '{{ result_authselect_profile.stdout }}'
              when:
                - result_authselect_profile is not skipped
                - result_authselect_profile.stdout is match("custom/")

            - name: 'Limit Password Reuse: system-auth - Define the new authselect custom profile as a local fact'
              ansible.builtin.set_fact:
                authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                authselect_custom_profile: custom/hardening
              when:
                - result_authselect_profile is not skipped
                - result_authselect_profile.stdout is not match("custom/")

            - name: 'Limit Password Reuse: system-auth - Get authselect current features to also enable them in the custom profile'
              ansible.builtin.shell:
                cmd: authselect current | tail -n+3 | awk '{ print $2 }'
              register: result_authselect_features
              changed_when: false
              when:
                - result_authselect_profile is not skipped
                - authselect_current_profile is not match("custom/")

            - name: 'Limit Password Reuse: system-auth - Check if any custom profile with the same name was already created'
              ansible.builtin.stat:
                path: /etc/authselect/{{ authselect_custom_profile }}
              register: result_authselect_custom_profile_present
              changed_when: false
              when:
                - authselect_current_profile is not match("custom/")

            - name: 'Limit Password Reuse: system-auth - Create an authselect custom profile based on the current profile'
              ansible.builtin.command:
                cmd: authselect create-profile hardening -b {{ authselect_current_profile }}
              when:
                - result_authselect_check_cmd is success
                - authselect_current_profile is not match("custom/")
                - not result_authselect_custom_profile_present.stat.exists

            - name: 'Limit Password Reuse: system-auth - Ensure authselect changes are applied'
              ansible.builtin.command:
                cmd: authselect apply-changes -b --backup=before-hardening-custom-profile
              when:
                - result_authselect_check_cmd is success
                - result_authselect_profile is not skipped
                - authselect_current_profile is not match("custom/")
                - authselect_custom_profile is not match(authselect_current_profile)

            - name: 'Limit Password Reuse: system-auth - Ensure the authselect custom profile is selected'
              ansible.builtin.command:
                cmd: authselect select {{ authselect_custom_profile }}
              register: result_pam_authselect_select_profile
              when:
                - result_authselect_check_cmd is success
                - result_authselect_profile is not skipped
                - authselect_current_profile is not match("custom/")
                - authselect_custom_profile is not match(authselect_current_profile)

            - name: 'Limit Password Reuse: system-auth - Restore the authselect features in the custom profile'
              ansible.builtin.command:
                cmd: authselect enable-feature {{ item }}
              loop: '{{ result_authselect_features.stdout_lines }}'
              register: result_pam_authselect_restore_features
              when:
                - result_authselect_profile is not skipped
                - result_authselect_features is not skipped
                - result_pam_authselect_select_profile is not skipped

            - name: 'Limit Password Reuse: system-auth - Ensure authselect changes are applied'
              ansible.builtin.command:
                cmd: authselect apply-changes -b --backup=after-hardening-custom-profile
              when:
                - result_authselect_check_cmd is success
                - result_authselect_profile is not skipped
                - result_pam_authselect_restore_features is not skipped

            - name: 'Limit Password Reuse: system-auth - Change the PAM file to be edited according to the custom authselect profile'
              ansible.builtin.set_fact:
                pam_file_path: /etc/authselect/{{ authselect_custom_profile }}/{{ pam_file_path | basename }}
          when:
            - result_authselect_present.stat.exists

        - name: 'Limit Password Reuse: system-auth - Check if expected PAM module line is present in {{ pam_file_path }}'
          ansible.builtin.lineinfile:
            path: '{{ pam_file_path }}'
            regexp: ^\s*password\s+{{ '{{ var_password_pam_remember_control_flag.split(",")[0] }}' | regex_escape() }}\s+pam_pwhistory.so\s*.*
            state: absent
          check_mode: true
          changed_when: false
          register: result_pam_line_present

        - name: 'Limit Password Reuse: system-auth - Include or update the PAM module line in {{ pam_file_path }}'
          block:

            - name: 'Limit Password Reuse: system-auth - Check if required PAM module line is present in {{ pam_file_path }} with different control'
              ansible.builtin.lineinfile:
                path: '{{ pam_file_path }}'
                regexp: ^\s*password\s+.*\s+pam_pwhistory.so\s*
                state: absent
              check_mode: true
              changed_when: false
              register: result_pam_line_other_control_present

            - name: 'Limit Password Reuse: system-auth - Ensure the correct control for the required PAM module line in {{ pam_file_path }}'
              ansible.builtin.replace:
                dest: '{{ pam_file_path }}'
                regexp: ^(\s*password\s+).*(\bpam_pwhistory.so.*)
                replace: \1{{ var_password_pam_remember_control_flag.split(",")[0] }} \2
              register: result_pam_module_edit
              when:
                - result_pam_line_other_control_present.found == 1

            - name: 'Limit Password Reuse: system-auth - Ensure the required PAM module line is included in {{ pam_file_path }}'
              ansible.builtin.lineinfile:
                dest: '{{ pam_file_path }}'
                insertafter: ^password.*requisite.*pam_pwquality\.so
                line: password    {{ var_password_pam_remember_control_flag.split(",")[0] }}    pam_pwhistory.so
              register: result_pam_module_add
              when:
                - result_pam_line_other_control_present.found == 0 or result_pam_line_other_control_present.found > 1

            - name: 'Limit Password Reuse: system-auth - Ensure authselect changes are applied'
              ansible.builtin.command:
                cmd: authselect apply-changes -b
              when:
                - result_authselect_present is defined
                - result_authselect_present.stat.exists
                - |-
                  (result_pam_module_add is defined and result_pam_module_add.changed)
                   or (result_pam_module_edit is defined and result_pam_module_edit.changed)
          when:
            - result_pam_line_present.found is defined
            - result_pam_line_present.found == 0
      when:
        - '"pam" in ansible_facts.packages'
        - |
          (result_authselect_available_features.stdout is defined and result_authselect_available_features.stdout is not search("with-pwhistory")) or result_authselect_available_features is not defined

    - name: 'Limit Password Reuse: system-auth - Check the presence of /etc/security/pwhistory.conf file'
      ansible.builtin.stat:
        path: /etc/security/pwhistory.conf
      register: result_pwhistory_conf_check
      when: '"pam" in ansible_facts.packages'

    - name: 'Limit Password Reuse: system-auth - pam_pwhistory.so parameters are configured in /etc/security/pwhistory.conf file'
      block:

        - name: 'Limit Password Reuse: system-auth - Ensure the pam_pwhistory.so remember parameter in /etc/security/pwhistory.conf'
          ansible.builtin.lineinfile:
            path: /etc/security/pwhistory.conf
            regexp: ^\s*remember\s*=
            line: remember = {{ var_password_pam_remember }}
            state: present

        - name: 'Limit Password Reuse: system-auth - Ensure the pam_pwhistory.so remember parameter is removed from PAM files'
          block:

            - name: 'Limit Password Reuse: system-auth - Check if /etc/pam.d/system-auth file is present'
              ansible.builtin.stat:
                path: /etc/pam.d/system-auth
              register: result_pam_file_present

            - name: 'Limit Password Reuse: system-auth - Check the proper remediation for the system'
              block:

                - name: 'Limit Password Reuse: system-auth - Define the PAM file to be edited as a local fact'
                  ansible.builtin.set_fact:
                    pam_file_path: /etc/pam.d/system-auth

                - name: 'Limit Password Reuse: system-auth - Check if system relies on authselect tool'
                  ansible.builtin.stat:
                    path: /usr/bin/authselect
                  register: result_authselect_present

                - name: 'Limit Password Reuse: system-auth - Ensure authselect custom profile is used if authselect is present'
                  block:

                    - name: 'Limit Password Reuse: system-auth - Check integrity of authselect current profile'
                      ansible.builtin.command:
                        cmd: authselect check
                      register: result_authselect_check_cmd
                      changed_when: false
                      failed_when: false

                    - name: 'Limit Password Reuse: system-auth - Informative message based on the authselect integrity check result'
                      ansible.builtin.assert:
                        that:
                          - result_authselect_check_cmd.rc == 0
                        fail_msg:
                          - authselect integrity check failed. Remediation aborted!
                          - This remediation could not be applied because an authselect profile was not selected or the selected profile is not intact.
                          - It is not recommended to manually edit the PAM files when authselect tool is available.
                          - In cases where the default authselect profile does not cover a specific demand, a custom authselect profile is recommended.
                        success_msg:
                          - authselect integrity check passed

                    - name: 'Limit Password Reuse: system-auth - Get authselect current profile'
                      ansible.builtin.shell:
                        cmd: authselect current -r | awk '{ print $1 }'
                      register: result_authselect_profile
                      changed_when: false
                      when:
                        - result_authselect_check_cmd is success

                    - name: 'Limit Password Reuse: system-auth - Define the current authselect profile as a local fact'
                      ansible.builtin.set_fact:
                        authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                        authselect_custom_profile: '{{ result_authselect_profile.stdout }}'
                      when:
                        - result_authselect_profile is not skipped
                        - result_authselect_profile.stdout is match("custom/")

                    - name: 'Limit Password Reuse: system-auth - Define the new authselect custom profile as a local fact'
                      ansible.builtin.set_fact:
                        authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                        authselect_custom_profile: custom/hardening
                      when:
                        - result_authselect_profile is not skipped
                        - result_authselect_profile.stdout is not match("custom/")

                    - name: 'Limit Password Reuse: system-auth - Get authselect current features to also enable them in the custom profile'
                      ansible.builtin.shell:
                        cmd: authselect current | tail -n+3 | awk '{ print $2 }'
                      register: result_authselect_features
                      changed_when: false
                      when:
                        - result_authselect_profile is not skipped
                        - authselect_current_profile is not match("custom/")

                    - name: 'Limit Password Reuse: system-auth - Check if any custom profile with the same name was already created'
                      ansible.builtin.stat:
                        path: /etc/authselect/{{ authselect_custom_profile }}
                      register: result_authselect_custom_profile_present
                      changed_when: false
                      when:
                        - authselect_current_profile is not match("custom/")

                    - name: 'Limit Password Reuse: system-auth - Create an authselect custom profile based on the current profile'
                      ansible.builtin.command:
                        cmd: authselect create-profile hardening -b {{ authselect_current_profile }}
                      when:
                        - result_authselect_check_cmd is success
                        - authselect_current_profile is not match("custom/")
                        - not result_authselect_custom_profile_present.stat.exists

                    - name: 'Limit Password Reuse: system-auth - Ensure authselect changes are applied'
                      ansible.builtin.command:
                        cmd: authselect apply-changes -b --backup=before-hardening-custom-profile
                      when:
                        - result_authselect_check_cmd is success
                        - result_authselect_profile is not skipped
                        - authselect_current_profile is not match("custom/")
                        - authselect_custom_profile is not match(authselect_current_profile)

                    - name: 'Limit Password Reuse: system-auth - Ensure the authselect custom profile is selected'
                      ansible.builtin.command:
                        cmd: authselect select {{ authselect_custom_profile }}
                      register: result_pam_authselect_select_profile
                      when:
                        - result_authselect_check_cmd is success
                        - result_authselect_profile is not skipped
                        - authselect_current_profile is not match("custom/")
                        - authselect_custom_profile is not match(authselect_current_profile)

                    - name: 'Limit Password Reuse: system-auth - Restore the authselect features in the custom profile'
                      ansible.builtin.command:
                        cmd: authselect enable-feature {{ item }}
                      loop: '{{ result_authselect_features.stdout_lines }}'
                      register: result_pam_authselect_restore_features
                      when:
                        - result_authselect_profile is not skipped
                        - result_authselect_features is not skipped
                        - result_pam_authselect_select_profile is not skipped

                    - name: 'Limit Password Reuse: system-auth - Ensure authselect changes are applied'
                      ansible.builtin.command:
                        cmd: authselect apply-changes -b --backup=after-hardening-custom-profile
                      when:
                        - result_authselect_check_cmd is success
                        - result_authselect_profile is not skipped
                        - result_pam_authselect_restore_features is not skipped

                    - name: 'Limit Password Reuse: system-auth - Change the PAM file to be edited according to the custom authselect profile'
                      ansible.builtin.set_fact:
                        pam_file_path: /etc/authselect/{{ authselect_custom_profile }}/{{ pam_file_path | basename }}
                  when:
                    - result_authselect_present.stat.exists

                - name: 'Limit Password Reuse: system-auth - Ensure the "remember" option from "pam_pwhistory.so" is not present in {{ pam_file_path }}'
                  ansible.builtin.replace:
                    dest: '{{ pam_file_path }}'
                    regexp: (.*password.*pam_pwhistory.so.*)\bremember\b=?[0-9a-zA-Z]*(.*)
                    replace: \1\2
                  register: result_pam_option_removal

                - name: 'Limit Password Reuse: system-auth - Ensure authselect changes are applied'
                  ansible.builtin.command:
                    cmd: authselect apply-changes -b
                  when:
                    - result_authselect_present.stat.exists
                    - result_pam_option_removal is changed
              when:
                - result_pam_file_present.stat.exists
      when:
        - '"pam" in ansible_facts.packages'
        - result_pwhistory_conf_check.stat.exists

    - name: 'Limit Password Reuse: system-auth - pam_pwhistory.so parameters are configured in PAM files'
      block:

        - name: 'Limit Password Reuse: system-auth - Define the PAM file to be edited as a local fact'
          ansible.builtin.set_fact:
            pam_file_path: /etc/pam.d/system-auth

        - name: 'Limit Password Reuse: system-auth - Check if system relies on authselect tool'
          ansible.builtin.stat:
            path: /usr/bin/authselect
          register: result_authselect_present

        - name: 'Limit Password Reuse: system-auth - Ensure authselect custom profile is used if authselect is present'
          block:

            - name: 'Limit Password Reuse: system-auth - Check integrity of authselect current profile'
              ansible.builtin.command:
                cmd: authselect check
              register: result_authselect_check_cmd
              changed_when: false
              failed_when: false

            - name: 'Limit Password Reuse: system-auth - Informative message based on the authselect integrity check result'
              ansible.builtin.assert:
                that:
                  - result_authselect_check_cmd.rc == 0
                fail_msg:
                  - authselect integrity check failed. Remediation aborted!
                  - This remediation could not be applied because an authselect profile was not selected or the selected profile is not intact.
                  - It is not recommended to manually edit the PAM files when authselect tool is available.
                  - In cases where the default authselect profile does not cover a specific demand, a custom authselect profile is recommended.
                success_msg:
                  - authselect integrity check passed

            - name: 'Limit Password Reuse: system-auth - Get authselect current profile'
              ansible.builtin.shell:
                cmd: authselect current -r | awk '{ print $1 }'
              register: result_authselect_profile
              changed_when: false
              when:
                - result_authselect_check_cmd is success

            - name: 'Limit Password Reuse: system-auth - Define the current authselect profile as a local fact'
              ansible.builtin.set_fact:
                authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                authselect_custom_profile: '{{ result_authselect_profile.stdout }}'
              when:
                - result_authselect_profile is not skipped
                - result_authselect_profile.stdout is match("custom/")

            - name: 'Limit Password Reuse: system-auth - Define the new authselect custom profile as a local fact'
              ansible.builtin.set_fact:
                authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                authselect_custom_profile: custom/hardening
              when:
                - result_authselect_profile is not skipped
                - result_authselect_profile.stdout is not match("custom/")

            - name: 'Limit Password Reuse: system-auth - Get authselect current features to also enable them in the custom profile'
              ansible.builtin.shell:
                cmd: authselect current | tail -n+3 | awk '{ print $2 }'
              register: result_authselect_features
              changed_when: false
              when:
                - result_authselect_profile is not skipped
                - authselect_current_profile is not match("custom/")

            - name: 'Limit Password Reuse: system-auth - Check if any custom profile with the same name was already created'
              ansible.builtin.stat:
                path: /etc/authselect/{{ authselect_custom_profile }}
              register: result_authselect_custom_profile_present
              changed_when: false
              when:
                - authselect_current_profile is not match("custom/")

            - name: 'Limit Password Reuse: system-auth - Create an authselect custom profile based on the current profile'
              ansible.builtin.command:
                cmd: authselect create-profile hardening -b {{ authselect_current_profile }}
              when:
                - result_authselect_check_cmd is success
                - authselect_current_profile is not match("custom/")
                - not result_authselect_custom_profile_present.stat.exists

            - name: 'Limit Password Reuse: system-auth - Ensure authselect changes are applied'
              ansible.builtin.command:
                cmd: authselect apply-changes -b --backup=before-hardening-custom-profile
              when:
                - result_authselect_check_cmd is success
                - result_authselect_profile is not skipped
                - authselect_current_profile is not match("custom/")
                - authselect_custom_profile is not match(authselect_current_profile)

            - name: 'Limit Password Reuse: system-auth - Ensure the authselect custom profile is selected'
              ansible.builtin.command:
                cmd: authselect select {{ authselect_custom_profile }}
              register: result_pam_authselect_select_profile
              when:
                - result_authselect_check_cmd is success
                - result_authselect_profile is not skipped
                - authselect_current_profile is not match("custom/")
                - authselect_custom_profile is not match(authselect_current_profile)

            - name: 'Limit Password Reuse: system-auth - Restore the authselect features in the custom profile'
              ansible.builtin.command:
                cmd: authselect enable-feature {{ item }}
              loop: '{{ result_authselect_features.stdout_lines }}'
              register: result_pam_authselect_restore_features
              when:
                - result_authselect_profile is not skipped
                - result_authselect_features is not skipped
                - result_pam_authselect_select_profile is not skipped

            - name: 'Limit Password Reuse: system-auth - Ensure authselect changes are applied'
              ansible.builtin.command:
                cmd: authselect apply-changes -b --backup=after-hardening-custom-profile
              when:
                - result_authselect_check_cmd is success
                - result_authselect_profile is not skipped
                - result_pam_authselect_restore_features is not skipped

            - name: 'Limit Password Reuse: system-auth - Change the PAM file to be edited according to the custom authselect profile'
              ansible.builtin.set_fact:
                pam_file_path: /etc/authselect/{{ authselect_custom_profile }}/{{ pam_file_path | basename }}
          when:
            - result_authselect_present.stat.exists

        - name: 'Limit Password Reuse: system-auth - Check if expected PAM module line is present in {{ pam_file_path }}'
          ansible.builtin.lineinfile:
            path: '{{ pam_file_path }}'
            regexp: ^\s*password\s+{{ 'requisite' | regex_escape() }}\s+pam_pwhistory.so\s*.*
            state: absent
          check_mode: true
          changed_when: false
          register: result_pam_line_present

        - name: 'Limit Password Reuse: system-auth - Include or update the PAM module line in {{ pam_file_path }}'
          block:

            - name: 'Limit Password Reuse: system-auth - Check if required PAM module line is present in {{ pam_file_path }} with different control'
              ansible.builtin.lineinfile:
                path: '{{ pam_file_path }}'
                regexp: ^\s*password\s+.*\s+pam_pwhistory.so\s*
                state: absent
              check_mode: true
              changed_when: false
              register: result_pam_line_other_control_present

            - name: 'Limit Password Reuse: system-auth - Ensure the correct control for the required PAM module line in {{ pam_file_path }}'
              ansible.builtin.replace:
                dest: '{{ pam_file_path }}'
                regexp: ^(\s*password\s+).*(\bpam_pwhistory.so.*)
                replace: \1requisite \2
              register: result_pam_module_edit
              when:
                - result_pam_line_other_control_present.found == 1

            - name: 'Limit Password Reuse: system-auth - Ensure the required PAM module line is included in {{ pam_file_path }}'
              ansible.builtin.lineinfile:
                dest: '{{ pam_file_path }}'
                line: password    requisite    pam_pwhistory.so
              register: result_pam_module_add
              when:
                - result_pam_line_other_control_present.found == 0 or result_pam_line_other_control_present.found > 1

            - name: 'Limit Password Reuse: system-auth - Ensure authselect changes are applied'
              ansible.builtin.command:
                cmd: authselect apply-changes -b
              when:
                - result_authselect_present is defined
                - result_authselect_present.stat.exists
                - |-
                  (result_pam_module_add is defined and result_pam_module_add.changed)
                   or (result_pam_module_edit is defined and result_pam_module_edit.changed)
          when:
            - result_pam_line_present.found is defined
            - result_pam_line_present.found == 0

        - name: 'Limit Password Reuse: system-auth - Check if the required PAM module option is present in {{ pam_file_path }}'
          ansible.builtin.lineinfile:
            path: '{{ pam_file_path }}'
            regexp: ^\s*password\s+{{ 'requisite' | regex_escape() }}\s+pam_pwhistory.so\s*.*\sremember\b
            state: absent
          check_mode: true
          changed_when: false
          register: result_pam_module_remember_option_present

        - name: 'Limit Password Reuse: system-auth - Ensure the "remember" PAM option for "pam_pwhistory.so" is included in {{ pam_file_path }}'
          ansible.builtin.lineinfile:
            path: '{{ pam_file_path }}'
            backrefs: true
            regexp: ^(\s*password\s+{{ 'requisite' | regex_escape() }}\s+pam_pwhistory.so.*)
            line: \1 remember={{ var_password_pam_remember }}
            state: present
          register: result_pam_remember_add
          when:
            - result_pam_module_remember_option_present.found == 0

        - name: 'Limit Password Reuse: system-auth - Ensure the required value for "remember" PAM option from "pam_pwhistory.so" in {{ pam_file_path }}'
          ansible.builtin.lineinfile:
            path: '{{ pam_file_path }}'
            backrefs: true
            regexp: ^(\s*password\s+{{ 'requisite' | regex_escape() }}\s+pam_pwhistory.so\s+.*)(remember)=[0-9a-zA-Z]+\s*(.*)
            line: \1\2={{ var_password_pam_remember }} \3
          register: result_pam_remember_edit
          when:
            - result_pam_module_remember_option_present.found > 0

        - name: 'Limit Password Reuse: system-auth - Ensure authselect changes are applied'
          ansible.builtin.command:
            cmd: authselect apply-changes -b
          when:
            - result_authselect_present.stat.exists
            - (result_pam_remember_add is defined and result_pam_remember_add.changed) or (result_pam_remember_edit is defined and result_pam_remember_edit.changed)
      when:
        - '"pam" in ansible_facts.packages'
        - not result_pwhistory_conf_check.stat.exists


# Set Existing Passwords Maximum Age
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_accounts_password_set_max_life_existing,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_sle
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Set Existing Passwords Maximum Age
  hosts: 'vian.local'
  become: true
  vars:
    var_accounts_maximum_age_login_defs: '365'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzTXlRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      VjFSVkFyVVVncmJIRnRjSHAyTkRsSFVHZGpVMkV2ZDBkRE4yZ0tNRGx1VmpCNVdHdHdlVmtyUkZC
      WVREbElkbWhtWkZWeWNqbFhhRUpXYzJaSVpXZFFOalF5VHpOd01tVnVTVXNyTnpKRmRWUlRRMk5Q
      Y1ZoUlZrSTROd3BWZDNwYVZHNTZTMGhvUkd0T2QxTTJOMGg1THpGTU4wSlFUeXN6ZEVaNlkzZDRP
      SHAyY2tGcWVpOXpVMjlpVkhCSE1tbHNTR1kyTmpNMmJWTnJlVkpDQ2xJd2FuRjVMME4xUVhGMFdE
      VlNiemRyTTJ4a01qbDVabk5FUkRrMFFuaHZSa3A1T1V4aVdGQjBiSGg0UTJSM2IyRnpPVlIwZERo
      M1lsTnZUWFl5U0ZjS1dWQjJXbXAzY0RGWVRITlZiMG80WWtKMVMyazFNVEl3VnpGeVVHRmpUR2Qz
      VjNnemFIWnBVR1ExYVRKb2FuSnBka3RhTlRoVlQwOUJabEY2WTFoVVlncEhZM0pwYWpkWVZHRnhj
      VEZpYWtZM1oxaEJWRWxDUnpGWWFFdGxSM1pxWW5CVGJHcDRhVTVqTkdoUE5VRlJiV2M1VGxBcllq
      ZEVNak54ZUV4NlZXTXJDbU5vYWxkS1FYVktPVEZ4TjJ4UlJtcDVPR05SVnpWNFVXRktja001U1hK
      R01IWllZbEZOTWxwQldWcFhZVzExTDI5UFEzZHdTMGhtUnpSdWJqVXlSRTRLYjFoSGFYZHlUM1U0
      U0VvMFZDdEdXV1ZqTUZvdlpuZzRXRlpvWW5WRFNsbEhaVEpxYWxGeVREVnBla2t2ZG5SSlZYWkdN
      MFk1ZFZsclMxRjROMnB6U3dweFNDdHlaRXh2VVU1c1JVNUJUVFpSVW1acmNXZFFSa2hTYkVsalNH
      OVpVakJwU0ZSWmMxUlBORk5zVVc1WUwweDRlRVF4WlRKQ04yc3hOVmhJZDFSTkNqbGFLME4xVWtW
      RVQzTkVVVU5EVFZKRk1YRmtiV3ByY3pKYWJFcGxOekZQTm1kSE9UaHZjbVJuYlhreldFVTBWVEZH
      VTNWNmVWQjFVVlJpUTBsUWVFb0tjV2x2YkhsaVVtOW1aa3RxU2tKSGFXZHBWWHBGTlhFNGQxaEZV
      bk5uTTFCRlJGTnNXRmxZYW01clVraExjaXRCVld4SmFpOVhkRzlqWTFkRlRYbExSd3BKVlZCcWJq
      WmpiMUp3V2tNeVRFUjFiR2RxU0FvOWJGUTFVZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-82473-0
    - DISA-STIG-RHEL-08-020210
    - NIST-800-53-CM-6(a)
    - NIST-800-53-IA-5(1)(d)
    - NIST-800-53-IA-5(f)
    - PCI-DSSv4-8.3.9
    - accounts_password_set_max_life_existing
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Collect users with not correct maximum time period between password changes
      ansible.builtin.command:
        cmd: awk -F':' '(/^[^:]+:[^!*]/ && ($5 > {{ var_accounts_maximum_age_login_defs }} || $5 == "")) {print $1}' /etc/shadow
      register: user_names

    - name: Change the maximum time period between password changes
      ansible.builtin.user:
        user: '{{ item }}'
        password_expire_max: '{{ var_accounts_maximum_age_login_defs }}'
      with_items: '{{ user_names.stdout_lines }}'
      when: user_names.stdout_lines | length > 0


# Lock Accounts After Failed Password Attempts
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_accounts_passwords_pam_faillock_deny,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_rhv
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Lock Accounts After Failed Password Attempts
  hosts: 'vian.local'
  become: true
  vars:
    var_accounts_passwords_pam_faillock_deny: '5'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzTTBRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      dEpXVkZCU1VWb2NHcFVUVWxVSzFKdlQzZFBja3RuU1RVMGRsUUthbkExT1hwRldVeFVVelJZWmtW
      MU1VcFJObms0V0haTFpXTjNkRE5oWTFseGNqQnZVMjQyVW1saWMxVkdVazkzYVVreFdXbGhZV2RL
      WkZGeWVUTnRRUXBzZGpBMVoxVnFORGx0Ykd4WGRFTmhaMVZMYTJWSU5YSmhOakZZV21SMFQweFRP
      Q3RNUkVGUGRrWkpjRmhVTTJKTmRGSjNVVTFOSzNNMFpUbFBLMmxXQ2xoeWJUWlRWV3A1V0ZsNmEx
      QkNSVW96WTNCbkwzWkRSR04zZVRnMWR6RkNia1Y1TTI5SGQyeEhhbWQ2ZWxoRmVrcGtjMGhIV0RC
      QlJHNUJOakpOVlhRS1RHRlplRFIwZVV0TE5qazJZV3BTWjNRcmVqWmlha2xsZG5kc05WVXdXWGxR
      YVU5dE5WUjRSR05wVkV3NVlUSjFZamt5VWpkTE1XMHdkbk12Vmt4WVdBb3hWMU42ZW5GeU5Ya3lL
      emRqTUVaTk1XUjNla2N2WjIwMk9FcFNhREJqU0RaeFoxbEdVME5NSzNsYWF6TlRXbWRsTWpORkwy
      RldMMGxTSzAxTGVYSnRDblV2V0M5T1ozUXZjamd3VDAxVVUyOXZVSFEyTVhGcmMwOU1jRFpKYW5G
      SVMwbEJRa2c1UTBSSGJTdDBTUzlQYVRkcFFsaDVkREozVVV3MFNsbzNOR3NLVHpWMFFYbE1XbmRL
      VXpWTk9DOHlhbFJ4YzJackwyaHBha2d4VjJsQ1MyTndPVmh3TWxNM1FqUlhOM3BKVEUxQlZIQm1h
      bTAwUW10alJ6QkNVelJxUWdwS1EwTnZLMjVZYVROTUwzaExTVEpNVmxoVGJVWllPWGhQZWtOUWFT
      OW5ZazlKVDNOMGJuTXlORWd5TVhwM1Z6RlRhbTFFY1N0d1VtWlVkazRyTlVGYUNrSnRXVmt5YmxC
      SmMxQkNWWGg0UW5JMlV6QjVRMmR5TmpkMmN5dHhLMGxSZGtGNlozRlpiR2MwVTFodVRFeEJPVFpI
      VVRBeWFFZERZazFPVWpWc1ZHNEtTbXcxTUZKTmQyRm5UV054YzFwblNXVk5hMUU0Y0VaYU1VZEVj
      SHB6ZVU1VU5FaEZhVTFRZHpCSlZXcE1jMUJNZUdkSFIzRXZhazR4UnpSMGVtVk9lZ3A2Tm5wT0wx
      TXZWV1p4V1RCeVoyWXlTVWhPYVFvOVFuTk5SQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-80667-9
    - CJIS-5.5.3
    - DISA-STIG-RHEL-08-020011
    - NIST-800-171-3.1.8
    - NIST-800-53-AC-7(a)
    - NIST-800-53-CM-6(a)
    - PCI-DSS-Req-8.1.6
    - PCI-DSSv4-8.3.4
    - accounts_passwords_pam_faillock_deny
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Lock Accounts After Failed Password Attempts - Check if system relies on authselect tool
      ansible.builtin.stat:
        path: /usr/bin/authselect
      register: result_authselect_present
      when: '"pam" in ansible_facts.packages'

    - name: Lock Accounts After Failed Password Attempts - Remediation where authselect tool is present
      block:

        - name: Lock Accounts After Failed Password Attempts - Check integrity of authselect current profile
          ansible.builtin.command:
            cmd: authselect check
          register: result_authselect_check_cmd
          changed_when: false
          failed_when: false

        - name: Lock Accounts After Failed Password Attempts - Informative message based on the authselect integrity check result
          ansible.builtin.assert:
            that:
              - result_authselect_check_cmd.rc == 0
            fail_msg:
              - authselect integrity check failed. Remediation aborted!
              - This remediation could not be applied because an authselect profile was not selected or the selected profile is not intact.
              - It is not recommended to manually edit the PAM files when authselect tool is available.
              - In cases where the default authselect profile does not cover a specific demand, a custom authselect profile is recommended.
            success_msg:
              - authselect integrity check passed

        - name: Lock Accounts After Failed Password Attempts - Get authselect current features
          ansible.builtin.shell:
            cmd: authselect current | tail -n+3 | awk '{ print $2 }'
          register: result_authselect_features
          changed_when: false
          when:
            - result_authselect_check_cmd is success

        - name: Lock Accounts After Failed Password Attempts - Ensure "with-faillock" feature is enabled using authselect tool
          ansible.builtin.command:
            cmd: authselect enable-feature with-faillock
          register: result_authselect_enable_feature_cmd
          when:
            - result_authselect_check_cmd is success
            - result_authselect_features.stdout is not search("with-faillock")

        - name: Lock Accounts After Failed Password Attempts - Ensure authselect changes are applied
          ansible.builtin.command:
            cmd: authselect apply-changes -b
          when:
            - result_authselect_enable_feature_cmd is not skipped
            - result_authselect_enable_feature_cmd is success
      when:
        - '"pam" in ansible_facts.packages'
        - result_authselect_present.stat.exists

    - name: Lock Accounts After Failed Password Attempts - Remediation where authselect tool is not present
      block:

        - name: Lock Accounts After Failed Password Attempts - Check if pam_faillock.so is already enabled
          ansible.builtin.lineinfile:
            path: /etc/pam.d/system-auth
            regexp: .*auth.*pam_faillock\.so (preauth|authfail)
            state: absent
          check_mode: true
          changed_when: false
          register: result_pam_faillock_is_enabled

        - name: Lock Accounts After Failed Password Attempts - Enable pam_faillock.so preauth editing PAM files
          ansible.builtin.lineinfile:
            path: '{{ item }}'
            line: auth        required      pam_faillock.so preauth
            insertbefore: ^auth.*sufficient.*pam_unix\.so.*
            state: present
          loop:
            - /etc/pam.d/system-auth
            - /etc/pam.d/password-auth
          when:
            - result_pam_faillock_is_enabled.found == 0

        - name: Lock Accounts After Failed Password Attempts - Enable pam_faillock.so authfail editing PAM files
          ansible.builtin.lineinfile:
            path: '{{ item }}'
            line: auth        required      pam_faillock.so authfail
            insertbefore: ^auth.*required.*pam_deny\.so.*
            state: present
          loop:
            - /etc/pam.d/system-auth
            - /etc/pam.d/password-auth
          when:
            - result_pam_faillock_is_enabled.found == 0

        - name: Lock Accounts After Failed Password Attempts - Enable pam_faillock.so account section editing PAM files
          ansible.builtin.lineinfile:
            path: '{{ item }}'
            line: account     required      pam_faillock.so
            insertbefore: ^account.*required.*pam_unix\.so.*
            state: present
          loop:
            - /etc/pam.d/system-auth
            - /etc/pam.d/password-auth
          when:
            - result_pam_faillock_is_enabled.found == 0
      when:
        - '"pam" in ansible_facts.packages'
        - not result_authselect_present.stat.exists

    - name: Lock Accounts After Failed Password Attempts - Check the presence of /etc/security/faillock.conf file
      ansible.builtin.stat:
        path: /etc/security/faillock.conf
      register: result_faillock_conf_check
      when: '"pam" in ansible_facts.packages'

    - name: Lock Accounts After Failed Password Attempts - Ensure the pam_faillock.so deny parameter in /etc/security/faillock.conf
      ansible.builtin.lineinfile:
        path: /etc/security/faillock.conf
        regexp: ^\s*deny\s*=
        line: deny = {{ var_accounts_passwords_pam_faillock_deny }}
        state: present
      when:
        - '"pam" in ansible_facts.packages'
        - result_faillock_conf_check.stat.exists

    - name: Lock Accounts After Failed Password Attempts - Ensure the pam_faillock.so deny parameter not in PAM files
      block:

        - name: Lock Accounts After Failed Password Attempts - Check if /etc/pam.d/system-auth file is present
          ansible.builtin.stat:
            path: /etc/pam.d/system-auth
          register: result_pam_file_present

        - name: Lock Accounts After Failed Password Attempts - Check the proper remediation for the system
          block:

            - name: Lock Accounts After Failed Password Attempts - Define the PAM file to be edited as a local fact
              ansible.builtin.set_fact:
                pam_file_path: /etc/pam.d/system-auth

            - name: Lock Accounts After Failed Password Attempts - Check if system relies on authselect tool
              ansible.builtin.stat:
                path: /usr/bin/authselect
              register: result_authselect_present

            - name: Lock Accounts After Failed Password Attempts - Ensure authselect custom profile is used if authselect is present
              block:

                - name: Lock Accounts After Failed Password Attempts - Check integrity of authselect current profile
                  ansible.builtin.command:
                    cmd: authselect check
                  register: result_authselect_check_cmd
                  changed_when: false
                  failed_when: false

                - name: Lock Accounts After Failed Password Attempts - Informative message based on the authselect integrity check result
                  ansible.builtin.assert:
                    that:
                      - result_authselect_check_cmd.rc == 0
                    fail_msg:
                      - authselect integrity check failed. Remediation aborted!
                      - This remediation could not be applied because an authselect profile was not selected or the selected profile is not intact.
                      - It is not recommended to manually edit the PAM files when authselect tool is available.
                      - In cases where the default authselect profile does not cover a specific demand, a custom authselect profile is recommended.
                    success_msg:
                      - authselect integrity check passed

                - name: Lock Accounts After Failed Password Attempts - Get authselect current profile
                  ansible.builtin.shell:
                    cmd: authselect current -r | awk '{ print $1 }'
                  register: result_authselect_profile
                  changed_when: false
                  when:
                    - result_authselect_check_cmd is success

                - name: Lock Accounts After Failed Password Attempts - Define the current authselect profile as a local fact
                  ansible.builtin.set_fact:
                    authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                    authselect_custom_profile: '{{ result_authselect_profile.stdout }}'
                  when:
                    - result_authselect_profile is not skipped
                    - result_authselect_profile.stdout is match("custom/")

                - name: Lock Accounts After Failed Password Attempts - Define the new authselect custom profile as a local fact
                  ansible.builtin.set_fact:
                    authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                    authselect_custom_profile: custom/hardening
                  when:
                    - result_authselect_profile is not skipped
                    - result_authselect_profile.stdout is not match("custom/")

                - name: Lock Accounts After Failed Password Attempts - Get authselect current features to also enable them in the custom profile
                  ansible.builtin.shell:
                    cmd: authselect current | tail -n+3 | awk '{ print $2 }'
                  register: result_authselect_features
                  changed_when: false
                  when:
                    - result_authselect_profile is not skipped
                    - authselect_current_profile is not match("custom/")

                - name: Lock Accounts After Failed Password Attempts - Check if any custom profile with the same name was already created
                  ansible.builtin.stat:
                    path: /etc/authselect/{{ authselect_custom_profile }}
                  register: result_authselect_custom_profile_present
                  changed_when: false
                  when:
                    - authselect_current_profile is not match("custom/")

                - name: Lock Accounts After Failed Password Attempts - Create an authselect custom profile based on the current profile
                  ansible.builtin.command:
                    cmd: authselect create-profile hardening -b {{ authselect_current_profile }}
                  when:
                    - result_authselect_check_cmd is success
                    - authselect_current_profile is not match("custom/")
                    - not result_authselect_custom_profile_present.stat.exists

                - name: Lock Accounts After Failed Password Attempts - Ensure authselect changes are applied
                  ansible.builtin.command:
                    cmd: authselect apply-changes -b --backup=before-hardening-custom-profile
                  when:
                    - result_authselect_check_cmd is success
                    - result_authselect_profile is not skipped
                    - authselect_current_profile is not match("custom/")
                    - authselect_custom_profile is not match(authselect_current_profile)

                - name: Lock Accounts After Failed Password Attempts - Ensure the authselect custom profile is selected
                  ansible.builtin.command:
                    cmd: authselect select {{ authselect_custom_profile }}
                  register: result_pam_authselect_select_profile
                  when:
                    - result_authselect_check_cmd is success
                    - result_authselect_profile is not skipped
                    - authselect_current_profile is not match("custom/")
                    - authselect_custom_profile is not match(authselect_current_profile)

                - name: Lock Accounts After Failed Password Attempts - Restore the authselect features in the custom profile
                  ansible.builtin.command:
                    cmd: authselect enable-feature {{ item }}
                  loop: '{{ result_authselect_features.stdout_lines }}'
                  register: result_pam_authselect_restore_features
                  when:
                    - result_authselect_profile is not skipped
                    - result_authselect_features is not skipped
                    - result_pam_authselect_select_profile is not skipped

                - name: Lock Accounts After Failed Password Attempts - Ensure authselect changes are applied
                  ansible.builtin.command:
                    cmd: authselect apply-changes -b --backup=after-hardening-custom-profile
                  when:
                    - result_authselect_check_cmd is success
                    - result_authselect_profile is not skipped
                    - result_pam_authselect_restore_features is not skipped

                - name: Lock Accounts After Failed Password Attempts - Change the PAM file to be edited according to the custom authselect profile
                  ansible.builtin.set_fact:
                    pam_file_path: /etc/authselect/{{ authselect_custom_profile }}/{{ pam_file_path | basename }}
              when:
                - result_authselect_present.stat.exists

            - name: Lock Accounts After Failed Password Attempts - Ensure the "deny" option from "pam_faillock.so" is not present in {{ pam_file_path }}
              ansible.builtin.replace:
                dest: '{{ pam_file_path }}'
                regexp: (.*auth.*pam_faillock.so.*)\bdeny\b=?[0-9a-zA-Z]*(.*)
                replace: \1\2
              register: result_pam_option_removal

            - name: Lock Accounts After Failed Password Attempts - Ensure authselect changes are applied
              ansible.builtin.command:
                cmd: authselect apply-changes -b
              when:
                - result_authselect_present.stat.exists
                - result_pam_option_removal is changed
          when:
            - result_pam_file_present.stat.exists

        - name: Lock Accounts After Failed Password Attempts - Check if /etc/pam.d/password-auth file is present
          ansible.builtin.stat:
            path: /etc/pam.d/password-auth
          register: result_pam_file_present

        - name: Lock Accounts After Failed Password Attempts - Check the proper remediation for the system
          block:

            - name: Lock Accounts After Failed Password Attempts - Define the PAM file to be edited as a local fact
              ansible.builtin.set_fact:
                pam_file_path: /etc/pam.d/password-auth

            - name: Lock Accounts After Failed Password Attempts - Check if system relies on authselect tool
              ansible.builtin.stat:
                path: /usr/bin/authselect
              register: result_authselect_present

            - name: Lock Accounts After Failed Password Attempts - Ensure authselect custom profile is used if authselect is present
              block:

                - name: Lock Accounts After Failed Password Attempts - Check integrity of authselect current profile
                  ansible.builtin.command:
                    cmd: authselect check
                  register: result_authselect_check_cmd
                  changed_when: false
                  failed_when: false

                - name: Lock Accounts After Failed Password Attempts - Informative message based on the authselect integrity check result
                  ansible.builtin.assert:
                    that:
                      - result_authselect_check_cmd.rc == 0
                    fail_msg:
                      - authselect integrity check failed. Remediation aborted!
                      - This remediation could not be applied because an authselect profile was not selected or the selected profile is not intact.
                      - It is not recommended to manually edit the PAM files when authselect tool is available.
                      - In cases where the default authselect profile does not cover a specific demand, a custom authselect profile is recommended.
                    success_msg:
                      - authselect integrity check passed

                - name: Lock Accounts After Failed Password Attempts - Get authselect current profile
                  ansible.builtin.shell:
                    cmd: authselect current -r | awk '{ print $1 }'
                  register: result_authselect_profile
                  changed_when: false
                  when:
                    - result_authselect_check_cmd is success

                - name: Lock Accounts After Failed Password Attempts - Define the current authselect profile as a local fact
                  ansible.builtin.set_fact:
                    authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                    authselect_custom_profile: '{{ result_authselect_profile.stdout }}'
                  when:
                    - result_authselect_profile is not skipped
                    - result_authselect_profile.stdout is match("custom/")

                - name: Lock Accounts After Failed Password Attempts - Define the new authselect custom profile as a local fact
                  ansible.builtin.set_fact:
                    authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                    authselect_custom_profile: custom/hardening
                  when:
                    - result_authselect_profile is not skipped
                    - result_authselect_profile.stdout is not match("custom/")

                - name: Lock Accounts After Failed Password Attempts - Get authselect current features to also enable them in the custom profile
                  ansible.builtin.shell:
                    cmd: authselect current | tail -n+3 | awk '{ print $2 }'
                  register: result_authselect_features
                  changed_when: false
                  when:
                    - result_authselect_profile is not skipped
                    - authselect_current_profile is not match("custom/")

                - name: Lock Accounts After Failed Password Attempts - Check if any custom profile with the same name was already created
                  ansible.builtin.stat:
                    path: /etc/authselect/{{ authselect_custom_profile }}
                  register: result_authselect_custom_profile_present
                  changed_when: false
                  when:
                    - authselect_current_profile is not match("custom/")

                - name: Lock Accounts After Failed Password Attempts - Create an authselect custom profile based on the current profile
                  ansible.builtin.command:
                    cmd: authselect create-profile hardening -b {{ authselect_current_profile }}
                  when:
                    - result_authselect_check_cmd is success
                    - authselect_current_profile is not match("custom/")
                    - not result_authselect_custom_profile_present.stat.exists

                - name: Lock Accounts After Failed Password Attempts - Ensure authselect changes are applied
                  ansible.builtin.command:
                    cmd: authselect apply-changes -b --backup=before-hardening-custom-profile
                  when:
                    - result_authselect_check_cmd is success
                    - result_authselect_profile is not skipped
                    - authselect_current_profile is not match("custom/")
                    - authselect_custom_profile is not match(authselect_current_profile)

                - name: Lock Accounts After Failed Password Attempts - Ensure the authselect custom profile is selected
                  ansible.builtin.command:
                    cmd: authselect select {{ authselect_custom_profile }}
                  register: result_pam_authselect_select_profile
                  when:
                    - result_authselect_check_cmd is success
                    - result_authselect_profile is not skipped
                    - authselect_current_profile is not match("custom/")
                    - authselect_custom_profile is not match(authselect_current_profile)

                - name: Lock Accounts After Failed Password Attempts - Restore the authselect features in the custom profile
                  ansible.builtin.command:
                    cmd: authselect enable-feature {{ item }}
                  loop: '{{ result_authselect_features.stdout_lines }}'
                  register: result_pam_authselect_restore_features
                  when:
                    - result_authselect_profile is not skipped
                    - result_authselect_features is not skipped
                    - result_pam_authselect_select_profile is not skipped

                - name: Lock Accounts After Failed Password Attempts - Ensure authselect changes are applied
                  ansible.builtin.command:
                    cmd: authselect apply-changes -b --backup=after-hardening-custom-profile
                  when:
                    - result_authselect_check_cmd is success
                    - result_authselect_profile is not skipped
                    - result_pam_authselect_restore_features is not skipped

                - name: Lock Accounts After Failed Password Attempts - Change the PAM file to be edited according to the custom authselect profile
                  ansible.builtin.set_fact:
                    pam_file_path: /etc/authselect/{{ authselect_custom_profile }}/{{ pam_file_path | basename }}
              when:
                - result_authselect_present.stat.exists

            - name: Lock Accounts After Failed Password Attempts - Ensure the "deny" option from "pam_faillock.so" is not present in {{ pam_file_path }}
              ansible.builtin.replace:
                dest: '{{ pam_file_path }}'
                regexp: (.*auth.*pam_faillock.so.*)\bdeny\b=?[0-9a-zA-Z]*(.*)
                replace: \1\2
              register: result_pam_option_removal

            - name: Lock Accounts After Failed Password Attempts - Ensure authselect changes are applied
              ansible.builtin.command:
                cmd: authselect apply-changes -b
              when:
                - result_authselect_present.stat.exists
                - result_pam_option_removal is changed
          when:
            - result_pam_file_present.stat.exists
      when:
        - '"pam" in ansible_facts.packages'
        - result_faillock_conf_check.stat.exists

    - name: Lock Accounts After Failed Password Attempts - Ensure the pam_faillock.so deny parameter in PAM files
      block:

        - name: Lock Accounts After Failed Password Attempts - Check if pam_faillock.so deny parameter is already enabled in pam files
          ansible.builtin.lineinfile:
            path: /etc/pam.d/system-auth
            regexp: .*auth.*pam_faillock\.so (preauth|authfail).*deny
            state: absent
          check_mode: true
          changed_when: false
          register: result_pam_faillock_deny_parameter_is_present

        - name: Lock Accounts After Failed Password Attempts - Ensure the inclusion of pam_faillock.so preauth deny parameter in auth section
          ansible.builtin.lineinfile:
            path: '{{ item }}'
            backrefs: true
            regexp: (^\s*auth\s+)([\w\[].*\b)(\s+pam_faillock.so preauth.*)
            line: \1required\3 deny={{ var_accounts_passwords_pam_faillock_deny }}
            state: present
          loop:
            - /etc/pam.d/system-auth
            - /etc/pam.d/password-auth
          when:
            - result_pam_faillock_deny_parameter_is_present.found == 0

        - name: Lock Accounts After Failed Password Attempts - Ensure the inclusion of pam_faillock.so authfail deny parameter in auth section
          ansible.builtin.lineinfile:
            path: '{{ item }}'
            backrefs: true
            regexp: (^\s*auth\s+)([\w\[].*\b)(\s+pam_faillock.so authfail.*)
            line: \1required\3 deny={{ var_accounts_passwords_pam_faillock_deny }}
            state: present
          loop:
            - /etc/pam.d/system-auth
            - /etc/pam.d/password-auth
          when:
            - result_pam_faillock_deny_parameter_is_present.found == 0

        - name: Lock Accounts After Failed Password Attempts - Ensure the desired value for pam_faillock.so preauth deny parameter in auth section
          ansible.builtin.lineinfile:
            path: '{{ item }}'
            backrefs: true
            regexp: (^\s*auth\s+)([\w\[].*\b)(\s+pam_faillock.so preauth.*)(deny)=[0-9]+(.*)
            line: \1required\3\4={{ var_accounts_passwords_pam_faillock_deny }}\5
            state: present
          loop:
            - /etc/pam.d/system-auth
            - /etc/pam.d/password-auth
          when:
            - result_pam_faillock_deny_parameter_is_present.found > 0

        - name: Lock Accounts After Failed Password Attempts - Ensure the desired value for pam_faillock.so authfail deny parameter in auth section
          ansible.builtin.lineinfile:
            path: '{{ item }}'
            backrefs: true
            regexp: (^\s*auth\s+)([\w\[].*\b)(\s+pam_faillock.so authfail.*)(deny)=[0-9]+(.*)
            line: \1required\3\4={{ var_accounts_passwords_pam_faillock_deny }}\5
            state: present
          loop:
            - /etc/pam.d/system-auth
            - /etc/pam.d/password-auth
          when:
            - result_pam_faillock_deny_parameter_is_present.found > 0
      when:
        - '"pam" in ansible_facts.packages'
        - not result_faillock_conf_check.stat.exists


# Set Lockout Time for Failed Password Attempts
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_accounts_passwords_pam_faillock_unlock_time,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_rhv
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Set Lockout Time for Failed Password Attempts
  hosts: 'vian.local'
  become: true
  vars:
    var_accounts_passwords_pam_faillock_unlock_time: '900'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzTTBRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      UlNkMUF2VWpWa2EwbHhWMkV5TWtweGRtRnBlSEJOWTFaelJWQUtVWFl2ZFVwM1JYaG9URXB2YUVO
      T05qWXdiRlprT0ZsMkszRmtTazVJSzJKYVdEWXJPR3BuVWtGd2JWRmxRVm80WldWQ1JrUXdhMjF0
      YTJ3NGJHTkliQXB1VG5SSU9XRkJaMHBpTUdWdFpYbGhkRmMzT0UxeUwwMVFkRUpqTW1OVGMzbFFV
      R1I0VWxVMFNtbHJZV3hQVERnM1ZtbDNlbTFPYUZSME5GcHRXVk0yQ25wRU1WSm1VM1ZGTlVWdVRI
      RldWMlowTW0wdlJXMXBLM2t4V1hKS1FVaENRM1JQUlc5eWRTdEZVbUZzUW5WcFNDdE5Xa3BqYjFs
      VVF6UjBURGhpY0RNS1YzUTBaVUZ2WW05dkswUmxUbmh1Vlc1YU9FdGthakkzVVZrdlNtUnNVVFZz
      TUZaUVFVVTFXVUZ6TlRKeVkwOURNVTQwWVU1SlRHWkpZVzVuVjJ3MlRBcHpVRU5vV0VSU1MwRXlO
      bTVRTmk5clpWUnFlVzl2WlRCV01raE1ZVWx2Y1dad1ZubzFVM1JMVUd0aE1sQnBOV0Z4TW5FNFZU
      RklabVozV0hOclRHNUpDakp4U0hwaVJUTjROSGRXVEZOVmFuSjFXa2hhWXpKeVFtZDNjbU5CV1c4
      d1ZFMXRWRlZJVmk4dk9ESlRNa2xyYjA0elZucEVNSEJ1VVc5V1RXUlNRV3dLUm0xaVR5dDJMMDU1
      V0dKa2VrMUlWM1pLVDFCQmFGTllhVGxCY2sxMU1GVlhjbTV0ZDJ4Uk5ETnVVelJEYzNkVlJrWmhN
      R2xNWmpoU1EyaHBUbVEzU2dwa09HdFJkMlJHTlZoM1pIVTNjbUpRV0hsaFIxWnlRVlF5YjJwS2Js
      cGpiMEZUTDJkTGJrOXZlbE5CYVdkVGJYbzFNVGRJTWtSVmJrbzROV1JoZFhobENuUndaa05EZVRC
      Qll5ODVXa3RHY1hCeWFrRlBNbk5XVFRobVJVUk9hVGhKV1ZSYWFUUXpkRFZuZUV3MmVGbGpjelk0
      ZHpoSFRYQnpiMWhqY0cxVmNtZ0tRbmRxVURObmF5ODJZV1pvTnpZeVJGSmtWMVJrUlc1cFlUUllk
      VTl4TUdSdVJWSXhXbHBqVXpWSUx6ZFFhbXhNYm5OTFdGZEthMWxCTlROWE5FRkNPUXBJWTJOYVpY
      VnFORWh3VlZCRGIxcFRZekJzTHdvOVVISllNUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-80670-3
    - CJIS-5.5.3
    - DISA-STIG-RHEL-08-020014
    - DISA-STIG-RHEL-08-020015
    - NIST-800-171-3.1.8
    - NIST-800-53-AC-7(b)
    - NIST-800-53-CM-6(a)
    - PCI-DSS-Req-8.1.7
    - PCI-DSSv4-8.3.4
    - accounts_passwords_pam_faillock_unlock_time
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Set Lockout Time for Failed Password Attempts - Check if system relies on authselect tool
      ansible.builtin.stat:
        path: /usr/bin/authselect
      register: result_authselect_present
      when: '"pam" in ansible_facts.packages'

    - name: Set Lockout Time for Failed Password Attempts - Remediation where authselect tool is present
      block:

        - name: Set Lockout Time for Failed Password Attempts - Check integrity of authselect current profile
          ansible.builtin.command:
            cmd: authselect check
          register: result_authselect_check_cmd
          changed_when: false
          failed_when: false

        - name: Set Lockout Time for Failed Password Attempts - Informative message based on the authselect integrity check result
          ansible.builtin.assert:
            that:
              - result_authselect_check_cmd.rc == 0
            fail_msg:
              - authselect integrity check failed. Remediation aborted!
              - This remediation could not be applied because an authselect profile was not selected or the selected profile is not intact.
              - It is not recommended to manually edit the PAM files when authselect tool is available.
              - In cases where the default authselect profile does not cover a specific demand, a custom authselect profile is recommended.
            success_msg:
              - authselect integrity check passed

        - name: Set Lockout Time for Failed Password Attempts - Get authselect current features
          ansible.builtin.shell:
            cmd: authselect current | tail -n+3 | awk '{ print $2 }'
          register: result_authselect_features
          changed_when: false
          when:
            - result_authselect_check_cmd is success

        - name: Set Lockout Time for Failed Password Attempts - Ensure "with-faillock" feature is enabled using authselect tool
          ansible.builtin.command:
            cmd: authselect enable-feature with-faillock
          register: result_authselect_enable_feature_cmd
          when:
            - result_authselect_check_cmd is success
            - result_authselect_features.stdout is not search("with-faillock")

        - name: Set Lockout Time for Failed Password Attempts - Ensure authselect changes are applied
          ansible.builtin.command:
            cmd: authselect apply-changes -b
          when:
            - result_authselect_enable_feature_cmd is not skipped
            - result_authselect_enable_feature_cmd is success
      when:
        - '"pam" in ansible_facts.packages'
        - result_authselect_present.stat.exists

    - name: Set Lockout Time for Failed Password Attempts - Remediation where authselect tool is not present
      block:

        - name: Set Lockout Time for Failed Password Attempts - Check if pam_faillock.so is already enabled
          ansible.builtin.lineinfile:
            path: /etc/pam.d/system-auth
            regexp: .*auth.*pam_faillock\.so (preauth|authfail)
            state: absent
          check_mode: true
          changed_when: false
          register: result_pam_faillock_is_enabled

        - name: Set Lockout Time for Failed Password Attempts - Enable pam_faillock.so preauth editing PAM files
          ansible.builtin.lineinfile:
            path: '{{ item }}'
            line: auth        required      pam_faillock.so preauth
            insertbefore: ^auth.*sufficient.*pam_unix\.so.*
            state: present
          loop:
            - /etc/pam.d/system-auth
            - /etc/pam.d/password-auth
          when:
            - result_pam_faillock_is_enabled.found == 0

        - name: Set Lockout Time for Failed Password Attempts - Enable pam_faillock.so authfail editing PAM files
          ansible.builtin.lineinfile:
            path: '{{ item }}'
            line: auth        required      pam_faillock.so authfail
            insertbefore: ^auth.*required.*pam_deny\.so.*
            state: present
          loop:
            - /etc/pam.d/system-auth
            - /etc/pam.d/password-auth
          when:
            - result_pam_faillock_is_enabled.found == 0

        - name: Set Lockout Time for Failed Password Attempts - Enable pam_faillock.so account section editing PAM files
          ansible.builtin.lineinfile:
            path: '{{ item }}'
            line: account     required      pam_faillock.so
            insertbefore: ^account.*required.*pam_unix\.so.*
            state: present
          loop:
            - /etc/pam.d/system-auth
            - /etc/pam.d/password-auth
          when:
            - result_pam_faillock_is_enabled.found == 0
      when:
        - '"pam" in ansible_facts.packages'
        - not result_authselect_present.stat.exists

    - name: Set Lockout Time for Failed Password Attempts - Check the presence of /etc/security/faillock.conf file
      ansible.builtin.stat:
        path: /etc/security/faillock.conf
      register: result_faillock_conf_check
      when: '"pam" in ansible_facts.packages'

    - name: Set Lockout Time for Failed Password Attempts - Ensure the pam_faillock.so unlock_time parameter in /etc/security/faillock.conf
      ansible.builtin.lineinfile:
        path: /etc/security/faillock.conf
        regexp: ^\s*unlock_time\s*=
        line: unlock_time = {{ var_accounts_passwords_pam_faillock_unlock_time }}
        state: present
      when:
        - '"pam" in ansible_facts.packages'
        - result_faillock_conf_check.stat.exists

    - name: Set Lockout Time for Failed Password Attempts - Ensure the pam_faillock.so unlock_time parameter not in PAM files
      block:

        - name: Set Lockout Time for Failed Password Attempts - Check if /etc/pam.d/system-auth file is present
          ansible.builtin.stat:
            path: /etc/pam.d/system-auth
          register: result_pam_file_present

        - name: Set Lockout Time for Failed Password Attempts - Check the proper remediation for the system
          block:

            - name: Set Lockout Time for Failed Password Attempts - Define the PAM file to be edited as a local fact
              ansible.builtin.set_fact:
                pam_file_path: /etc/pam.d/system-auth

            - name: Set Lockout Time for Failed Password Attempts - Check if system relies on authselect tool
              ansible.builtin.stat:
                path: /usr/bin/authselect
              register: result_authselect_present

            - name: Set Lockout Time for Failed Password Attempts - Ensure authselect custom profile is used if authselect is present
              block:

                - name: Set Lockout Time for Failed Password Attempts - Check integrity of authselect current profile
                  ansible.builtin.command:
                    cmd: authselect check
                  register: result_authselect_check_cmd
                  changed_when: false
                  failed_when: false

                - name: Set Lockout Time for Failed Password Attempts - Informative message based on the authselect integrity check result
                  ansible.builtin.assert:
                    that:
                      - result_authselect_check_cmd.rc == 0
                    fail_msg:
                      - authselect integrity check failed. Remediation aborted!
                      - This remediation could not be applied because an authselect profile was not selected or the selected profile is not intact.
                      - It is not recommended to manually edit the PAM files when authselect tool is available.
                      - In cases where the default authselect profile does not cover a specific demand, a custom authselect profile is recommended.
                    success_msg:
                      - authselect integrity check passed

                - name: Set Lockout Time for Failed Password Attempts - Get authselect current profile
                  ansible.builtin.shell:
                    cmd: authselect current -r | awk '{ print $1 }'
                  register: result_authselect_profile
                  changed_when: false
                  when:
                    - result_authselect_check_cmd is success

                - name: Set Lockout Time for Failed Password Attempts - Define the current authselect profile as a local fact
                  ansible.builtin.set_fact:
                    authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                    authselect_custom_profile: '{{ result_authselect_profile.stdout }}'
                  when:
                    - result_authselect_profile is not skipped
                    - result_authselect_profile.stdout is match("custom/")

                - name: Set Lockout Time for Failed Password Attempts - Define the new authselect custom profile as a local fact
                  ansible.builtin.set_fact:
                    authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                    authselect_custom_profile: custom/hardening
                  when:
                    - result_authselect_profile is not skipped
                    - result_authselect_profile.stdout is not match("custom/")

                - name: Set Lockout Time for Failed Password Attempts - Get authselect current features to also enable them in the custom profile
                  ansible.builtin.shell:
                    cmd: authselect current | tail -n+3 | awk '{ print $2 }'
                  register: result_authselect_features
                  changed_when: false
                  when:
                    - result_authselect_profile is not skipped
                    - authselect_current_profile is not match("custom/")

                - name: Set Lockout Time for Failed Password Attempts - Check if any custom profile with the same name was already created
                  ansible.builtin.stat:
                    path: /etc/authselect/{{ authselect_custom_profile }}
                  register: result_authselect_custom_profile_present
                  changed_when: false
                  when:
                    - authselect_current_profile is not match("custom/")

                - name: Set Lockout Time for Failed Password Attempts - Create an authselect custom profile based on the current profile
                  ansible.builtin.command:
                    cmd: authselect create-profile hardening -b {{ authselect_current_profile }}
                  when:
                    - result_authselect_check_cmd is success
                    - authselect_current_profile is not match("custom/")
                    - not result_authselect_custom_profile_present.stat.exists

                - name: Set Lockout Time for Failed Password Attempts - Ensure authselect changes are applied
                  ansible.builtin.command:
                    cmd: authselect apply-changes -b --backup=before-hardening-custom-profile
                  when:
                    - result_authselect_check_cmd is success
                    - result_authselect_profile is not skipped
                    - authselect_current_profile is not match("custom/")
                    - authselect_custom_profile is not match(authselect_current_profile)

                - name: Set Lockout Time for Failed Password Attempts - Ensure the authselect custom profile is selected
                  ansible.builtin.command:
                    cmd: authselect select {{ authselect_custom_profile }}
                  register: result_pam_authselect_select_profile
                  when:
                    - result_authselect_check_cmd is success
                    - result_authselect_profile is not skipped
                    - authselect_current_profile is not match("custom/")
                    - authselect_custom_profile is not match(authselect_current_profile)

                - name: Set Lockout Time for Failed Password Attempts - Restore the authselect features in the custom profile
                  ansible.builtin.command:
                    cmd: authselect enable-feature {{ item }}
                  loop: '{{ result_authselect_features.stdout_lines }}'
                  register: result_pam_authselect_restore_features
                  when:
                    - result_authselect_profile is not skipped
                    - result_authselect_features is not skipped
                    - result_pam_authselect_select_profile is not skipped

                - name: Set Lockout Time for Failed Password Attempts - Ensure authselect changes are applied
                  ansible.builtin.command:
                    cmd: authselect apply-changes -b --backup=after-hardening-custom-profile
                  when:
                    - result_authselect_check_cmd is success
                    - result_authselect_profile is not skipped
                    - result_pam_authselect_restore_features is not skipped

                - name: Set Lockout Time for Failed Password Attempts - Change the PAM file to be edited according to the custom authselect profile
                  ansible.builtin.set_fact:
                    pam_file_path: /etc/authselect/{{ authselect_custom_profile }}/{{ pam_file_path | basename }}
              when:
                - result_authselect_present.stat.exists

            - name: Set Lockout Time for Failed Password Attempts - Ensure the "unlock_time" option from "pam_faillock.so" is not present in {{ pam_file_path }}
              ansible.builtin.replace:
                dest: '{{ pam_file_path }}'
                regexp: (.*auth.*pam_faillock.so.*)\bunlock_time\b=?[0-9a-zA-Z]*(.*)
                replace: \1\2
              register: result_pam_option_removal

            - name: Set Lockout Time for Failed Password Attempts - Ensure authselect changes are applied
              ansible.builtin.command:
                cmd: authselect apply-changes -b
              when:
                - result_authselect_present.stat.exists
                - result_pam_option_removal is changed
          when:
            - result_pam_file_present.stat.exists

        - name: Set Lockout Time for Failed Password Attempts - Check if /etc/pam.d/password-auth file is present
          ansible.builtin.stat:
            path: /etc/pam.d/password-auth
          register: result_pam_file_present

        - name: Set Lockout Time for Failed Password Attempts - Check the proper remediation for the system
          block:

            - name: Set Lockout Time for Failed Password Attempts - Define the PAM file to be edited as a local fact
              ansible.builtin.set_fact:
                pam_file_path: /etc/pam.d/password-auth

            - name: Set Lockout Time for Failed Password Attempts - Check if system relies on authselect tool
              ansible.builtin.stat:
                path: /usr/bin/authselect
              register: result_authselect_present

            - name: Set Lockout Time for Failed Password Attempts - Ensure authselect custom profile is used if authselect is present
              block:

                - name: Set Lockout Time for Failed Password Attempts - Check integrity of authselect current profile
                  ansible.builtin.command:
                    cmd: authselect check
                  register: result_authselect_check_cmd
                  changed_when: false
                  failed_when: false

                - name: Set Lockout Time for Failed Password Attempts - Informative message based on the authselect integrity check result
                  ansible.builtin.assert:
                    that:
                      - result_authselect_check_cmd.rc == 0
                    fail_msg:
                      - authselect integrity check failed. Remediation aborted!
                      - This remediation could not be applied because an authselect profile was not selected or the selected profile is not intact.
                      - It is not recommended to manually edit the PAM files when authselect tool is available.
                      - In cases where the default authselect profile does not cover a specific demand, a custom authselect profile is recommended.
                    success_msg:
                      - authselect integrity check passed

                - name: Set Lockout Time for Failed Password Attempts - Get authselect current profile
                  ansible.builtin.shell:
                    cmd: authselect current -r | awk '{ print $1 }'
                  register: result_authselect_profile
                  changed_when: false
                  when:
                    - result_authselect_check_cmd is success

                - name: Set Lockout Time for Failed Password Attempts - Define the current authselect profile as a local fact
                  ansible.builtin.set_fact:
                    authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                    authselect_custom_profile: '{{ result_authselect_profile.stdout }}'
                  when:
                    - result_authselect_profile is not skipped
                    - result_authselect_profile.stdout is match("custom/")

                - name: Set Lockout Time for Failed Password Attempts - Define the new authselect custom profile as a local fact
                  ansible.builtin.set_fact:
                    authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                    authselect_custom_profile: custom/hardening
                  when:
                    - result_authselect_profile is not skipped
                    - result_authselect_profile.stdout is not match("custom/")

                - name: Set Lockout Time for Failed Password Attempts - Get authselect current features to also enable them in the custom profile
                  ansible.builtin.shell:
                    cmd: authselect current | tail -n+3 | awk '{ print $2 }'
                  register: result_authselect_features
                  changed_when: false
                  when:
                    - result_authselect_profile is not skipped
                    - authselect_current_profile is not match("custom/")

                - name: Set Lockout Time for Failed Password Attempts - Check if any custom profile with the same name was already created
                  ansible.builtin.stat:
                    path: /etc/authselect/{{ authselect_custom_profile }}
                  register: result_authselect_custom_profile_present
                  changed_when: false
                  when:
                    - authselect_current_profile is not match("custom/")

                - name: Set Lockout Time for Failed Password Attempts - Create an authselect custom profile based on the current profile
                  ansible.builtin.command:
                    cmd: authselect create-profile hardening -b {{ authselect_current_profile }}
                  when:
                    - result_authselect_check_cmd is success
                    - authselect_current_profile is not match("custom/")
                    - not result_authselect_custom_profile_present.stat.exists

                - name: Set Lockout Time for Failed Password Attempts - Ensure authselect changes are applied
                  ansible.builtin.command:
                    cmd: authselect apply-changes -b --backup=before-hardening-custom-profile
                  when:
                    - result_authselect_check_cmd is success
                    - result_authselect_profile is not skipped
                    - authselect_current_profile is not match("custom/")
                    - authselect_custom_profile is not match(authselect_current_profile)

                - name: Set Lockout Time for Failed Password Attempts - Ensure the authselect custom profile is selected
                  ansible.builtin.command:
                    cmd: authselect select {{ authselect_custom_profile }}
                  register: result_pam_authselect_select_profile
                  when:
                    - result_authselect_check_cmd is success
                    - result_authselect_profile is not skipped
                    - authselect_current_profile is not match("custom/")
                    - authselect_custom_profile is not match(authselect_current_profile)

                - name: Set Lockout Time for Failed Password Attempts - Restore the authselect features in the custom profile
                  ansible.builtin.command:
                    cmd: authselect enable-feature {{ item }}
                  loop: '{{ result_authselect_features.stdout_lines }}'
                  register: result_pam_authselect_restore_features
                  when:
                    - result_authselect_profile is not skipped
                    - result_authselect_features is not skipped
                    - result_pam_authselect_select_profile is not skipped

                - name: Set Lockout Time for Failed Password Attempts - Ensure authselect changes are applied
                  ansible.builtin.command:
                    cmd: authselect apply-changes -b --backup=after-hardening-custom-profile
                  when:
                    - result_authselect_check_cmd is success
                    - result_authselect_profile is not skipped
                    - result_pam_authselect_restore_features is not skipped

                - name: Set Lockout Time for Failed Password Attempts - Change the PAM file to be edited according to the custom authselect profile
                  ansible.builtin.set_fact:
                    pam_file_path: /etc/authselect/{{ authselect_custom_profile }}/{{ pam_file_path | basename }}
              when:
                - result_authselect_present.stat.exists

            - name: Set Lockout Time for Failed Password Attempts - Ensure the "unlock_time" option from "pam_faillock.so" is not present in {{ pam_file_path }}
              ansible.builtin.replace:
                dest: '{{ pam_file_path }}'
                regexp: (.*auth.*pam_faillock.so.*)\bunlock_time\b=?[0-9a-zA-Z]*(.*)
                replace: \1\2
              register: result_pam_option_removal

            - name: Set Lockout Time for Failed Password Attempts - Ensure authselect changes are applied
              ansible.builtin.command:
                cmd: authselect apply-changes -b
              when:
                - result_authselect_present.stat.exists
                - result_pam_option_removal is changed
          when:
            - result_pam_file_present.stat.exists
      when:
        - '"pam" in ansible_facts.packages'
        - result_faillock_conf_check.stat.exists

    - name: Set Lockout Time for Failed Password Attempts - Ensure the pam_faillock.so unlock_time parameter in PAM files
      block:

        - name: Set Lockout Time for Failed Password Attempts - Check if pam_faillock.so unlock_time parameter is already enabled in pam files
          ansible.builtin.lineinfile:
            path: /etc/pam.d/system-auth
            regexp: .*auth.*pam_faillock\.so (preauth|authfail).*unlock_time
            state: absent
          check_mode: true
          changed_when: false
          register: result_pam_faillock_unlock_time_parameter_is_present

        - name: Set Lockout Time for Failed Password Attempts - Ensure the inclusion of pam_faillock.so preauth unlock_time parameter in auth section
          ansible.builtin.lineinfile:
            path: '{{ item }}'
            backrefs: true
            regexp: (^\s*auth\s+)([\w\[].*\b)(\s+pam_faillock.so preauth.*)
            line: \1required\3 unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
            state: present
          loop:
            - /etc/pam.d/system-auth
            - /etc/pam.d/password-auth
          when:
            - result_pam_faillock_unlock_time_parameter_is_present.found == 0

        - name: Set Lockout Time for Failed Password Attempts - Ensure the inclusion of pam_faillock.so authfail unlock_time parameter in auth section
          ansible.builtin.lineinfile:
            path: '{{ item }}'
            backrefs: true
            regexp: (^\s*auth\s+)([\w\[].*\b)(\s+pam_faillock.so authfail.*)
            line: \1required\3 unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
            state: present
          loop:
            - /etc/pam.d/system-auth
            - /etc/pam.d/password-auth
          when:
            - result_pam_faillock_unlock_time_parameter_is_present.found == 0

        - name: Set Lockout Time for Failed Password Attempts - Ensure the desired value for pam_faillock.so preauth unlock_time parameter in auth section
          ansible.builtin.lineinfile:
            path: '{{ item }}'
            backrefs: true
            regexp: (^\s*auth\s+)([\w\[].*\b)(\s+pam_faillock.so preauth.*)(unlock_time)=[0-9]+(.*)
            line: \1required\3\4={{ var_accounts_passwords_pam_faillock_unlock_time }}\5
            state: present
          loop:
            - /etc/pam.d/system-auth
            - /etc/pam.d/password-auth
          when:
            - result_pam_faillock_unlock_time_parameter_is_present.found > 0

        - name: Set Lockout Time for Failed Password Attempts - Ensure the desired value for pam_faillock.so authfail unlock_time parameter in auth section
          ansible.builtin.lineinfile:
            path: '{{ item }}'
            backrefs: true
            regexp: (^\s*auth\s+)([\w\[].*\b)(\s+pam_faillock.so authfail.*)(unlock_time)=[0-9]+(.*)
            line: \1required\3\4={{ var_accounts_passwords_pam_faillock_unlock_time }}\5
            state: present
          loop:
            - /etc/pam.d/system-auth
            - /etc/pam.d/password-auth
          when:
            - result_pam_faillock_unlock_time_parameter_is_present.found > 0
      when:
        - '"pam" in ansible_facts.packages'
        - not result_faillock_conf_check.stat.exists


# Set Interactive Session Timeout
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_accounts_tmout,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Set Interactive Session Timeout
  hosts: 'vian.local'
  become: true
  vars:
    var_accounts_tmout: '900'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzTTFRVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      Qk5XVkF2TWsxR0wyRTRURXBTUlRKTEwwdzRWbWhxV0doV1MzVUtZMVZ1ZGxCRWFIRlRWazV5U0ZW
      WlZFWXlUVE5XYXpsV05FWlBUVmhCYzJsc1JERlpXSE4wS3pSd2VsQlpiVVpNUVdaUUszbEdVbmt6
      ZEZSSVRFcGhTUXBrWXk5MlNVUTRUSE5LVG1aaU1VeEZNMVp5YkhSblRWaGFjR0ZrUzAweE1sSlNU
      SFl3TkZobE1rTnpZakp3WlRKbU5VZHdTamxUVkRadGIxRlpaRlJGQ2pGVFowc3hNMUp2WlVwbE0w
      UnliRE0xUTAwM1dpODNZVXRWZUhoSVVXUnNUMXBRVUhvcmJYZHRTMlJYYTBodE1HY3pSR1Y0TW5k
      bmMyOTRXRFZPY2xJS05ra3dTVmRaYW1GMGJHTlFZVzg1WlhOTmNXaDRaSHB5TkRSRlQwWm9iVGQy
      YkM4d1ZUUjRjRGhCTVZScVlYRkNMMnByYXpReVRuWnVPVTFTZFZSdFlncFJLellyYjBWaGVHSkZi
      VXM0TkhWbWJUTlFWWEJJTjFSaFNGVkZLMnBwVW05aGVIbHZhekZWUW01Vk5YWm9XQ3ROV25SSmFs
      ZHNNRXhhVjJwalVHdzRDaXRVUkhoRVdEZ3ZWMnR4ZURZelJEWjNjMU5SWm1JM2RFNXhUMFkzVDJw
      WU1HTnNZM05CV25BMGJGTnZOblJsY0RReU5IVlZSaXRsUW5kWFJucEhNVXdLWnpGWFJteG9SbkZ6
      SzJkVE5VSlpXVkZYVHpnMU1XWnJNWGRUWmtKMlVGQmxOWE42Y0VaQmFHWmtNWFp1Tm01UGJreHZS
      VEpCV21WelIzQkliVGRZTndvemEwZzVkbFZ5TkM5TVZVRTNTRXhSVGxWMFZtbENUMjgxYVdGR2NI
      WXZia2N5VkVGSVJESmpaMUJPV1hRMlkyNVVhekJoV0U5WmF6VTVNVkpCWm01VENrbFVOM2d2TTFG
      cGRWb3ljWEJ1TWpORGVWVklabVZEVlUxQ1VXTmFhMVJIVUdNNFZIaExibUV2TTBSdGRsWTVhRTVC
      VTBGdWN6SjZSakpsUm1KTGFEZ0tLM1pyZDNweE1FNTJkWFoxYzBWTlRXMUtkbGhIT0ZsekwxTkhk
      MGMzZHlzemFtNDBiV0p1TUZwMFVrMW1Za1kzWkZwRFJGTTBNR0Z0YWsxVFQxcEtRUXAwYVVsNGRY
      ZEVRMUZJTXk5U1QzSlhlVVZTUndvOVNUbGtWd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-80673-7
    - NIST-800-171-3.1.11
    - NIST-800-53-AC-12
    - NIST-800-53-AC-2(5)
    - NIST-800-53-CM-6(a)
    - NIST-800-53-SC-10
    - PCI-DSSv4-8.6.1
    - accounts_tmout
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Correct any occurrence of TMOUT in /etc/profile
      replace:
        path: /etc/profile
        regexp: ^[^#].*TMOUT=.*
        replace: typeset -xr TMOUT={{ var_accounts_tmout }}
      register: profile_replaced
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Set Interactive Session Timeout
      lineinfile:
        path: /etc/profile.d/tmout.sh
        create: true
        regexp: TMOUT=
        line: typeset -xr TMOUT={{ var_accounts_tmout }}
        state: present
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Ensure the Default Bash Umask is Set Correctly
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_accounts_umask_etc_bashrc,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure the Default Bash Umask is Set Correctly
  hosts: 'vian.local'
  become: true
  vars:
    var_accounts_user_umask: '027'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzTTJRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      NURjMUF2VWxrMWRrZ3hlRmQzVmtkMWNrRndUMWd5ZEhKeU0zRUtXVkZLT1VsNWVuTjJUMU5VZHpR
      dlRGb3hSMnRqUnpsemRrdHNhblV2Um1aM1ZFbENOVlZZV25ObFZtNW9NbWxtVUdod1RUVkZNWHBF
      T0ZKMlRqRTJid293VFVwcEx6azRRMnAwV1hWVVlVdGpZMVZCWjFoc1kwMVRlR1oyVDBWTlF5dDJW
      RTVwYUc1WFQzUk5TREZtTlVwc2NHbEtXblZNV25sWWJFdGFTbkJRQ2tZNFUxSkthbUpzTUdsUVRI
      TkNRMjVYYkVsSVZUSlFXbmsxWTIwck0xTnFWRkpXUm1wQlZXVlliRTFyYVVselJHUnBPV1prZWsx
      bVMwUklNREZ0TDBjS1VEWnFPRU41ZWxKNlZWQllSbkJ4UzJSWVdFOVdVMVpVVDA5eGJ6SllNbUV6
      Y0RRMFVFeDZWR3hsVlRSNlR6WnpZMlI1VFZaVlkzaE9VVlY1ZVc0eldBcEVTM0I2WWtaSWNVNVpa
      MUZMWlRWemQwUkpTSEpPYTJab1duRjJhVXRpTml0bFRIVlhVMEZSUmtZNWVVbG9hMmRPTm5seVNU
      Wk9TbE5NYjA1UWNtTm9DbXRaT0RKclRXWTNhM2R6TUdWYVIwRTFLM2hqTVZRd1UwZExWMjVUSzNG
      SmMyNVlSV0l2YWs1dWFrZGlURFU0TVdJeVNYWk5aMHc0TkZSeFVHMTVOV3dLTkcxV00yaHNNbEpF
      UjJkWVlVbERUSEZSY201SmIzZDJTRWs1WmxGVldXeHRiV0o2UTB0NFJXNDNjRTlIUWs1T2JXOUtT
      VE51VUhWTlZIUjBLMjlrTmdwbloxWTFZM0UxZGxCUFRIWkRNbU5sYVV4c2VYbEtPV28wZGpKTU1V
      azFUekJWVEhGbmJuWTBNM0pXWVVSR1ZHSnJjRGRCZDFJMmN5OTNUMVZTUm5GU0NteG5MemgwVlVG
      SksyWnVObWxrUjJGQlZrTnRSbkJ6VERoUmFVdzVkV1ZKT0dadlNHOHJUbU13WVZWV1RuSnFia3RL
      V1hjelQzRTRUMmhTVkVGVGRXMEtNSHBuTUhWbFlrdHhPSEF2ZVhKaFZEbFBSM0l6VFROV1ZYZDJj
      RWd6V1RGeFozQTNTMWxsUWs1dWNGZ3ZTV0V4VW5sTU5FMW9aell3ZWswMlNtMUNkUXBhTW1WTlEz
      cHBkVGhMVlZoa1VIQkxWM1JDYVFvOU9GcDZiUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-81036-6
    - DISA-STIG-RHEL-08-020353
    - NIST-800-53-AC-6(1)
    - NIST-800-53-CM-6(a)
    - accounts_umask_etc_bashrc
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Check if umask in /etc/bashrc is already set
      ansible.builtin.lineinfile:
        path: /etc/bashrc
        regexp: ^(\s*)umask\s+.*
        state: absent
      check_mode: true
      changed_when: false
      register: umask_replace
      when: '"bash" in ansible_facts.packages'

    - name: Replace user umask in /etc/bashrc
      ansible.builtin.replace:
        path: /etc/bashrc
        regexp: ^(\s*)umask(\s+).*
        replace: \g<1>umask\g<2>{{ var_accounts_user_umask }}
      when:
        - '"bash" in ansible_facts.packages'
        - umask_replace.found > 0

    - name: Ensure the Default umask is Appended Correctly
      ansible.builtin.lineinfile:
        create: true
        path: /etc/bashrc
        line: umask {{ var_accounts_user_umask }}
      when:
        - '"bash" in ansible_facts.packages'
        - umask_replace.found == 0


# Ensure the Default Umask is Set Correctly in login.defs
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_accounts_umask_etc_login_defs,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure the Default Umask is Set Correctly in login.defs
  hosts: 'vian.local'
  become: true
  vars:
    var_accounts_user_umask: '027'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzTTJRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      ZHBXVkF2TUhoSmIzUTBNbXRpVFU4NGVXUlZUVXhGWVc5T1NrMEtjaTgwVFhkaU5rdE5SRFJDVG1G
      TFUyczBZMHREY2l0dk4zcHRXakJNVFdaNk1GazNTSGhJWjAwMWNsVXdiRXBpY0dSbUwwbFhjalV4
      YjBwTloxbEVUUXBOU25GM1VEbFRWWFFyUTNkSU4zbDViMkpFTUZkMFNTdExkV3RUUm1wck5VRnVR
      MklyYm05V1EzWnVTRE0yY0VVNFNFVkNVVFpXUkdnelYwUkdMemwyQ25reFowWmllVlpQYjBsS1Vq
      RkxZekpxYWs0MVMxUlhiRTlTUm10RlpreGhkV00zVTFWU1JtaExPVmhVUmlzcllYSmhlbEpRVHpO
      elRHbDRkMXB1YzA4S1RYUTFNR0Y2T1U5M2EwVm1WblpJTVZCVmFVcHBVVUpJTVZoaVVITkVPSEJL
      VWxOMU5UTTNNVEV4TkdkSWFFSjZZa3h6VlROc1VqWnJWMnBQVUhoaVNRcG9ibnBTT0RSNVFuUmxV
      M0JPU1ZOeFFWUmpURWNyVkZGTVNXTldRblZhYkZCeWNGbHBURkYyUlhreWQxWldOVFZvTUhsblFt
      cElhM0Z2VkhjelV6bGxDbTloV0haeGRtbDBXbFpDWVU0emJFY3ZOa2w1Y1VZek16UjJOVkpETDJo
      WlNtVlZaVU41YkhRdmFrVTFaVnBPWWtoNll6VnZPRzlDU1dFNFIyeGxWak1LUzJkcE0yWjRlSEJI
      U1c5b1ZHSkJkMHd3TVVWUVkwOWFZMVJDTjFoMmJXMHpiMkVyTkVsUlExcFZlbFp5U2pNemNtaDBR
      MlEyTjJ0WWQxVmhaMnBEV0FwR1NWWk5SemhIZUVrNWQxRXZOemhNU1dRek9IbFRZek5DTWt4Q2FW
      UkxiVUZ1VEhsUFdIVXpPVkZFY0RCeldIWklXbFJWWm01aVdXOUJPVlJzUW1GSkNrazRNSEpvU2pS
      SVVVTTBkVXBXZUVWSE56VXpRVkZvVjJKRFYyYzNUbWxQV1VoSlYwWkZjbFF5ZW5kM1ZraEpVVWN2
      V1dkeVpqRkNUSFIzWmt4UGNqWUtSMW92TDFWQlYzTjJUbmtyU1ZORE1uZGFPRFJaZWt0SldHUnNk
      ek13Y2xnMVprOVFLekZTWW1kMVUzRnBXWFJoUW5KeFFuUmhhelJUWVc1cVZHVmhXQXBOWmsxWWMz
      bHVXWFpZWTJ0c05qSlhkakZwWWdvOVNsWk5PUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-82888-9
    - DISA-STIG-RHEL-08-020351
    - NIST-800-53-AC-6(1)
    - NIST-800-53-CM-6(a)
    - accounts_umask_etc_login_defs
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Check if UMASK is already set
      ansible.builtin.lineinfile:
        path: /etc/login.defs
        regexp: ^(\s*)UMASK\s+.*
        state: absent
      check_mode: true
      changed_when: false
      register: result_umask_is_set
      when: '"shadow-utils" in ansible_facts.packages'

    - name: Replace user UMASK in /etc/login.defs
      ansible.builtin.replace:
        path: /etc/login.defs
        regexp: ^(\s*)UMASK(\s+).*
        replace: \g<1>UMASK\g<2>{{ var_accounts_user_umask }}
      when:
        - '"shadow-utils" in ansible_facts.packages'
        - result_umask_is_set.found > 0

    - name: Ensure the Default UMASK is Appended Correctly
      ansible.builtin.lineinfile:
        create: true
        path: /etc/login.defs
        line: UMASK {{ var_accounts_user_umask }}
      when:
        - '"shadow-utils" in ansible_facts.packages'
        - result_umask_is_set.found == 0


# Ensure the Default Umask is Set Correctly in /etc/profile
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_accounts_umask_etc_profile,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure the Default Umask is Set Correctly in /etc/profile
  hosts: 'vian.local'
  become: true
  vars:
    var_accounts_user_umask: '027'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzTTJRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rs
      Uk9VVkZCUzBRdmF6WkJUVEY0SzNnMFkzQTJWWEJHSzNWWlozQUtZMjF1VmpkTVFURkNaWGRLVUZK
      WlprWkZkbTFoUmtWS2REbHpZbWRPVTJaTE9HMU1ZeXRoTkZkd1lVeEZSbFZTYVN0WU0zTXphU3N3
      VkROWVQxVkVNQXBYVmk5NU9XNVBOMVZDTDFvNE5sZ3hUa2xOU0hCRU0yOHhNa0ZLYkRsc2N6UnpO
      MDFVZGpSbVlVeE1TRU12VEZWTk4xUkdXbmxRVGtkUlowUXJNMnhzQ21vMlNrVk5ORFJMTVVKeFVW
      Sk1VbVpNVVRoNlozVnNkbGsxTUVSclFUazRha1ZDWXpWeFN6YzRaM2M0UmtwWU1XTklabTkzYjNW
      RmRrWjNSSEF4WldvS1JtZ3JjMVpUTjJweU4xWkhSVkZwTjNFek9FZGpNVVE1T1U1dk9WZFFZMWdy
      U0VSdlJXRldRV1JqVkdsVGMwZFJVVGhrYWpjNWVYbHNRVlJYYzA0NVJBcFhNRTlHYm1nMmRWTkJl
      R2g2U0hNeWRuaEliblp6UTNOaU5pdHZjbkpRV0doTlUydG5WbEpYZURaeFVIY3hNVk5XY2t4UVNY
      Uldia2RNT1d0dGRqUXpDamhKYlcweGNWSkplazlZVW1KbVNtazVZM040WTJaMGJIQmhaMnN5UlhG
      dVNXeERZVFZvU0VsNlVqVlRVVXhqVmpaVlltNUxlQ3RJVTFwbVJXRTRWaklLVkVRNVRsZ3ZRemhr
      UzNwdGFGcDFiVlZuTkhORUwwUkZMeTlZV2pCaVQyaE1hVGRtU2xSTk0zVnhhamh5YjJKRmJXSTVR
      M2xSVTFkMVJtSnBXR0pLWXdwdFFrbENkblZCYUd4Qk1rWnVWWGRZVkc5c1RUZDViVGxVZVZZemFD
      dEpjVGwxWlhKdE5VbEtXR2N6YlZvd1oxQkxLMDlqUW14YVRFYzBNVTkzV1VwVkNuSlJkbmx2VjJk
      WWNHdHVWVGhWYTJKcWVteGplbGxrZDBoSE1HbzBUMWRJUjBGcWNVMW9RMUZEYlZBM1dVUnVVMU5o
      VWtGMFlWUktNV0ZTZDJsaVJGY0tTR0puYzJaaWRHSktaM1k0VGpCRVpGaFZSazlVVWtScVUyNUVl
      VFY1WTNSSmVrOWtlVmhGVkVkSFFqZEdSMHgwUlhRd2IyaDRLMUZNZFZsUFZtMURTUXB0VUV0eldW
      TnliMjV6ZUhSTGVFUjFPRWhzVGdvOU1uYzVaQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-81035-8
    - DISA-STIG-RHEL-08-020353
    - NIST-800-53-AC-6(1)
    - NIST-800-53-CM-6(a)
    - accounts_umask_etc_profile
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Ensure the Default Umask is Set Correctly in /etc/profile - Locate Profile Configuration Files Where umask Is Defined
      ansible.builtin.find:
        paths:
          - /etc/profile.d
        patterns:
          - sh.local
          - '*.sh'
        contains: ^[\s]*umask\s+\d+
      register: result_profile_d_files

    - name: Ensure the Default Umask is Set Correctly in /etc/profile - Replace Existing umask Value in Files From /etc/profile.d
      ansible.builtin.replace:
        path: '{{ item.path }}'
        regexp: ^(\s*)umask\s+\d+
        replace: \1umask {{ var_accounts_user_umask }}
      loop: '{{ result_profile_d_files.files }}'
      register: result_umask_replaced_profile_d
      when: result_profile_d_files.matched

    - name: Ensure the Default Umask is Set Correctly in /etc/profile - Ensure umask Is Set in /etc/profile if Not Already Set Elsewhere
      ansible.builtin.lineinfile:
        create: true
        mode: 420
        path: /etc/profile
        line: umask {{ var_accounts_user_umask }}
      when: not result_profile_d_files.matched

    - name: Ensure the Default Umask is Set Correctly in /etc/profile - Ensure umask Value For All Existing umask Definition in /etc/profile
      ansible.builtin.replace:
        path: /etc/profile
        regexp: ^(\s*)umask\s+\d+
        replace: \1umask {{ var_accounts_user_umask }}
      register: result_umask_replaced_profile


# Build and Test AIDE Database
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_aide_build_database,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Build and Test AIDE Database
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-80675-2
    - CJIS-5.10.1.3
    - DISA-STIG-RHEL-08-010359
    - NIST-800-53-CM-6(a)
    - PCI-DSS-Req-11.5
    - PCI-DSSv4-11.5.2
    - aide_build_database
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzTTRRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      aHdRVkF2YWs5clJqbFNLek4wZFdWNWJ6SnpXRGM0WkVGcFFXMEtMMkozVTJkbGRuUjZaWFJqWjNG
      YWJ6aGFWMHhOVW10M2NFeGFSRkZoVEc5dVp5dFRhMDh4TTBwWGVrWXdaSEkyYVRoamNHTkJORFZ1
      WWxVM2ExUkRhUXAzTDJOek4xQnVUMGhKU2pobk16QTVSV0pNVFROdVJFOVBaVlZGZDFKMFJFMTFO
      bkY2UlRaWlFWaDFZVkptVFd0NVRtczNhbEEwTUVkcVpYUktUV1k1Q2xkNlQxaHRVa1Z0WlV4cFZ6
      WjVVaXR4ZDBOcVp6RjVjSEZ2TURsUWIwNUZWVXczU2tGck5HUkZiakZLU2pONldqbGpaamN2UTIx
      aFJVd3llV3BMYUNzS2NtNVpNMmhZTTJsdlNGVklkbEZWUmxnd1pEZEVTMVpzTldneWJFRnVWSGhW
      VmxKdU4yRm9TVEpFTDA1R1RWSTRiamxDV1Uxa1N6RllhMHRYTmpkWk1RcEhObkZ1TnpoRVkwaFFU
      MHRSZW5aUGNsRmxVMjAzVjJweFZWSjRXRmh5YVhsVWFtNHpjMjFIVmpaQlkxazRNakpaVmxCWVds
      VnlhR1IyTlVsTWVuaFhDaTlyVlhCbVRYcHVlRlF4Y1RKSmIybEhhMlJ4WmpCMWFEVjZWR0U1Um1k
      UWRDdDRTazF1WWtwRGFUaHZWMVpqUVdOdVdITmxlbkYyZFZOaFFtRjFXamtLZWs5MFlXTmhibVJ3
      T0hsNlJHdEJTazFZZVdwR1prZFRLM1UwZURKb01WVmlNMHRUYUdkbVVVSmxUMlF4T1RKWmRqQkxj
      amhLUldGbFFWVTNWMGcyVlFwT2IwOXJaMVJSTkRseVkxaDNjQzgyVWtKa1owUXJWM2hEYjNWMllt
      WnlObW9yZEZGdWVEUnpkakZEYzJSaVlVNURjVlJIWTNNMVRXWlVkMU51Y1VWdUNrZEZjVEpTWW1W
      clpYbFZNWGg0WTBsVE0zTXhXVFZoVEdoMllUUTVRV3MyUjBSUWEwcHBWbXhKY0dOMFkwdFBTV1pQ
      U0hCdGNrMWxiRUY1VlV4WFoyNEtkR3N4ZW1SRFFpOTZhVGxHUjBKWFlXbFRUWEUyWkhaUU9YVkpP
      RTEyTWpZMlYyNVBjM0pTZEU1c1VrcEVjazlaV1VRNFdtUmlNek5FZWxJMVFuRjFjQXBqVm1oT2JY
      SlhaMHQ1TDBkdU1IcG1ha1JFTlFvOVlsUkNUUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Build and Test AIDE Database - Ensure AIDE Is Installed
      ansible.builtin.package:
        name: '{{ item }}'
        state: present
      with_items:
        - aide
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Build and Test AIDE Database - Build and Test AIDE Database
      ansible.builtin.command: /usr/sbin/aide --init
      changed_when: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Build and Test AIDE Database - Check Whether the Stock AIDE Database Exists
      ansible.builtin.stat:
        path: /var/lib/aide/aide.db.new.gz
      register: aide_database_stat
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Build and Test AIDE Database - Stage AIDE Database
      ansible.builtin.copy:
        src: /var/lib/aide/aide.db.new.gz
        dest: /var/lib/aide/aide.db.gz
        backup: true
        remote_src: true
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - (aide_database_stat.stat.exists is defined and aide_database_stat.stat.exists)


# Configure AIDE to Verify the Audit Tools
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_aide_check_audit_tools,fix)
# Version: undefined
# platform = multi_platform_sle,multi_platform_ol,multi_platform_rhel,multi_platform_ubuntu
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Configure AIDE to Verify the Audit Tools
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-85964-5
    - DISA-STIG-RHEL-08-030650
    - NIST-800-53-AU-9(3)
    - NIST-800-53-AU-9(3).1
    - aide_check_audit_tools
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUnRRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      SmFjMUF2VWxkdlYzbDRkRFZMWWpKRlZYRjFjaXREZFhWTGEyTUtUSEZHUTNRMlFsRmFRMjkxWlUw
      clNVY3daemhQUVZOSmNubEhjMFpITTNWV1FqWkRURmhNVFVsTE1IVmtZWFUyVHpCVWRFZGlNM0px
      U1VJd2JEaFlPQXBGYWtwdU1rTllkbXAwWVhoMVJGRXlWRWxJZFV4SlVubG5URVJIVEdOUmFrMDFM
      M2xLVXk5c05XMHlhMXBYWjBwWlRGZElNWFJqTkVjMWQxVnpNVWxNQ2tWTVNubE5Wa2R2UVRNMmFr
      MVRTemhtUzBrMFRsVXJNV2hwU2tOMU5DdHZaVlpITW5SVVIyVnlhVEo1YWxOQ1drMHliRVJxUkVw
      MWMxVlFMMncwZVZFS2VHSTNPVzlSVkVGMk5UTkxOMU00YlZSNmVHNDFLMlo2T0ZBM1VGQmhjR3hw
      TTA5UlUwRlFielpyYkdocGRXVnNORWhNV25wdlJtdDVORk5YUld0U05BcEpZMmxHTm1NMGNUWnJS
      bTlyTlZKMFVFWmhjVWwwSzBJeWVVSmxaVWRuWXprM1pIUkRLMk00Y0VaUmIyd3dkbXh3ZVRoNFRW
      a3pRVkYyY0cxcWIxRTBDbVZxYXpRNFNERnNhamR6TTFFd2RrbDZLM1pwT0U1b2F6SktlV2hwWkRk
      QlpFbFZiamx1ZEVoaE1HaHZhVEpWY25oTmFFRm9TWG8yWlVGRU1VYzBVM1VLU21VclYwczJSbEpt
      Uld4cVZYaFRjM05QZGsxdlduaG5kbTFMUWs5d2NtdE1NM2xDUWxWUFRtMUtla1psVVZsa2FFaHBN
      WFZNYW5ObFN6a3JSekU0VmdwU1QwOW1iM0ZFWlZSM2JYaEtMMmRzYURJd1VHOVROemRWWVhGMldG
      RmtkbmRqVFVzMlpYbHNVM2hUYjNZMVVsbEtNbE5GZEcxMFlXbGtWekZOTXpOWUNsVlFRMWxpU0Zs
      VGNrOXJjazB2VldWV1VESjBMekZWTTNSbWJVbDNUVVJHVERSSlRWbGpRMU1yY2s1YVQyaFZia3N3
      ZVhaRGFWSmxZblJ0UkhReGFXMEtNVlpzU0dsMldDc3JkRkpGWjNZeU5tZFVOVWMwTTJkMFozUlZa
      V3gwVTNCM1Z5OUlaMHM0YzBoQ2VpOWFPVWRvTWs1YVNsbExUekk1UW5wR2JIcFZOUW8zWVRoSE5G
      ZG9SVTlTTldOdWRXdEpNMVJaYXdvOWIwb3JVQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Ensure aide is installed
      package:
        name: '{{ item }}'
        state: present
      with_items:
        - aide
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Set audit_tools fact
      set_fact:
        audit_tools:
          - /usr/sbin/auditctl
          - /usr/sbin/auditd
          - /usr/sbin/augenrules
          - /usr/sbin/aureport
          - /usr/sbin/ausearch
          - /usr/sbin/autrace
          - /usr/sbin/rsyslogd
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Ensure existing AIDE configuration for audit tools are correct
      lineinfile:
        path: /etc/aide.conf
        regexp: ^{{ item }}\s
        line: '{{ item }} p+i+n+u+g+s+b+acl+xattrs+sha512'
      with_items: '{{ audit_tools }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Configure AIDE to properly protect audit tools
      lineinfile:
        path: /etc/aide.conf
        line: '{{ item }} p+i+n+u+g+s+b+acl+xattrs+sha512'
      with_items: '{{ audit_tools }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Configure Periodic Execution of AIDE
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_aide_periodic_cron_checking,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Configure Periodic Execution of AIDE
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-80676-0
    - CJIS-5.10.1.3
    - NIST-800-53-CM-6(a)
    - NIST-800-53-SI-7
    - NIST-800-53-SI-7(1)
    - PCI-DSS-Req-11.5
    - PCI-DSSv4-11.5.2
    - aide_periodic_cron_checking
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzTTRRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      OHZhMUF2YWtocVVHOXBhR2hhWjBGSllsbE9kV1pVZDB4eE1uSUtSelZZTnpjd2FWVXhkbHBzTTNo
      a1pVVkRhRTAxY2xnelNrTjJVRkZpVjJKeFFsSlNibFZRUW5GemRFZHVXaTlKVkdkSFpVNUNaelJC
      TTBkeVdHc3JkZ292YzFNM1oxazNUM05oWVdnNVRFbFJUVzVQYW1GNWQxSndSRTRyVkdkNk1raEJZ
      MnhWZDA1bFZFMVRTelpsYVZZM1pGaFBhMVl4YjJGc1MyODBOMkl6Q201YU5sSmlUWGRuUmxkcmJr
      SkZWV3RMTm5Kc00yaG5aMnBoUjFkSVQxTTJjbTg0TDIxTlZuUllOMWxoV0VaTFJqRTVkV1kyZGtV
      NGVXNUNSa2hwTUVvS1ptcEJUMWRtUlU1Tk1rSlVVM2RQTm1aMVlYaFVaMkpqYjNsNVRrUTVkRXBy
      UnpGR2RWWmxjRVZwT1RWck1FeEtXa2xSTVc1S2NEaE5jRVJoZERRM2NRcEROMUZDV1ZsUFNtTkVN
      RmN4V0c4eFpsWXJkVE5pVWtoSlVWQjJPRkJIZGs1cE0ySTNPQ3R1ZFhwek1HTlFiRmhUUWtselJW
      ZEhVbE5CYjNjd1FtNU9DbkY2UjJ4TWJXUnlUa2xhVVZZclRIZFBZV3B6YURjdmVFcERWMjF3U1ho
      eUx5dElNbGxzWVUxVloySnFTQ3M1TkRZMlNGWk9WMlI1YWt0VWFrRmhWRFFLWVhoSFNTOWFiazlS
      TjFkRVR6VTFTazVwTm1wWk5sQkNRM3BRVVVZeFJEZE5aalk0UmtsQ2ExYzRTMmxOVTFKNlIweEdT
      emM1UTFKaFpXazBTSFp1VlFwblZucFhTMjh4Y1hoT00ycEJiR2hLWW5acWVHSnNhbFZCVW01U1Ix
      Sm5UMUF5TUhwV1ozVnphMHcxY3paYU9WbHVRMkZTT1dVNFJWcExPRFl4VHpjM0NtY3dNbUpqU21s
      UVVFZGtWbGxwYUdoRmRtVXhZMlJaVFVwdll6UkZNVWxaT1ROblkweEZkM1p5TDFFMkswUXlWMEpI
      Wm5WWmFXMTRhV1pxVUhsbWRGTUtjRmMxU1ZaMFVVTlhiamcyUzFSTU5YRnhUVk1yVkhGSWQzbHJX
      bmRLS3pSeFJIZDZTbTVsV2pVNFNGcGFiM2RwY25Gb04xcGliVXAwVERobVMxbG1Ld28xTnl0eVJF
      WnpiekJVT0VaaWF6ZFBOR28wT0FvOVFqazRUd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Ensure AIDE is installed
      package:
        name: '{{ item }}'
        state: present
      with_items:
        - aide
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Set cron package name - RedHat
      set_fact:
        cron_pkg_name: cronie
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - ansible_os_family == "RedHat" or ansible_os_family == "Suse"

    - name: Set cron package name - Debian
      set_fact:
        cron_pkg_name: cron
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - ansible_os_family == "Debian"

    - name: Install cron
      package:
        name: '{{ cron_pkg_name }}'
        state: present
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Configure Periodic Execution of AIDE
      cron:
        name: run AIDE check
        minute: 5
        hour: 4
        weekday: 0
        user: root
        job: /usr/sbin/aide --check
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Modify the System Login Banner
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_banner_etc_issue,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_sle
# reboot = false
# strategy = unknown
# complexity = low
# disruption = medium
- name: Modify the System Login Banner
  hosts: 'vian.local'
  become: true
  vars:
    login_banner_text: ^(Authorized[\s\n]+uses[\s\n]+only\.[\s\n]+All[\s\n]+activity[\s\n]+may[\s\n]+be[\s\n]+monitored[\s\n]+and[\s\n]+reported\.|^(?!.*(\\|fedora|rhel|sle|ubuntu)).*)$
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzTTRRVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      TTBUVkF2YVdJeFpHSmpSMFJSZWxrNWNuaG9SMlJ4TURCd1JXa0tRWEpDUldNcmRXY3ZXakJQZGs5
      TGVVVk1VelZxU0VoVlkwdG9kR1pLVURSMFlYbFFVblJVWmtadmREVmxiMW8wWVdwR1JVNUNNamt4
      Y0RjeVUzRkdkUXAxUlVsTGEwUnFiVTFxWmtoSGJ5c3hValpRWjI1YVYyaHRiMjF0ZHpJclV6WTVU
      M1JPZVU1VllXRmtZa2xtUzAxRFRHaFJhVWh2VHpsalRsVlVjalZEQ2t4SlZrVnFNMjR4UmpGU05s
      UnRURXRpZVhsTFpVWmhNVVF4V1hoUFFVWjFPR0pWWVRkNVNFUTVORGRHYVZWbU0wTjZOa1J3WlhS
      d2VWSTJlWEpwY0dNS2ExQnBkMGRuWmpOQ2RGQXJabVp0V21WWFdtaHVWR05LVGpKb01VNHhaRVpI
      YlhrMlVuTlZWVzVTV1c1cWNtVnNhVXN4VEhoWWEwVTJTbmRXWlU5clV3b3JLMnRFZERCQlNtYzNW
      VXBZYjJWUWF6VTJVVEkxUkhwMGNuTmpTR2RPVEhOWU1tdzBWMnd3VEd0aGJUbHZVMGhQYjJaYVdF
      cFVRMjgwVUdaaGRDODBDbTlDTTBwQk1VY3pkalUzZUVoM2EyVTFRV2RTUlZsUmJXY3JVVWxQY25S
      Qk9HTkJPSGh3V0VJeFRreDNSVEkwV1VWRFIwaGtNbnAxVmpFdk5UWTNWR29LVmpSUFQyWkRTM053
      UjBKMFdDOWpXSGx3VjB4VFdtRk5UR05xU1c0NVEzTkRWM1ZIYVdoSFVYazNVbVo0Y0ZjMlZrNVpa
      bGd4WjFOMFkwVjRiMDVsUmdwMFkwNUxjMkl6TjB4T1lUSnNWREF5TlZaRk9HUlZkMDR3Vkhwb01Y
      Qm9aRGRJWlZCRWN6TTRaV2x4Y2pkMFdtOTJjbVF5TVVndlFYcHhMMGx3VkUxT0NqbG5jRE5HVVhG
      UlNqZDBabWxVT0RKbVppOXZhVTlKV0V4dU1IRTBRbXBMWVRoTlZUWm1SRmhDVTIxVVJFWmpkRkZY
      TVhWV2NrSjVNMDk2ZVdNd2VXNEtRa2h0UTJwR2NtSmlielJtUkRRd05qWTJjR0ZPTmxCSU16SnBO
      a1J3VlZablpGZGlhRnA1TkRGV05XWlROR3BLYkVsdE1rRjJjRzl3ZFhNMk1qZ3ZWZ3BpWldkTWFH
      bEZObEUxUlhkUFEyUmtNR3QzUndvOVNtVnNhQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-80763-6
    - DISA-STIG-RHEL-08-010060
    - NIST-800-171-3.1.9
    - NIST-800-53-AC-8(a)
    - NIST-800-53-AC-8(c)
    - banner_etc_issue
    - low_complexity
    - medium_disruption
    - medium_severity
    - no_reboot_needed
    - unknown_strategy
  tasks:

    - name: Modify the System Login Banner - Ensure Correct Banner
      copy:
        dest: /etc/issue
        content: '{{ login_banner_text | regex_replace("^\^(.*)\$$", "\1") | regex_replace("^\((.*\.)\|.*\)$", "\1") | regex_replace("\[\\s\\n\]\+"," ") | regex_replace("\(\?:\[\\n\]\+\|\(\?:\\\\n\)\+\)",
          "\n") | regex_replace("\\", "") | wordwrap() }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Modify the System Login Banner for Remote Connections
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_banner_etc_issue_net,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = unknown
# complexity = low
# disruption = medium
- name: Modify the System Login Banner for Remote Connections
  hosts: 'vian.local'
  become: true
  vars:
    remote_login_banner_text: ^(Authorized[\s\n]+uses[\s\n]+only\.[\s\n]+All[\s\n]+activity[\s\n]+may[\s\n]+be[\s\n]+monitored[\s\n]+and[\s\n]+reported\.|^(?!.*(\\|fedora|rhel|sle|ubuntu)).*)$
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzTTVRVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      WnRXVkF2TUV3dlJsbHRZMk12YjFVelVFNUlZMUowWWxGR1JtSUtZbTh5Yms1cVpYUlBibWt4VlZK
      VVRHTnBhVVp1VG1WcE1FcElhR1ppVVVGRWFYbEtiMEpRTWpOQk1Xd3pNMGxaTkRSM1RFOXJlVVF5
      V0ZjeGJFeE9XUXBzUm1GSlFXdFJhRmxFTkdzd1VuSnRTbWh2ZUd0cFZGazRkSGhhTUV4Q1Yyc3ZO
      V280VERGc1lXZHBNVUpKY0VkRGJuTlFUR0pUVXpRelZURnpaRE53Q2xrelNHRnFZek5rVTFOek9X
      VlVTVGc0WVc5NGVERTNWREJzZDFkMVIwOVpWVTl3ZGtGVGFHNDJXVXBDY0dSaWRuRkZVV1pVUVd0
      SVNsUmpNVkpDWldVS1kxRjZkRmR2YTBaQmEwdFlZa1p4U1d0TmJrSm1MMUJxWjBreVYwTmFTWFJy
      U21NMWFrdHRZemRoZHpSck9WQjZZMk56TVdRdlNIUnBPSFZEVm1SQ2J3cHZjWHBKVnpGSU0weEVW
      R054WTBOSWRpOXFVMWhEYW0xUldrVjJWVGhuWXpOSGNVazVXSGR0YlVkTmJtUkNVM2hyVFdGV1dr
      MHhTUzlSVkhaU1RsSkZDaTg0ZVdwa1ZWVTRSWEU1UWl0M01sZFBZMDltVVRodGRYaHlRemhMVjFa
      dWVIUlFlWFF4ZUZreU5rVXhURGRxY0RsS1dFODVPRWgyUTNGSGRsbHdTVXdLVW5oTGVraFlaVmxq
      UlVoT1kzRnBTazQ1T1ZSNmNFeHdWa2Q2VkdaaVMxSmxTRTVMTDNsNlRVRlJWMVJFU1dKcmNrUkhX
      SGgyVkc1RU9WRndhVXN6YmdwNmRFSkRaRkJtZW1sWVNDOHpVVEJLZGxsTWJIQkJWVmNyTVdKMVds
      UmFWbEJhVEROMGVXOTZNVlJwUlZoUlJrbDNjMWM0WTB4SmJuRlNiMVJrV0dONUNtRnRWalVyZVhs
      clQyWm9NbFZUYTNkMmNEWlBPRU0zV2tkRFNHcElNV28yUkdOWmJXOWpUbE13ZGtKMVdVTlhhMnAz
      VW1waWMwcHZiVzB2VFdGQ2RHRUtNMFJoYW0xQ1dXSnlaRkJMYmswcmQycFhNRmwxWW1vMU1FMTVO
      VFkzU2pod01VUkhUaXMzZEVGelRYUkZWVkV4ZFZod1NsRmxXRmhYYmxWR1lteE1Zd294YVd0a1dX
      NWhUbTlqZGtoVGFWWjRTekFyTWdvOWJXbGtMd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-86147-6
    - banner_etc_issue_net
    - low_complexity
    - medium_disruption
    - medium_severity
    - no_reboot_needed
    - unknown_strategy
  tasks:

    - name: Modify the System Login Banner for Remote Connections - ensure correct banner
      copy:
        dest: /etc/issue.net
        content: '{{ remote_login_banner_text | regex_replace("^\^(.*)\$$", "\1") | regex_replace("^\((.*\.)\|.*\)$", "\1") | regex_replace("\[\\s\\n\]\+"," ") | regex_replace("\(\?:\[\\n\]\+\|\(\?:\\\\n\)\+\)",
          "\n") | regex_replace("\\", "") | wordwrap() }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Disable core dump backtraces
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_coredump_disable_backtraces,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Disable core dump backtraces
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-82251-0
    - DISA-STIG-RHEL-08-010675
    - NIST-800-53-CM-6
    - PCI-DSS-Req-3.2
    - PCI-DSSv4-3.3.1
    - coredump_disable_backtraces
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzTXZRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      RXJhMUF2TURaT1p6bDBkVVpIZWpaT1dVVmhSSE55Y0doQ1ZtMEtlVE01VkZKeFlYQkRlbU5vVjFS
      U09GbG5jMEo1Y0VwelNpOVdiakZIUjJKQlRVRm5jREpEYTFCb0szUXdRVWRJWWs1Tk5XOXRVa28z
      WTFVM2N6VlFSQXBhYkhsaGFqZDBUbTF4Vm5oVWIwRTVLek00YzNkS1pHMU1ZVVpNT0dOUFRHNTJN
      R2xzYVhsTFZFSkhUakZUVlZoRE1FRkxNMXBSVGpGdFlrTlNlWGRPQ25sNFpHRmtORGw2TURCR1ZF
      UXhPSGh5VmtNNVMwTnhjMEZNTVdrd1QzbDNUVVozTVdOVVpqaEhVbG8xUmpaSWRYWnRkak1yYlRo
      QlEzbDBTalJQZGtJS2QwdHBSbWRqVlRsV1MyNXhlVXh3VUZsVFZFUk9iMUkxU1ZKc1FUQk1ObkE0
      UkhsaE9YVk1hVEl2TVM4NWNFUmpUbWRrVVcxb1RuRkJNMDkyZW10Q0t3cDVSeTlMYmtreGFFazJi
      bGhEYlVwUlIxTXpaak52VVZWVVR6Tm9SM3BZYTJsWVZVd3pRVE5NVldvelVqZzFjMmgwV0RSeFRU
      ZEdlR1JYZG5CUFRVSmtDbk5CT0hKVmMyTjFSRXBCUWxrclpYUmhkRVZtUWsxMU9GSlNXbkk1Y25w
      UmRHSlZNalpCTUVSRlNVcFZkamswY0doTVpDdHZOVE51Wm5KMlJDOXlWakFLUVdaU1lqVnBTSGhR
      YkRkM1NrNDJTMVZpVlZKRU9XeDJSbmR5V1hobGJHVm5TbU00TmtSWmRreGhMemhWUldOQ1dIZGxN
      MEYxY1VKRWIyNUJjMmh6YndvclkyNXhURTEwTDIxdk1rNURhV3B5U0doUlVFTnlWRmcwV21WdFps
      b3lieXR5VTBOR1ltVnpOWEI2U0ZoUFpHeHNaSFJ3VUZWM2NUYzBaRTlHYWxKWENrdGxORnBpZVRZ
      d2NuWk1NbTVETlVnMFdIRkVNa3A2VkdOR2VYazRNbTVxZGtGRk0zazVVR3BMT0hOemRXOUxRbEpP
      Vkc5cGJHNHdkWFkwWW1kaFlYZ0tTREJzVkdWbVJ6VklZMHRRYnpkSFVFbGxkVVpsYlZkeFJVWmhO
      WE5sU1RCdVRIbEhXRnBJWW1wc01rTnZSVk5QUm1neFkySkliMUJNYkRaRlRVRmFNZ3AzWkc1Rk1H
      MTVhbWRwYlhoYVRITXdNRXM0Y2dvOWRYVldkZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Disable core dump backtraces
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/systemd/coredump.conf
            create: false
            regexp: ^\s*ProcessSizeMax\s*=\s*
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/systemd/coredump.conf
          lineinfile:
            path: /etc/systemd/coredump.conf
            create: false
            regexp: ^\s*ProcessSizeMax\s*=\s*
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/systemd/coredump.conf
          lineinfile:
            path: /etc/systemd/coredump.conf
            create: false
            regexp: ^\s*ProcessSizeMax\s*=\s*
            line: ProcessSizeMax=0
            state: present
      when: '"systemd" in ansible_facts.packages'


# Disable storing core dump
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_coredump_disable_storage,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Disable storing core dump
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-82252-8
    - DISA-STIG-RHEL-08-010674
    - NIST-800-53-CM-6
    - PCI-DSS-Req-3.2
    - PCI-DSSv4-3.3.1
    - coredump_disable_storage
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzTXZRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      cFBWVkF2TTNSNk9UWkhPRGc1YjJWcldHSmpaRzFCTVd0a2FUWUtaVFZPYTNkSGNqVjZVRkpaZGpS
      dEt6bHhUM1E0U2xSMmIxaHJjVlYwVkRsbVdHbzNXSHBFYjNCblVFZzBRblJ3Ym5KQlZraERTR0pY
      WXpoUVkyZHNMd3BGWmpoNlExRkdaekZuWkZsRU9FZERkMDFsY1RjNFNHUTViRUpNV0dGcGVuaGxi
      ekV3SzBkaVRqSlRXbGhyVVVoNFpIbzFkWE0yUTBobU5qTlJlVFZXQ21wd2RqQnRRMDlNUkRGdGNT
      OWlZbE42VWpsa1VHeG9ZVmhrVjBwbU0xbG9SREF4UVRJMkswUjFMMEZWTTBsalkzZHdXbXd6V0ZR
      MloyTlRRa2RSZEVNS1lUZFZkRXBVYlZoMlp6VnpSVVpTWlVsU1R6ZDFUbXBFZGtGalJXRkVlalJP
      WWpWTlVrdEZlbVV6VjNSVFpHbG5iMlZKT1ZabWQxY3pXR05wU21wVmN3cFlXbHBZT0ZSYVpGSkZL
      ek5QYldWeFZXTkVhelZCTTNWdVJrdENkRFJUTkU1RVZWSTBkelZTUTJwcVdrNUVkbU5YV2pKMGQz
      RjZTVUpCVG5GeVUzcGFDamRoZUV4a2FtSkNaVEExWmtWeFNrcFRXRzFLYnpRM1FuWk5NSEEzWVZW
      RU5uWkVZemRFYlRoRk5HTnlRVzkyYVhwek1VaDJXVlJSTmpsSE1qUkJVelVLZWxadWNWRkJibEF3
      ZGtjelJWbDVja1IzYlZKTGVEbFNZVFZ0U2xCM1RDOVdTVGQxV2taQmNIRllLM2xvUjJoQ1lucHRj
      MVpJYUVSQ1F5czROWEJRZWdwTFNTdHRUVVJZT1RCbE5rbHVNRWhCVlVJMFlrZ3JWa2hUT1hGVWNV
      eExXVmhvZUZWdVQzQmxWVFY2ZFZaM1lqazBia2RWVGtoak1XSkJiMjlIYXpCTkNtMXhSV040WTNW
      NlRtdGlNazVSVTJsT2JuUTFlRE4yVEdOM2VVaHNUMDg1V2psNFJFZHlURmxLSzBsNlVsbG9Mek5z
      TDJkQlYzZzNNVEo0T1VjeVFWY0tSRm8yWTNWNlNtSlBaVXRzZG1OSVJ6SXpTa2c1YlVSNGIwTlFU
      MlpDTWpBdlNqRlZURXN3Wm1GWFlrb3JjVUoyTkVneldFMUtabnBRV1RObWRuTjFNUXB3VUdkemIw
      YzJSRmxPVldSR2MzQnFSRGgxVlFvOU1DdHRWQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Disable storing core dump
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/systemd/coredump.conf
            create: false
            regexp: ^\s*Storage\s*=\s*
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/systemd/coredump.conf
          lineinfile:
            path: /etc/systemd/coredump.conf
            create: false
            regexp: ^\s*Storage\s*=\s*
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/systemd/coredump.conf
          lineinfile:
            path: /etc/systemd/coredump.conf
            create: false
            regexp: ^\s*Storage\s*=\s*
            line: Storage=none
            state: present
      when: '"systemd" in ansible_facts.packages'


# Enable GNOME3 Login Warning Banner
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_dconf_gnome_banner_enabled,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_sle
# reboot = false
# strategy = unknown
# complexity = low
# disruption = medium
- name: Enable GNOME3 Login Warning Banner
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-80768-5
    - DISA-STIG-RHEL-08-010049
    - NIST-800-171-3.1.9
    - NIST-800-53-AC-8(a)
    - NIST-800-53-AC-8(b)
    - NIST-800-53-AC-8(c)
    - dconf_gnome_banner_enabled
    - low_complexity
    - medium_disruption
    - medium_severity
    - no_reboot_needed
    - unknown_strategy
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUkJRVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      Tk9aMUF2TUhSVWVsQmhkQzlwUjI1d1UyVnRUMkpKSzBwcGNFa0tXV3RpWTAxWmFEZDNaM0pvVG5F
      dkswNURNR1VyWVRSRVlrUnlOVmxFVkRFMVVFUjBZMU41ZDFKU01VRk9aVVZQYldWWFpuZHRMMjV2
      WTB0RlJDdEtMd3ByUm5KSlNtVnZia1p0ZFUxV1VrRnJhWGhzWmxSa2JGaFlaMkp5U0RKT1VsTmFl
      RWsyVEVsbVpGRlBhRGRtTVROdmExZGhZMHhVU1hoaE1sZ3ZkMDg1Q2xGRVNUQmFNVWxwY1ZKU1NW
      YzBTRXBJYzJSRFIzTkJSVU5PTVU5MFN6UlhNMFF2VkVwcllUTXljblIyUW1wUFMyUndURGRSTWpk
      MmQxTm1XRVpDTlZVS2JVeGFRVmRFUjJOWU5FdE5RMHRUTTJoblYxcHJZakJzYnpFeGFrTmhUa2gz
      ZVVWalUwZHpPSFpJWlhsRE9FVmFUamhMV0c5MGJrMHhkVVpKTUZWc2NRcFdZMWxVU1hsaVVYVlRX
      WHB1U2xaa1RWRmtabFpoU3pOQlRVaEVjMUprYTFCamJWRk5iblI0VW1KblREaHhPVVpTUkU5c1pX
      bzBUU3RtYVdFdlRXd3hDbXRHWVhwc1JGTjRObFpsUVVaWE1GbEVja1kyVG1RMWVtdHZVbTEwUkhK
      SldrNW5aM0JoWVUxWmRVeGpVV3B0T1ZKSmVVWnBVelZWWVRKWFdHWlJja2tLZWt4clNrbDZhR3hp
      YVd3dlFsQjFSWGgwYzAwdllWUnVlRmhPTW1zelUzZEpPVlJ3WWtkcFp5dG9kM1J2WlhsWU9TdDRT
      a2hLTUZoQlRIcG5XbmRHVlFwbVVVdzRTemx1T1ZsVE1VUm9SMHRoY0RaRVdVOXVNa28zU0U5alMw
      UTBUbUpISzJsSmNFMTRkekF4WldOMlMwNW1WbU5VTDFWUlNYcENUVzFzY2tNMENqZFNVMjl1YXpS
      YVZVUkpWemxZZWxCeVUwcHdSbGR5T1ZKeWRFd3hRMDVSTDBwbVIxZFVUMGxyY1ZaaFRGSkhRV1px
      V21oa1VIUlVXbXBMUlZOQlMxa0tSMFpYUm5BMmMxZE1VMngxUXpaalUyeFJUa0U1Y0VVNWRrZHRO
      bXhrVEVvd05DdFdNbTlQV1doUlVuUTRURE00WVRaNVdrRlNObU5HVm5CdWFrbHJlUXBIVWpWM04z
      ZG1Ra2hzVmxwS2RXUkZhMHBvVndvOWJWRXpNZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Enable GNOME3 Login Warning Banner
      ini_file:
        dest: /etc/dconf/db/gdm.d/00-security-settings
        section: org/gnome/login-screen
        option: banner-message-enable
        value: 'true'
        create: true
        no_extra_spaces: true
      when: '"gdm" in ansible_facts.packages'

    - name: Prevent user modification of GNOME banner-message-enabled
      lineinfile:
        path: /etc/dconf/db/gdm.d/locks/00-security-settings-lock
        regexp: ^/org/gnome/login-screen/banner-message-enable$
        line: /org/gnome/login-screen/banner-message-enable
        create: true
      when: '"gdm" in ansible_facts.packages'

    - name: Dconf Update
      command: dconf update
      when: '"gdm" in ansible_facts.packages'


# Disable GNOME3 Automounting
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_dconf_gnome_disable_automount,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol
# reboot = false
# strategy = unknown
# complexity = low
# disruption = medium
- name: Disable GNOME3 Automounting
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-89904-7
    - NIST-800-171-3.1.7
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - PCI-DSSv4-3.4.2
    - dconf_gnome_disable_automount
    - low_complexity
    - medium_disruption
    - medium_severity
    - no_reboot_needed
    - unknown_strategy
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUkJRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      aGhkMUF2TTFOU1pUbGlkamN4T1hkSWFEWkdLemxrZW5aS2RuWUtjWEl5UVdVd09WRTRlakZVYnk5
      amJqQlFjalptUmpORGNURldVVk52TVhWbE4xTlZjbGhPU1daNlEyOW1SalJYVmswdldtWnhSRnAw
      UlVJM0swYzJTUW8wSzBodWJXWktVWE5zV0hWaVkycFZNVWN5Y1ZaWGRVeHdiMVl5TVc1YVJEQnFO
      REZqZW5RclUxWlNTRGxHZFVkRFMzQm9aVUV4VTFkVVJtSjFZWHBKQ205d1kxVnRXR2h2Wm1JNVVr
      TlJhellyUTJvek5VVk9NRWxyUlRSMFEzTjNaMlY2UnpBNE0xQlBaVXR6VnlzNWMyMDVMemR0ZVdG
      YU5FVjJka050YjNjS05XdFlSVFpWWm1OWFVucHlTWEZNVTNBNGMwSkRRMFJyVEVSUmIxSkZNM0F5
      YjNodGEzbHNWMVlyS3k4dlJuRnFRVTQ0ZDFKT2QwVk1TR3RMYlU5RFlncDJibE13YmxRdlExQjRW
      amxZU1RKcFVGQmxOblJsTldONFNFdzRhV3N2YURCWlFXWlRaR05YZGtkaFYyVTRTSFJNUnpSeFYw
      SmFaa1l6VlZKWWFraGpDbWxqVjJsVGNTdHBlWFUxZFhZeGVXMHJaRmRxVVRScE5VSm1UalJvZEZw
      VFVGbG5hbTFCYmtwTWFTdE9Ubk1yTmxSRmNHTndSWFJaTW5aSlFsRjNjMm9LVGpSbE5EbHdOVmRF
      ZHpKbVdXdElOVXAxVTFkVWNWRkZRbUp0YTJaSlEzSnBOSEZRUnpGcVkwZE1jRmxZU1c1SVJITjFU
      VlJ1YWtsTVNrdDViREZzU1FwVlprOUlNbFpuVldOMldERTVhazUzZDBJeVNEZEZXVzFEUVRSd2VE
      Rm5WRlJYZVVWVmFYaFVSVTVxTldWUlVVUnlRMFZRUm10Sk9VZE1la016UjB4RkNtaDNURlZDVkhJ
      M1RrVk5VelUzTUhSNGFuQlNhbWhSYURkVVVYSlBka3RUZHpObUwybHJZMGxvY20xeEsySXhSR1Ix
      Y1V0a1JGaDJaR2M1YzBwVFJYVUtXbmR5T0daeVdVSk5ZekZLVEd0Uk4xaG5NVFZ5TDNKUmFWTlFR
      bXhqWjNCb2NFaGhTblJSVUZwc2VERjJjbmRwZVc5UWNERllWR2d3TDJGQ1VsRjFLd3BaVEVsR2Iz
      RTVhbEZHTVRneVVHbEhZVW95YVFvOVdEZ3lTd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Disable GNOME3 Automounting - automount
      ini_file:
        dest: /etc/dconf/db/local.d/00-security-settings
        section: org/gnome/desktop/media-handling
        option: automount
        value: 'false'
        create: true
        no_extra_spaces: true
      when:
        - '"gdm" in ansible_facts.packages'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Prevent user modification of GNOME3 Automounting - automount
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: ^/org/gnome/desktop/media-handling/automount$
        line: /org/gnome/desktop/media-handling/automount
        create: true
      when:
        - '"gdm" in ansible_facts.packages'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Dconf Update
      command: dconf update
      when:
        - '"gdm" in ansible_facts.packages'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Disable GNOME3 Automount Opening
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_dconf_gnome_disable_automount_open,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol
# reboot = false
# strategy = unknown
# complexity = low
# disruption = medium
- name: Disable GNOME3 Automount Opening
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-83693-2
    - NIST-800-171-3.1.7
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - PCI-DSSv4-3.4.2
    - dconf_gnome_disable_automount_open
    - low_complexity
    - medium_disruption
    - medium_severity
    - no_reboot_needed
    - unknown_strategy
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUkNRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      dDVUVkZCU2tNMFIwdDFiM2t6WW5GUVNXWXZWR1pYTUZZM2Myb0tjSHBMTVRCdmRFNTRla0Z1U0ha
      MGNtWnplRFpHUVdKRVJHUm1UbVZJVUdsMVpEWTJURkp5TjJ0MU1uVlJjMFpPTUVGMk4zQkVlVWsz
      ZFVWVWVUaEJRd3B3VFRkdFYwRXdRbXNyTHpkeFVIaFpWRTFuVkVONFpuUXJVM1IwU0dkV056bExP
      VFJ0U2pKQ2VIQnRSeXQ1VmpsNFNURlNiRTlCVFcxMVNrZE9NRzVWQ2tScmR6azBZVEZMY1ZkVmQx
      UTFWSGh1T0RseGFUQXdNazF5T0UwelJreFNSMVY1V21OV1RUTjJRbGhJU214RFFXZENXalJSWmtW
      cGRrZzNjVFJWTW00S1VERnZVVEYyZVdsVFJFODNWRTlwVjFCWk9VRjJlSFZMV2tsUmVFazJabUY0
      TVhkUldrbzBaVGhJVTBzeFpHaFRRMHBaU0ZjMWRHMHpiRUUwUWtvNVRncGplWFl6V0RVMmJFSjFN
      SEJqVm1GSE9HUnpUMmRETTFjNGIzaFVOVXQ0T0hjelRTODJXV3R0T1VFeE0wNHZWRWQ0VmpadmRE
      UjZjMVppUTBkYWVsWnJDbEUyTVhGNU1FcGlXblY0SzBWS1EyMXhXR2xyWWpsUVJYVklVMFJGU3pZ
      d1VVa3hTa0UzT1hwalNUSTNPVEk1V2tWeGNrcG5MM1JZWmpSTk5GcEJWVW9LYlZCdFdHeDRSMHBD
      YjA5U0syeG1XVFZQVERaMlNFeHlTREJRVDFaNk9YRkZZblJIY2k5d1ZqVjVSMVpPYlc5VGVtVkJX
      Rk5KZFU1R2NGTkVjR2hQZFFvNE4waHlkVlZoU0RWdVRXSmtUemxETm5GMmRuVlRiMFZDTVhOVVdI
      Rm9hMjlpVldKRlVETkZTQ3RaVVZSM1dHSmpSWHBEVTA5dGQwTk1XalJNUjBjeENpOVVLMWx1Y0ZF
      dllrOTFNMko2WTBwV05YWktMM2syVm1OT1VsSnBPREZaYTIxWlZGbHRPSE51YzBkTlNFbFVaVWxL
      Y1dsUUwxcEdjM1pqV25Cek1Hb0tlamRWZWxscVFtaDBhemRsV1NzemRESjJhalpHTWpBd1VXSkRV
      bGRWWlVkd05YZDBWMlJ3ZUd0UGRsRmtRV3hZSzNwNWRtRTBNVzFHV0hRd2RHOHhjQXBsVVRjeVF5
      OUdVRTVXVTBOM2RVbHBhV0pCWXdvOVRFWlBTUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Disable GNOME3 Automounting - automount-open
      ini_file:
        dest: /etc/dconf/db/local.d/00-security-settings
        section: org/gnome/desktop/media-handling
        option: automount-open
        value: 'false'
        create: true
        no_extra_spaces: true
      when:
        - '"gdm" in ansible_facts.packages'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Prevent user modification of GNOME3 Automounting - automount-open
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: ^/org/gnome/desktop/media-handling/automount-open$
        line: /org/gnome/desktop/media-handling/automount-open
        create: true
      when:
        - '"gdm" in ansible_facts.packages'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Dconf Update
      command: dconf update
      when:
        - '"gdm" in ansible_facts.packages'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Disable GNOME3 Automount running
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_dconf_gnome_disable_autorun,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol
# reboot = false
# strategy = unknown
# complexity = low
# disruption = medium
- name: Disable GNOME3 Automount running
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-83742-7
    - NIST-800-171-3.1.7
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - dconf_gnome_disable_autorun
    - low_complexity
    - low_severity
    - medium_disruption
    - no_reboot_needed
    - unknown_strategy
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUnVRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      Vm5XVkF2YVdRdmRUUkpVMkZNVFVwTWFEVnpZbEY2VUVoRFFYTUtVRTR6Y0U5QlRURkxTR3BUWmxv
      eVREY3dTV2hXYVZSUVIyWkNjVUl5Um1SNGJIQjRNMWxUVURReVpISk5Tek0xU0hOeEwxbE9TWE5Q
      WVV4clp6aFVjd3BhTVU1bFppOU5iV3BTUTFnd2FVbEpibVlyVGtOcGVqWXpObkp6UTFwd1RYWnpP
      V1JPYzJKNU5UbHVLMVo2TjNkMU9FeEVkMUkxTlZWT2VDc3JjMVY1Q2xOU1NHaFNWelZVZDNSM2Jt
      MUJPVXhuV0cwNVMzZHhNVlZyUzI5c04yVjNXV2RFZERGdGN6TnhZazVqWjBGUmEwbG1TRlpoWVZk
      VkswaDVXVGN2VmtrS1JuSlpVVzVET1ZoR1NtSmpObkJDTHpVMVZDdG5hWHBQT1d4alZsSjVLMU42
      WkdSUmQwTkVUMkpHZUN0cmFWazFWVGQwYVROa2NuRk1TR2xoZHpOelJncHJVRmhKV1hkMVZHbG1S
      VUY0ZFc4dmIwWnFRM0k1Y1RScmFGVXZXbk0xTWtFcmFVSlRZMjl4UlVOWk5UZDBaakI0U0RSa2Rt
      ZHVaMjV0WW5OaVZsbFFDazlzWldoTllYVnZOMjVPZG5veE4yZzJRVk00V0ZST2JHOTRVVzgyZFZV
      MlVHWnpWMDlNUkRkTVdsbFpSazRyYm10RVpVMTVZVzlPT0RGWWFVSXlVRUlLVmpCRGFXdDBjRlZ4
      UjFWM2VWVTVlVVJWUmtsYUx6QTFWVmhpU0ROcVZXVXpRbFZQWXpoM1VXdHJRV0ZDTVVOaFlVWjJN
      bXhzUlhSdU16Z3plSFo0T0FvdlNVNW1LMUJFZG1GVWVHOUtTREVyYnpWa1dUSXdlRUY1T1d4T2Mx
      cENjM1Z3WkVSd1RYZFBjblZIYjNCcGNGbExVM0ZJVkc1MmN5ODJUWFpvT1RFdkNrZHdUWFJ6TTNO
      SlpUTk1VV2xZVGpCak1IbG5la294WlROU2FVVm5kV0pQVEdjM1N6UnFPRFVyZGpGVmJsVTRaRVZO
      TW1zcmFHVXpiMUJxV2tjMVZVSUtUMDkxU3pSWU5FMW9kM2RrWkU1V1VuVjBWbFlyWjJ4VE1EVlRl
      SEpzVkUxbmJYWnhhazVHVUcxdUwzb3lNbEJyYzJZME9VbGFSRzVMWkROQ2RIVjBSQXBVTjJOUVNF
      VlpXalpOTW1GWVNrRmFOMGhwWVFvOU9IRXJaQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Disable GNOME3 Automounting - autorun-never
      ini_file:
        dest: /etc/dconf/db/local.d/00-security-settings
        section: org/gnome/desktop/media-handling
        option: autorun-never
        value: 'true'
        create: true
        no_extra_spaces: true
      when:
        - '"gdm" in ansible_facts.packages'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Prevent user modification of GNOME3 Automounting - autorun-never
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: ^/org/gnome/desktop/media-handling/autorun-never$
        line: /org/gnome/desktop/media-handling/autorun-never
        create: true
      when:
        - '"gdm" in ansible_facts.packages'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Dconf Update
      command: dconf update
      when:
        - '"gdm" in ansible_facts.packages'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Disable the GNOME3 Login User List
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_dconf_gnome_disable_user_list,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_sle
# reboot = false
# strategy = unknown
# complexity = low
# disruption = medium
- name: Disable the GNOME3 Login User List
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-86195-5
    - DISA-STIG-RHEL-08-020032
    - NIST-800-53-AC-23
    - NIST-800-53-CM-6(a)
    - dconf_gnome_disable_user_list
    - low_complexity
    - medium_disruption
    - medium_severity
    - no_reboot_needed
    - unknown_strategy
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUkNRVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      ZENTVkF2VW01QmJqRm9jek5HVUU1M2JsUjZielZHYVdWdFVGY0tTMHBST0ZoRWNpOXBMM2xZY0dk
      V2NEbElOakp5WmxoclVGSlNaRkJSVHpkV2NrUnBUbFJxVnpkTlYzTm9SRXhZVDBSMmNXMVZNMjR5
      V0RJd1lpOWxRZ3BWYW5reloyZDNkVXhyVG1wQ09FbzNOR2N2UW5Jd1kyWjRWVUoxUVRreFV6VkhS
      RGxSTUVreE1tdFBPSEJMYUU4MlVIZFZXbFJGY1U1RVN6RnJWU3QxQ25ZdlNsQmhibmxFYnl0aE1r
      TkRVVUl2UjJWVlpVeEpLekJSYUhJMmRsZGtNWEk0WkhCdVl6YzFUazVoYUM5TmJrNXJTMDlWTW1s
      Uk5IVlRabko2WldjS2FuWTVhRXhsZVhWck5FWlFiM1pEV1RocWJtTmFZall3ZFVKd04zWmxWbkJy
      YlhWcWNtbFlRM3BXVVV4VVdFOTZXVTlOYmxCaVRYSmxRVFp3UzBJM2RRcFlNMjFQU3pkbU1tSlBU
      MnRqT1V3NWJtWklNRVZGTjJwcGMxVlFjbEV2TkVFdlFqUllXbmhzTjBNdmVXOUVNMEZWVmpRelVV
      RlBWV2R3Y3k5SFJVcDNDbFEzTm1abmF6bEZXblV2Y25SNlVEZEJPRGRuUzBoUFpHWlJNVzlQWWxC
      cFIyOXZPWHB2WjNFdlJFWkxaSE5ETmsxNWIyVlBibEpNUlM5MlpYZzBMeklLWTFONk9YQTVTM05F
      UjFCYWEwNWxLM2M1TTJSNlpWSlNTRlJ0VTJRM2JtRXllRkJ6S3pWS1RqWjBVR3czZWtWWGIzQmpL
      MDFQUjNSWFdXWnpMekZ4TWdwUE5FOVNLeTloWldWc2RGUkhWU3R6TVhscldFcDZibW92VkdsNWVs
      Wk1SbVp1YjFrMlZqQklNMHN2VEZGaFFuaHBWbkZQY0VJMFQyaHhNVTh6VjBJeUNqZFBTSFpEYUVn
      elNHcHBaMG8wYnpZMFdWTklkbXBIVEhVM2IwaFVlVE5IU1Rsd0x6STFPRE5VTjJvMFFtVjZUWFkz
      TDJac05GUkVXRzB3T1hoMmRtZ0tZVFZ1Y2xreGJWQXZWM1JzVFVGelVuaGhNblV6UVZwQ1RHcG9P
      RVo1TTFOdlVUYzNPVzlGVFc1dVIwMDJNMU0wV1dnelluVlVVVEF2WXpWTWNWQXZTZ3B3TkN0U05G
      bE5NWEZQTjIxT1VFZFNWMUJEYVFvOVVsbHBkQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Disable the GNOME3 Login User List
      ini_file:
        dest: /etc/dconf/db/gdm.d/00-security-settings
        section: org/gnome/login-screen
        option: disable-user-list
        value: 'true'
        no_extra_spaces: true
        create: true
      when:
        - '"gdm" in ansible_facts.packages'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Prevent user modification of GNOME3 disablement of Login User List
      lineinfile:
        path: /etc/dconf/db/gdm.d/locks/00-security-settings-lock
        regexp: ^/org/gnome/login-screen/disable-user-list$
        line: /org/gnome/login-screen/disable-user-list
        create: true
      when:
        - '"gdm" in ansible_facts.packages'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Dconf Update
      command: dconf update
      when:
        - '"gdm" in ansible_facts.packages'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Set the GNOME3 Login Warning Banner Text
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_dconf_gnome_login_banner_text,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_sle
# reboot = false
# strategy = unknown
# complexity = low
# disruption = medium
- name: Set the GNOME3 Login Warning Banner Text
  hosts: 'vian.local'
  become: true
  vars:
    login_banner_text: ^(Authorized[\s\n]+uses[\s\n]+only\.[\s\n]+All[\s\n]+activity[\s\n]+may[\s\n]+be[\s\n]+monitored[\s\n]+and[\s\n]+reported\.|^(?!.*(\\|fedora|rhel|sle|ubuntu)).*)$
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUkNRVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      aFFWVkF2YVRNdlJrMWxUak5UYUdSTlZqTkdOV0kzZW5wQloza0thVXg0TUVNdk1YUjJRVE5GU2ps
      bVJrOUJkM05hVFRkRmRuTnVSM2MwUTNZNWVtaHlUbFIwTVhOUVkySnVNM3BpYmtrMmFUUlZSM1kw
      VTJkMVJGQkdhQXBYY0U1WWJFY3dkMHRFVlZoa01GVTRTbE53Y2t0UFpXWlJja1JKVldGU1puTTFU
      a0pNYzI5S2FsQTNRbTVOVkc4NU0ySXlWWEJFWmtKNVQyWkhNRTh5Q21KU2FpOVZURk15ZFdKVUt5
      OTFZMkZLUm1OUlJEVkxPRlYyYWk5TVJXdHdSRUZPT1U1UldWQkJjSGczVTFaamNuQmtRWEZFTTAx
      aE5YUmxSemMzYW5VS1Z6Tm5ZVGh3WWxRclZUWXdSbVJZVFRablNVZFFVbEZLYW5GWVRpdEtaamwx
      Y1hOTEsyMXVhbkJPUkhCUmFFSm9NamRETDBJMVZVNUxhalF3YzJGR1ZRcHBWVEZrZFV4cE5VTkxk
      VFI0WXpaT1EydDRMMDV2YjFCRVozWkxlbUkzT1ZOblRubzNLM05hYTBobmRWRkhiVnBJVEZWM2JU
      QmxLMDUxTW5WdE5raDRDamMwUkhJellsQnpabFIwTmxJdk4xbEdkaXRVY2xvcmRrZFRNMnhFWkcx
      V1NsZGlWVmxNTW1ZNFkxZFpZVVV2TmtKS1JUZHZPWFZIVlhoUlJXVlZPRVFLTWk4MVZGQlVSSE55
      Y1dGSVEzQmlXVVpRWjFrdlZXSm1Oak42WVdkcVpVOU1XVFF5YkVKRVdVZHhRbFp3ZFU5S01XVk5R
      M0ZtZWtSUFNtUkpWV1pFWkFveEwySXJNbmhZZW14ak5WZE5hbFl5WkRVcmFsTTRjMXA2Ym01aGNt
      RlJZamxOTWxNd1JGazFTV1pCVUVwdWNrSnpaRlZsVmpkbVNrcExUamRNWjNFNENrMXVhVlJMVGpO
      d2NVSnNhbmt2TjBoVlMyVlNjREJTUkZoQ2EzQlBVMDl0YzAxTmRVc3djRVp2Y20xeGVIYzFTazV5
      Y0d4UGNtMTFNV3BEY2xwU2NXb0thRmhZWVhwSmIwRjFPRFJQWjNkV1JFaEhaRzFzUW1KT1MxTXlT
      MjU1YkVaT2VsWlNabTkxZDBGTGRsbFdWemRTTUVWVk5HZHRabEl6V0hvM1EwbEpTZ295TW5vNWRE
      WkRiRGRYYzBSeVQwbHFhR0ozV0FvOWMyaFVWd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-80770-1
    - DISA-STIG-RHEL-08-010050
    - NIST-800-171-3.1.9
    - NIST-800-53-AC-8(a)
    - NIST-800-53-AC-8(c)
    - dconf_gnome_login_banner_text
    - low_complexity
    - medium_disruption
    - medium_severity
    - no_reboot_needed
    - unknown_strategy
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Set the GNOME3 Login Warning Banner Text
      file:
        path: /etc/dconf/db/{{ item }}
        owner: root
        group: root
        mode: 493
        state: directory
      with_items:
        - gdm.d
        - gdm.d/locks
      when: '"gdm" in ansible_facts.packages'

    - name: Set the GNOME3 Login Warning Banner Text
      file:
        path: /etc/dconf/db/gdm.d/{{ item }}
        owner: root
        group: root
        mode: 420
        state: touch
      with_items:
        - 00-security-settings
        - locks/00-security-settings-lock
      when: '"gdm" in ansible_facts.packages'

    - name: Set the GNOME3 Login Warning Banner Text
      ini_file:
        dest: /etc/dconf/db/gdm.d/00-security-settings
        section: org/gnome/login-screen
        option: banner-message-text
        value: '''{{ login_banner_text | regex_replace("^\^(.*)\$$", "\1") | regex_replace("^\((.*\.)\|.*\)$", "\1") | regex_replace("\[\\s\\n\]\+"," ") | regex_replace("\(\?:\[\\n\]\+\|\(\?:\\\\n\)\+\)",
          "(n)*") | regex_replace("\\", "") | regex_replace("\(n\)\*", "\\n") }}'''
        create: true
        no_extra_spaces: true
      when: '"gdm" in ansible_facts.packages'

    - name: Prevent user modification of the GNOME3 Login Warning Banner Text
      lineinfile:
        path: /etc/dconf/db/gdm.d/locks/00-security-settings-lock
        regexp: ^/org/gnome/login-screen/banner-message-text$
        line: /org/gnome/login-screen/banner-message-text
        create: true
        state: present
      when: '"gdm" in ansible_facts.packages'

    - name: Dconf Update
      command: dconf update
      when: '"gdm" in ansible_facts.packages'


# Set GNOME3 Screensaver Inactivity Timeout
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_dconf_gnome_screensaver_idle_delay,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_sle
# reboot = false
# strategy = unknown
# complexity = low
# disruption = medium
- name: Set GNOME3 Screensaver Inactivity Timeout
  hosts: 'vian.local'
  become: true
  vars:
    inactivity_timeout_value: '900'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUXdRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rs
      aEZNRkF2YWtsUVV5dDRkM2xoYjNVMWFDdDNaR28wZEdOblJpOEtVRnB3WVdkak5YVlBaWFpaUm5o
      eFZUSnFOVk5aVjJGSFlVTTBVSE14VHpoRFYxUkNWMEowUlVaeFdXMVliRlF5TWsxWU0yOVZRM05U
      ZURZME9UVnpXUW8xZG5Sb1ptWllPVWhUTDJoS2NUUnRSV05TZEN0TFZrOUdLMUZpYzBaVFNHWndW
      RFY2VFc1bVJHSm5XV3hFUVZaaFNsUlhUSGhQUWxKQ1ZGSlNPRFppQ25CcFpYbDBlRU13TUdFdlYy
      STRSbVE0U25sclNrNTNhREpKZGt4SlFtcEJRMHhOVWpaSWJFOHZaMmRQUzJGek5Dc3hiVEJIYkZK
      RFZFZG9ablZYUkhRS05sQmtSRzlLVGxSMU5HMWtka2QzYjBvek5FTjFiekZrUTBobGJIVTVhVGww
      YmpkTlRHSmpRa0pJTTBkdFVWQlJhMDF2VVd0c2JHeEdOMWwwVVdSbE5Bb3JORUZVYkZWYWFFa3pX
      RTFKTkZSWldGWXhURnBYVEhkMmRrTlZNVTFuTkRCS2FVdHZRMGQyT0ZGa2FXTXdjelpqWjNZeVNV
      VkJRbEV6SzJWSFIxVk9DalpRYUdwclNHMXJiRzQyWTFCNVRVaFpVR1JTTTNCM2NIcEViM1ExZURW
      Sk0yUXpXV2hsZDJGNmJHVXlNbEpuTjNCT2IybEphRmRSWTNkcFNGbEhaWFVLV1RGemMyTk9WSFZX
      V1RKb2JXNVhaVXhrVmtweWNtRjBibFpMU1VWWlN6WldNblJLU0VvcmRVOUxUVVZQUXpsNlZ6UjZV
      WEIxU1dVNGVtVXJSamhtZHdwemRsbFlZbms0WjNBMlZITlFaV2g2WkhGUWExb3JWa0Z0Vm04dlJI
      UjBhREZtTVVkeEwxVnNkRU5GU2xOSlpucEJkVmQyU1d4NVdIVndja2xXV0Rkd0NrRlplV280YVZG
      eGRFaDBXR2xUVlVrd1RISTBMMGhoTmtwQmJVdHdhREl3YVZwSmVHTlFkVFo0WW5ZMWNqZG1aell3
      WTJ4UVJ6UkxkbTlQWVUwMlRYUUtjRnB2VW05dFowcE5OakJ5S3pJeFNWRTFkREpLVTNvMWFEaFFR
      MDQxY2tVNWMzUXZZVlZtTjFSc2FVUjRUQzk0YkhaYVVFRXJXa1pQUlU0MFdYSXZVd3A0UmsxR2RI
      YzNRVFpWUlRCMFVrNVZlUzkwTWdvOVJURTRjUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-80775-0
    - CJIS-5.5.5
    - DISA-STIG-RHEL-08-020060
    - NIST-800-171-3.1.10
    - NIST-800-53-AC-11(a)
    - NIST-800-53-CM-6(a)
    - PCI-DSS-Req-8.1.8
    - PCI-DSSv4-8.2.8
    - dconf_gnome_screensaver_idle_delay
    - low_complexity
    - medium_disruption
    - medium_severity
    - no_reboot_needed
    - unknown_strategy
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Set GNOME3 Screensaver Inactivity Timeout
      ini_file:
        dest: /etc/dconf/db/local.d/00-security-settings
        section: org/gnome/desktop/session
        option: idle-delay
        value: uint32 {{ inactivity_timeout_value }}
        create: true
        no_extra_spaces: true
      when:
        - '"gdm" in ansible_facts.packages'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Dconf Update
      command: dconf update
      when:
        - '"gdm" in ansible_facts.packages'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Set GNOME3 Screensaver Lock Delay After Activation Period
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_dconf_gnome_screensaver_lock_delay,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol
# reboot = false
# strategy = unknown
# complexity = low
# disruption = medium
- name: Set GNOME3 Screensaver Lock Delay After Activation Period
  hosts: 'vian.local'
  become: true
  vars:
    var_screensaver_lock_delay: '5'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUTNRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      eGFORkZCU2t4a09VTnZTbUZQVmpSa05HeEhjM05aVVZONFZGTUtjamRuVms1SGNVOWFMMDFGTm1v
      NWNUTTJhRzlaTjFwSlNFSXplVkZaVUZoeVkzRklSMFp1ZGs1cVNIRkZhRkJLTTJKa05tMDVXbEJr
      TUdSUmRsWmhUd3B0U1dwQlRpOUVaMnBuTkhocE5uaG5PVGR4TUZKU1ZHOTVkMnRRWWxWamNYWnVN
      a3BQZFhOblFXdENXREJZU1dwSFRqRjNObFpPTkRCaVRUSXpWRkJCQ21SUlJtOUZkMnBSSzBSMmFs
      bzRjbGxDZUdSRGEydE1hMEp4TXpCNFYyWklTM0pQVEdwR2JIaEdVbnBuU25kamRVOUliMGhUTDBa
      Q1VVNTVXVmhDVTNRS09WcDFUa3BMTURkT2NFcE9jM0pUVEVkNlZucGxWVE5uVEVkM1RrSk5Oa2xH
      YW5ScFRuVktVRlJGVjI1U1lYRm1lRFEwTmpKbFkxVXhLemd2YlZodlRRcGFiMkZXTVdJM05FWjVa
      R0ZqWVM5TlNtRm9ZVlZuY0VaSVFrY3llbUZGTUd4aE5qQmhNVGRtVjJoWU1sTjZTWGxWZWxZM00z
      azJka1pxYUdvemQwRjBDa2ROU0U5S1FWZHNRelIzWjJNMmMwazFlWGQ0UzNCT1VqRTBXbE5OVFVw
      TldrUTNibll3YVRWNlVrTlhTWGRETjI5elZuSkZOSE40WldsWFJGUk9abFVLTUhCcWJERm9SRlF2
      VkU1UVFtbEtOUzltUm05eEswcFllbXh1TnlzclUzSnJNalZ4VDNCRFZHaDRaRkJ5Y0ZacVMwOUlR
      bU5tUXpCb1ZuWXZaWEV2WVFwVVoyZzRNMlV3VFVoWllWWTJNek5CV0ZsdmRtcFpPWEV6UmxWYVpr
      bHJjV1JrUlVsVVZYaGtVMDFNYkcweU1YQTVkbmRoTTNocVowUkdlVkphV0hOWkNrSlNkblZqZGta
      YWMyWkhXRFJLVTBKTFNrSnlMMlJhU1Zoa2FHMXVVVFV3Y1dGbE0yUmtOMUVyVGl0U2JXcG9RMGN4
      UTBWTUwwWkhVR1F2UkdaeVEwNEtiVk56ZUdzd1F6RnpXWGRRVUM5TWJTczFSSFpVTlRRMWEzSk9X
      a1pXZUU1RldHaExVRTEzTUhad05HTlJURXhWV0d4WFlWVm1WVXBuVUhKTlpuTXJUZ3BRTDJSVE5p
      dFNVMVEwWkRkek4zZFBkSGt5V1FvOWJXNWFOZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-80776-8
    - DISA-STIG-RHEL-08-020031
    - NIST-800-171-3.1.10
    - NIST-800-53-AC-11(a)
    - NIST-800-53-CM-6(a)
    - PCI-DSS-Req-8.1.8
    - PCI-DSSv4-8.2.8
    - dconf_gnome_screensaver_lock_delay
    - low_complexity
    - medium_disruption
    - medium_severity
    - no_reboot_needed
    - unknown_strategy
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Set GNOME3 Screensaver Lock Delay After Activation Period
      ini_file:
        dest: /etc/dconf/db/local.d/00-security-settings
        section: org/gnome/desktop/screensaver
        option: lock-delay
        value: uint32 {{ var_screensaver_lock_delay }}
        create: true
        no_extra_spaces: true
      when:
        - '"gdm" in ansible_facts.packages'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Dconf Update
      command: dconf update
      when:
        - '"gdm" in ansible_facts.packages'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Ensure Users Cannot Change GNOME3 Screensaver Settings
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_dconf_gnome_screensaver_user_locks,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol
# reboot = false
# strategy = unknown
# complexity = low
# disruption = medium
- name: Ensure Users Cannot Change GNOME3 Screensaver Settings
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-80780-0
    - DISA-STIG-RHEL-08-020080
    - NIST-800-171-3.1.10
    - NIST-800-53-CM-6(a)
    - dconf_gnome_screensaver_user_locks
    - low_complexity
    - medium_disruption
    - medium_severity
    - no_reboot_needed
    - unknown_strategy
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUTJRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rs
      UnNUVkZCU2k5TGFIaEdUMnRoT1hremVHeE5ha2h4U1hkME9GY0tiaXRRVW5kaWNWaFRMME5TZEZj
      MWExZFBPRUZTVGt4Rk0xUnZSMFkyVUN0T1RHaHNTVnB6VUZVNGF6UXJVVklyY2tSSWMxTlJWVkZO
      ZDJwV1NqRlVjd3BxUkdsTGRtazFRalJLVkhkRVMwNW9UVk5ZVmtoSGVIVnhOVkZxYTNGaWRHcEZR
      bmd4VW1WMmMyVlBNMDVGUlVKcVdGcHJRblo1ZUVObE1tWlpOamt5Q21oWWRteHlVbkJLSzNCUFNX
      OXhaRTkxTkM4MFNEWTVaSFJNVDFsWFoyRnRiSFJZVlRGM1p5ODVhell5T0VoclpIZEVURmh4ZUhG
      SFl6aEJiMlZoTWtVS1dtOUJiSEZaZURGTlZHOTNWM1FyY1RFcmNXcGtZa2RHTVRKaFJGWnFiR2hI
      ZUVwMWFVMWpPRXBpU1Zkb1ZVSXJaV1ZWWTNGc1FVRnlWWGdyU2pWeVN3cDNSV3RxWTFNNU1IbE1i
      V0ZsWW5WSFkwNUViR1I1WWxGUWEzTnhXRFpJU0doTmNGRTJSV295TDFWd2RWZGxTRTFTVTI4ME5u
      SkZhRFJ0U1dKblZVOW9Da1pZVjJzM1NYbGxVVzl4WlV4UlYwWnlZM1JCYVVJNGNtMVJZM0YyTlNz
      NWNsTklWalpHWkcxbGVIRXlhRzVuY1VWclVFSXdjekUySzFKaGJHWXlNR0VLYlRWaVVGUTRWV3BP
      YTNrckszUmpkVnBaVTBaME5tZERSREV2YlM5MldHRktlRFZDTUc1NlRsWTRRM2g1WkhOMU1XWk5U
      bVYyVVV0S2NHSkVhMDB2ZUFwcGVYTXhiakF3UTFkRlYwNXlWMjlWWjFoV1MwRmxRMGRGVW5SeEt6
      WXJNMWQ1VDB0V1ZtVjVhV3hHVW14Q1ppOUxhblZIVDNockswODRTRXR5TkhwTUNqSnVNMDVyVEV3
      MVRGUkhZMGxNTWtsbGQzaFNSbmQ0ZG1GV1VGaHdUMWd2VEZkQlJ6a3JaVFIxUTJ4alQyOWFaMGRv
      VWxsRk1IVlBaRkJ6ZEc1WlF6a0tia2xQUm04M1MwcGlXR0ZoTTNGbGFYUnpMemh6YjA0MFNHcEli
      M2xqYm1KcmJrZEhWazE0SzBoUlpXeEhXR3M0VFc1R1RGRkxaMXBUVFRCVU5YcENlUXBoYUVzMlVu
      STFkR1JXTURobmJrTkdTRmsyZHdvOVdYbG5TZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Prevent user modification of GNOME lock-delay
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: ^/org/gnome/desktop/screensaver/lock-delay$
        line: /org/gnome/desktop/screensaver/lock-delay
        create: true
      when:
        - '"gdm" in ansible_facts.packages'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Dconf Update
      command: dconf update
      when:
        - '"gdm" in ansible_facts.packages'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Ensure Users Cannot Change GNOME3 Session Idle Settings
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_dconf_gnome_session_idle_user_locks,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol
# reboot = false
# strategy = unknown
# complexity = low
# disruption = medium
- name: Ensure Users Cannot Change GNOME3 Session Idle Settings
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-80781-8
    - DISA-STIG-RHEL-08-020081
    - NIST-800-171-3.1.10
    - NIST-800-53-CM-6(a)
    - PCI-DSS-Req-8.1.8
    - PCI-DSSv4-8.2.8
    - dconf_gnome_session_idle_user_locks
    - low_complexity
    - medium_disruption
    - medium_severity
    - no_reboot_needed
    - unknown_strategy
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVlNRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      MVBVVkF2VW1aNFUxQktRMmsyVm5KTFJIWkNURzFUWmxJMlFXd0tNMjl3T1V4Q2VtSjZOVUZyTjJS
      dVFrcEVTR0pCZGtJd1JpOWpaSEp5VUM5d1pVUlBWelY0VVVkWVYxSlJlVGhZVEhRemJGVXhiRVZK
      WlZkcVRIZFdjd3BMVldaaVRXVkVWM1l3WldSblVFVXlhbXczWkZneE9VRjFlbWMwUjJvMWExbGxh
      VmRETWsxelNYZEdXV2xNTkRGSGVYTTJXbk4yUVZSWGIyeDJhbEZHQ21jNGVUQTVORkZHZHprMllT
      OVBkVEZvY2swclJHMWFkamhhTHk5emJUQnZTV2RQZVRGelQwNDVTeXM0TjBWbGFrUnRSV0pxUnpW
      RmVuVllaRkZpV0hVS1IxWklhbTgyWkdkM05EUlpUaXN5ZVdwVE1HNXBZbEJqUzI1aUt6VlRhbFZq
      V214SGVWQTFXRGsyZFZWalpFVjNWWE5XWmpkVlNrSkZSSGhSTVVaWWF3cG5VRzhyUVU4M09FaFhT
      ak5sUVhKQmExbDFZMmhpYWpoSlpIbHpPVE5MYmxjMFRWQTNNa2hEZW5FNVoyaE1WRmhHVDBsWVdE
      a3JMMlJ1Y1ZrMGVFSmpDazVaZGtwUlVITTFUbEJxT0U4elpsWXJURzlQVFRsWmRsTm1ZVTltZDIx
      VlRsZFFha0V5U2pab2EyMXdSbnBKZGxSdmQyNVFkRnBtWlRGbU5rZFRhbThLUmpWSVVFSlRlR1ZY
      TDNoa1JuWnpUSEJKVFVabFYzcHZaM1ZxVW05bldtTXZUblowTVVSRFJFbDVMM1Z6UVVGUVYzUkRh
      amRHTlZCaWMySmpSRWw0Tmdwd1MzaGxhM1F2YzNscFIxcDJlVWxSZUhsUmVFZDRPVWxTTm5GdVJY
      WldNbk5EWm5nMVZGTXJSRk5QUnpWMk5IcHpjbHBhSzBGUFRIZEhSMU0wWjNsdkNqUmtXbFZyTVRk
      MFRGSm1kbXR6T1cxcGJFVktiRGt6UldoVVUyTkpUMlJZY0hwRGJucFJRMDVRYkhWalFVSm9RbEpG
      Ym1scFFreG1iR2d6UzFBNFRHNEtaVU5rY3pNeWVuRjZNbHB3Y0Rodk9GSjViMndyV214TFMzQTFW
      bE5WY1dwTmFEUk1LMklyVFcxWlVVOUJjbGhSU2taUVJsZGtZVTFXVG5Kc2VFeHdSUXBuYjJFNGJr
      c3pjMVowT1Vob2RYZElhemhZVHdvOWJGRjVkQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Prevent user modification of GNOME Session idle-delay
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: ^/org/gnome/desktop/session/idle-delay$
        line: /org/gnome/desktop/session/idle-delay
        create: true
      when:
        - '"gdm" in ansible_facts.packages'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Dconf Update
      command: dconf update
      when:
        - '"gdm" in ansible_facts.packages'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Disable Host-Based Authentication
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_disable_host_auth,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Disable Host-Based Authentication
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-80786-7
    - CJIS-5.5.6
    - NIST-800-171-3.1.12
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-3
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - PCI-DSSv4-8.3.1
    - disable_host_auth
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUkRRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rs
      Qm9kMUF2VW5KS1JYSlVOMnhzTUdGNE1GZEJiRTV5U25WRGNtd0tLMWhxZWxac05rVnFUR015TkVG
      WFNqaFhNRzVpVUdNNU9VNXJNVkZRVkdKUlVtUkVRMHhXYXpSVGVWRlFZbEZUYkhKb2NGSTBTMjFx
      VFRkeGREWm9OZ3B3VWxkT05WUjBWSFZyTVRaVVZ5OWFSRk01TUZWNFNXVk5USFo0V0cxb1VHRjVl
      RFJGVlVVNU9EUlJNaXRGTUU5SWNIcG9SVXMyUld4S05VSklZWEE1Q21OeU1YRXlUM2hGWTBFd1Qz
      QmxjRmRJTHpaMlprZGljWGREYjBWT1NscERTMGxNYXpaUU5Xb3JablJCV1dsaFQxUnVhRTl5YkZO
      UVRDOXhObmhVVW5jS1NIaFljaTl1VGl0clNUQnRNbVZNT0VNNWNWUmtXRlpITmtFeE16QlZjMEV2
      Vlc1Wk1XYzJTeTh4UVVsQ05UaHZSbEJ1V0RGSlNGa3lPVWQzWmpSR1RRcERLMUkzVjJSNWRuSk9X
      VkJ6UVUxbFlYSm1jR3R3TlhsaWRYZHpOMHhEUWpKbWEwUlBWVGR2WjI5NVdHZ3liamxKTUVSTFYz
      bDVka292VXpGWVkzSk9DbmRTWjJWalVXdzFZblJFYXl0VE9FWTVObW95YjBKeU9UTklNVlI1TkZR
      Mk9XTnhMMHA2TTJsTFZtZEdjbTR6YWpJd2ExSXJOM0JvVmxoc2JIUlNaRlVLYW5oU2JFOXZhWGRv
      T0ZsTWEwNDRabmRJYXpCdGFHYzFhV1ZLTWpseFlYaFZNMnBRYlhKclQyTkxURFZITUM5VGVYaGxV
      VE0wVTBoNVFuVklURWMyVmdwVk0wVkZTbXBMVkdGWEwwMXhWMWhMYm1KcFZuQXlSVzB4Y2tSWU1I
      cDBRa3MxVEVGQ1JWZFRNR3BSYlVObFpUWkRiMWh4VDNkT2NtWkdSRkJFV1d4bENucENPRmR6VUdk
      dE1UaGFaelpET0ZkbmJEVkplWGxqTm01UVkyUmlPVXMwVTFoQ1owWnNPV0phV1ZSTmVWVjZTakU0
      UkROQlZUTkNhR2c0WkROdFRWTUtiRFpJVFVwQk5GSTNSRmRST0dGRlFtVlZTa2RrY21KcGEzcEtS
      RlpDUVdaS0wyRnFha0ZXU2pWUGIzSlFZM2x6VmpJeGFESTNWVFZ2VDI1SFVIZHZNQXByVjBGTlYx
      WnpXV1EyVkN0NFJHZExSVTFuY2dvOVltcDZXZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Disable Host-Based Authentication
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*HostbasedAuthentication\s+
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*HostbasedAuthentication\s+
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*HostbasedAuthentication\s+
            line: HostbasedAuthentication no
            state: present
            insertbefore: BOF
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Ensure the Group Used by pam_wheel.so Module Exists on System and is Empty
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_ensure_pam_wheel_group_empty,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_sle,multi_platform_ubuntu
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure the Group Used by pam_wheel.so Module Exists on System and is Empty
  hosts: 'vian.local'
  become: true
  vars:
    var_pam_wheel_group_for_su: sugroup
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVlNRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      UjJiMUZCU1RaNGRWQk5XbU5rZFVsTWJITmtRV2h2V0RGT1kzb0tkMkpIUmpOaVZtdzVlVlI0VEhC
      bkwwdG9jRVZpVVd0VFNFbzJlQzkzUlRjdlZXMUZPSFF5VW1kUk4zRkJhMVZtV2tKT1pTdElOMVpD
      T1hKTU9VNXlRZ28yY2xkUWNXdzBOMlJQYUVrMWJtZGhXSFpZVDFsSVVsUjBNVmxrTmxOSVlXMDRO
      VWRzUVdSdk4xSTVjSEJOZG5OU1NtVnVhM1JGTm1aNVRIbEJVVGczQ2pKdU5IaERMM2hWUlRGWFRW
      ZGhVVFZxUkhWQ1V5OTJlR052VFU1SmFHWmhhbHBTVld4WmJFNW9WbEoyUlhGak9FRktiRzFxTm1F
      M2IxWkpTbXBxVkVJS1RXOUtRamRSZDNGbWFtODVVbVZJV2t4blRrTklNM0pJYzA5d09EVkZaVTVO
      ZWpkaVExTlRNRmhGZFRGS1FpOU1PSE50VWtoSmFIRjViMVZZUW14cWNncFliMGwwWTJablZVeHVV
      a05wWVc1U1p6VTVjR3B4V0c1Q2RESTRSMEoyVW5ad1FraEJPRWt3YUU5M1ZFZDFSRGRuWml0ek9V
      SlZkM05qYXpoTVJWWnNDbFJUTlVSSFNHTXhWakZOYUVkMlIyUnBXR3BPTDNsQk4xQk1lbE4zV1ZW
      c1preEpLMUl6ZERGVWIyZ3ZWMjFwT1VkVGIyWkJRM2N3WmxCeE5tVjNLM0VLWkRoTVQxazJUR0ZU
      TWpWVmJtZElXRTlMTTFkSFoyUklLMm81VFd4RUwzTnFZVEJVVjNaREwxSlJZM1ZLUmsxVlNURkRa
      SEV2YXpGM1ZIRm5iSFl3ZGdwTFIzbEhkbWxDVFhsWlpXTlhVM2RrTm1GaU5VOVRVRFZ4YkVrd2JF
      RkxhaTh4ZFdneWVtWjJkVFZyUW5CcFJtbERTR0o1ZW1WWWFtZzRaSEpTVUZkR0NsUnFlVWt4VG14
      YVkyOHdhMDVqVkc5aVVtTmlWRzUzVG1SWkx6RklhVGxVV0ZoeFJVNTVLMVJ4VHpoR1NtTmhVRll4
      WXk5WVMwMTVaRWg2T1VsdWIwUUtOaTh3ZUU1eU1tUnVibk5EUkZkTmN6QXhWemhSTkU1VFNYRlRS
      blozZW1aMVpXNVlibkI0TkhnelkzQlNVbGh1VnpWcVZXWTVhRnBWUW5wRU9GcFZUZ3AyVFNzNFQw
      eFRMMlJVUkdsQllsaERjM1ZETXdvOVdUbHRNd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-86071-8
    - PCI-DSSv4-2.2.6
    - ensure_pam_wheel_group_empty
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Ensure the Group Used by pam_wheel.so Module Exists on System and is Empty - Ensure {{ var_pam_wheel_group_for_su }} Group Exists
      ansible.builtin.group:
        name: '{{ var_pam_wheel_group_for_su }}'
        state: present
      when: '"pam" in ansible_facts.packages'

    - name: Ensure the Group Used by pam_wheel.so Module Exists on System and is Empty - Ensure {{ var_pam_wheel_group_for_su }} Group is Empty
      ansible.builtin.lineinfile:
        path: /etc/group
        regexp: ^({{ var_pam_wheel_group_for_su }}:[^:]+:[0-9]+:).*$
        line: \1
        backrefs: true
      when: '"pam" in ansible_facts.packages'


# Ensure that /etc/at.deny does not exist
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_file_at_deny_not_exist,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = disable
# complexity = low
# disruption = low
- name: Ensure that /etc/at.deny does not exist
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-86945-3
    - PCI-DSSv4-2.2.6
    - disable_strategy
    - file_at_deny_not_exist
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUkVRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      Y3pWVkF2YVhoME4zSXhObEJWY0ZaR05rTlJNRUpTY2trclRWVUtjbXhSZDNSQmRWVm5SRlJyYkU1
      NVpIZERaM1JCVmpWeGFtZDJaamt4UVd0WGNtSmhZMmhyV1d0U1N6RTJURzVuTDBGWU5VeG1jVVpV
      ZW5Ob2VESnlSUXB0WkRoVk5UQklPQzlZYTFrMGR5dFRUVE5FUlRkRll6WnFjMm8wYlZwQ2VFMTVa
      eko1TTFCV2J6TnNSbWhQVEhWamRHWlFXbWRuWkRabFduSjJielJIQ2xNdldHaFJSR3RxZGl0VFlq
      QlBOV0ZSTlVsbmIzVk1VSFZZTUdnclJFaHFRVVF5UXk5dE4xcHVhVzl5TUdwNWFUVm5VMG8wWm13
      MlJtRm5ibTQ0VjJrS2VXeE9MMVZLV1U5M2RVOTBSMlV6U0ZaT2FDOXlaazV4UjJ0eFMxWXdha2Mz
      U0VOV1IzRjRSM0E1Y1Uxd1MwaFBNVVZTVEZKTmRGcDVWWGswY0RGWU53cGlUbkJwWjBOcVZXdzVS
      V0ZYZVZSdlZrdEtSMFpDWTB4SVRVMDFaVVYxVjJ0UFFtbExjMXBWUXl0SWRsQjRjbmRtUjFCSlMz
      UnVUMDVDV1hSUloxZFRDbXBCWkVSb2VrNUtTMGhFZEhOV2QxY3pVMUIwY0ZSS05XOVFNMnRKTlZs
      U1NteGlRbTVoVjFvMlZsRlNZMlp4YjNOWVdsbFZORVJVVDBkWGJXTlNTa1lLUldNemFUVXhNMmxJ
      WkhaVk5IaHFPRUUwZVRCSVEydGxVMUF3TjNkMlFXNWtNbXh5U1ZsVFRIQnBSMlE1WlRWRVdrcFJU
      QzlhWmtWeWVtY3lXSEJ5WkFwRWJsbHVjV3N6Wm5sdWNGcDZhVUZIYTNack5UZDVUekJVYUhGRk5X
      VTVNMjV4TkU1aFZsbHNiblZEU1VnMGVtaFBaWE14ZUVFd2JFcEpTR3B5UVdaekNtbzRiMnN2T0Rk
      RlZGRmtkVWRrUXpnM1lWZ3JLMDgwYm5wMFJtVmpSbWhHYXpaMFVGVkZWMnh1V1RCNlVsVlVLM2d4
      U2twaGJsbG1hMVZHUTBGdU1XUUtSa3BZWmxsa2FYVTBlVFpIVjFwalJGRTJLMFZVVTB4WWQyeE5U
      azF3VW5wbVowTlBWMng1UTFWWlNTOVdaa1Z3VDI1blJTdEpiM2syV1hKb2RGWmhTUXBqVEZkdlIz
      ZG5RMWhJWXpWdU1XMTVVemtyTVFvOWQzVmpWd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Remove /etc/at.deny
      file:
        path: /etc/at.deny
        state: absent
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Ensure that /etc/cron.allow exists
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_file_cron_allow_exists,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = disable
# complexity = low
# disruption = low
- name: Ensure that /etc/cron.allow exists
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-86184-9
    - disable_strategy
    - file_cron_allow_exists
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUnlRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      TlZTVkZCU2tGUlFubG9OVWszTkhwWU1HdEtUbUpZWVdKRE0yc0tlVkkzUzFScVV6QlpiMHRrYVdG
      VlZuZ3JNbTloYm5wM1ZWWXlRbVpqVkdKMk1XOVJUVUpYVEc5U1drdEpTR1ZRUTBjcmJYQlVhMjlp
      ZFVoM05YWkpOd3BOTTBOb1FtaEtTMlJDTUZwaVZIQllLMUZZWjFnNU5VTXJkMVppYVhSa2NqQldk
      RnBVSzFWSFdVZGpMMlJsVXpkclVtMDJkRmdyYWtGMmVDdGFUV0pJQ2tZdmJXNUtPWGxPUlVaTFl6
      azVlREZtTWxSM1VVdHZOalZXTTNCbFRFTXZhUzh2YUhwc2JqTTVhVmgxVDFkWU9GcDJWRE5tTlRF
      dmEyTnNiRmgyYjFFS2VqZDRWemhSVDNwNFZETjJheTlGWWxJNWRXaFhSbUpyV0ZwdlNFVXdjbWg0
      ZEcxTlpTdGFUMm8yWTBkV1dGaGtjRWN6TUhwcWJYQTVVbFYyWW1OM05BcHZVRk5yV2sxaFRWVXpT
      VUpSY2pab1N6RkphQzlYUm5WcFJEZGhiVm8xYnpNNVVFUkVTbFJWTjNBek5IQTFUV0ZHUVVwd1Zq
      aDVVVWRHYkhkeFltOTJDbkZYZUdsUlpucDNjV0Y1V1VwRVIyMVNabFZEUmxGYVVYRnlUVzFxU0Uw
      MVlqbFNTVVYzVjFKVldWcG5SVFJ4V25neVNVOXVjR3hqY2tsTlNuZFVWblVLTUN0SFdTOWlkRkIw
      TVZOVVFUVjZRVUV6VWxscmJGaGxPVzFrTnpjd1RFMW1PWEp5YTJGeE5rVk5aVW94WXk5WVlVWkZW
      REpCZDFacFNsTnRlWHB5WmdwTU1uQkdaVGh3VW5nclEySkVZVmRsWmpGU2NrdGhjbmxoVmxreFpU
      ZDNiVVJMYmtoUk1tcDJXVVJrUkRGaWIwMVJPRXRtSzNkbVJrVlZkak5HT1hweENqbEtLMDlyTUc0
      NVpWWkNSbnAzU0c4MGVFNTVXVU5zVTJFNFkwZExPV0pyTDBwU2EyTnNPV3B5TWtOaVptWk9ha3N5
      TDBOUGQwRlBPV0ZwTjJKU1dGRUtaWFpDUmpWS1pEbE9TVE40ZFN0SU1VSTVORmhYTXpBd1pVUkVX
      bkZyWVdnd2REQjJkVTVFT0c1QlMyMURWVFZyY21wd2VFeFlRMmR2YlU5aWVHdFdNd281Y0d0VlJ6
      SlhRM1JQTldkaFRuTTJaWGxqV1FvOU5tdDJVd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Add empty /etc/cron.allow
      file:
        path: /etc/cron.allow
        state: touch
        owner: '0'
        mode: '0600'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Ensure that /etc/cron.deny does not exist
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_file_cron_deny_not_exist,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = disable
# complexity = low
# disruption = low
- name: Ensure that /etc/cron.deny does not exist
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-86849-7
    - PCI-DSSv4-2.2.6
    - disable_strategy
    - file_cron_deny_not_exist
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUkVRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      SjBaMUZCU2tneGFWWlRRbGhSYmxGRVlYRkpWMjlPU1RabVZYVUtlV1prU2xoa1ZtcHZlVVpHTjBW
      T2RXbDJRa2hXYm5GWWRXTlllbGN4VmpZNWQwZ3liVVZoTDNKVk9ETTFRME5sZFdoWFdVeDFabFJu
      UjNaNmNuUnlXZ3BCVGtWUVZrSmlXSFV6WTJsWFFUSkZOa05EY0UxSkwyNXRUV28yTlVwWGJXZDBS
      MnN6ZWxnM2RteGlUM2hRTkRaRFNXaHlUR0l2S3paRGNtcEZkbTVKQ21sS1RsZFBhRTVMY0VoNlV6
      Rk9jMDV5UkRNMkx6QlVkalZ5VFZaQlNGcDVWREZGU0hFclRYcEljM0ZIT1haWlpIRndiM2t5ZWpO
      bksxQnFjRzFDTkhvS1QwRTFTWGd5UmtJME5qUXdlVlI2ZEhBM0syZEdZbTAxTVRrNFlTdHZUMmRD
      Vm1oaWVHaFJkRTkwV25Rd1pteEpXbVZOUXpCRFRERktVamRtT0hCWE1BcGlOM1VyZDNSRVRYRXdT
      VVJtZG5ScFYwazJaMGRQYVc1bVdFOUNORFJJUmpOMVZqRktSbms1TVcxNFkydFFjalJ3THpCNFVE
      aGlOVU5yZVRGT1RFcG5DbWRhT1dJeVpGaFROamRqVUdSU2VrcHNLekl3UVVGc0sxWTNka2xCWkRK
      eGF6bHZTa2xaY2tSMFVGVmFkbG92V0M4cmJFOUVhakZNSzFwM1FURkRWM2dLVTBFNGNuTlhSVVpC
      UTIxUFVtcEJUV3BqTW05MkwwbGhTMGhSWW5SUFJsTllNRWRyUmtjMVZraGliRVJwYkhJMVNXMXpO
      azEwTTJRcmVXRmFOMUpvWVFveWRHcFhOR3haYzBFMk5ucDNNSGd6ZUVJcmNVaG5VRmhrZDBwb1pU
      RTRNaXRLWkRScVVVZzRWMlJzVTBoaGNHeGtkalZxZEhjd1RqVnhaMXBUYlVNeENucERWRllyT1VO
      SWEyYzBSRk16WWxCSWFubGFVRWh2ZVhSUlFXTTJWblk0UkRsdFRHdHFOMHM1ZDB4c2R6UmFla3RH
      WkRoTWNXRjRVazR5UkRkcFpWUUtWek5GWlRGa1RFWjRWeXRQWVRKS2VYVlVjMWRsYWxGa1lVVnZM
      MDVOUlhjMU5VY3lVMGRTTkVkTFVrcEZTMmhuTkZoNmRuYzJRVWhpV1RCbVlWVkNjUW95VWtKcVNW
      ZzFjRGRYVEZGV1NISmhTVTlSYmdvOWVuUm1RUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Remove /etc/cron.deny
      file:
        path: /etc/cron.deny
        state: absent
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Verify Permissions on cron.d
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_file_permissions_cron_d,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = configure
# complexity = low
# disruption = low
- name: Verify Permissions on cron.d
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-82277-5
    - NIST-800-53-AC-6(1)
    - NIST-800-53-CM-6(a)
    - PCI-DSSv4-2.2.6
    - configure_strategy
    - file_permissions_cron_d
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUmFRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      TTBXVkF2YW1SU1VWUkRWWEEzYUZwMGRqVkRSRkpLTVhGd1Ywc0tXR1JxU2xCMmJERlBiMkprTUVo
      eldHZEpXbXhUVUdWM2VqVjFOREEwZGl0YVptNXpTV2M1YVdaMWNtTTVNRTFKWkhKS05WSmlRMVFy
      VERrMFZIUlZaZ3BTWTB0NFNYWkRSSFJ1U2l0VFIwWlVhamRaYzB4WFFXRlhjalp2Vmtod2NGWXJj
      RnBEZVhwSlNrRjFNVEp0YUVOSGIyTXJNMlZ2ZDFsTU1IZHhlR0ppQ2xGSmRrUkdXVFIyTUZNelJu
      RktPRU1yYkVSWFJEazVWa014YmpZd0wwSnlRbkJqUVRkdU5GUTNZa3MxV0RoUlpucHBLMVU1Ykhv
      eWFXVkxTMjlTYVZBS1ZsUmxUbmxaTVd0b2QzVlhUM0JSWTJOb05rcExhMmhtT1ZCeVMwRlFTbWR4
      YVRKVk0zbFZUa0ZKVjJOSWJUTkhlVXc1VjJ4VE0ySlljV1ZCY2t3NFNBcDVhbVZXWjI0MmRFdzBi
      RlJ5TkdKc1IzUjZlazlqTURJM1FUZE9VM2swUkdKcWIwNURZekI0ZGxVeVNERlhXVU5zYVZFNVlr
      VTBVall3TTFOMlVsUldDbTh5WkhwaFVFSkRORlU1VUM5VmFEQlZUMGxJUlVoNFMyODNTbGQwYzFC
      U09GSk1RVFJ1WVhndldUVXdlRTAyVWxGTGJWVmtkVlVyTkVGUFowVkVVa01LWkM5c1RIVm1iM1ZC
      VERkWGNHSkhUSFpZVUZSaldFZzRSMjVtVEVWUVUyaFlWR0ZJU2tsQkwxcG5ORXhxZGtaaFoycEdU
      VmRPUjFwdVFsUk1jalJwWlFvMlExaFFhRlprWkdsdWVVSmtMMFZFWlVSUWRVeFdlblF3VW01Uk1W
      Sm9aM2h2VEhsRFYwdEhZemhaVmxCeVRWRnZUVEZpYVdsdmNrWXZSMFZKTW1KV0NsRXZNVGhOYkhJ
      clpETnRabkZ5V1ZVeFVFeFVUV2ROYzNWUGVIaElhVWhrVmtobGRpOUJUVnBHVkVkS05IVlVSbUkw
      VjFsQlRtRk9iQ3N3UVhobmVqZ0tlamRrUkhka2RuaHJiazF3V2tOVE1XTlZiVVJrU0c1WWNrZGFU
      VGRZZEVZeVNqUmFaeXRGUmsxd1dVeGtaSFU1WWt4dEt6QkZZV012YjI1VVRqZGxUUXA1YkRsd00z
      VmtObHBLYUhrelNTdE1abUZYVHdvOU5WUTJUZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Find /etc/cron.d/ file(s)
      command: 'find -H /etc/cron.d/ -maxdepth 1 -perm /u+s,g+xwrs,o+xwrt  -type d '
      register: files_found
      changed_when: false
      failed_when: false
      check_mode: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Set permissions for /etc/cron.d/ file(s)
      file:
        path: '{{ item }}'
        mode: u-s,g-xwrs,o-xwrt
        state: directory
      with_items:
        - '{{ files_found.stdout_lines }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Verify Permissions on cron.daily
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_file_permissions_cron_daily,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = configure
# complexity = low
# disruption = low
- name: Verify Permissions on cron.daily
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-82240-3
    - NIST-800-53-AC-6(1)
    - NIST-800-53-CM-6(a)
    - PCI-DSSv4-2.2.6
    - configure_strategy
    - file_permissions_cron_daily
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUmhRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      WlZSVkF2TWpSWGVsTXdRa0k0VVhka1NTdEZSVFpEUXk5S1NuTUtjRkpwTTJzeVRqVnJNMHRRUXpO
      cGFYSnpjV2RqVEhSaFpFbHRPR2d6WkZkdlFWWldkVWRMZVM5U1lUTk9VMnRMTXpKSVRWcExSalI1
      YkcxQ1RHMW1kd3ByWkZZeU0xaGpVazlUWTJ3M1FUbG1SRFV2VTAxMk1Hb3lUblJEU25CRmNFbEVT
      MnBNU1RWNlluVkhSREpNWkdKUGJrdFBTalJ0UkZCeWNHZDVSbGRIQ21wU2FscHlTSGhNTTJST2Js
      Um9SMFJQYms1U2NGWkNla0pQUlVSMlZIbFpNMDB2VjB3M05qSjJMMXB6V2xWbmJXSXZZV0pTTVcx
      eU4zcEVUMkk0S3pjS1ZEZE9iazFJWTJ0elZ6RTRNMnh2U1hoRVIzaG1MM0JYTVRoTVoybG5WelF5
      UWxaNVMzbHNUU3QxYmsxeGNFRmFVM0ZSWkUxSVJVSkNka3RSWmxocmFBcDNRM2t2Y25CUWFtVm5h
      WFJCZVZNeGFFcE9PRGN4U2pGS09UUXhZekJrWmprNFREZHJVRm95Tldzd09HSm9hbEpsY21ocVpG
      SlhNMDg1YzNGd1VWcHVDbkV2UjFONGFYaFJWa1U0UWs1U2VpOUtXR28zVDFFNVZIRmlORmh1VVV4
      emNHOXdhMkkyT0RCUlZrbzFjREYzZWsxR0wzTXlVVkZvU2xJM2JuTlRMMDRLTmxsb2FreDRWa1JH
      YTIxUEsySXhVVTFxVXpKTWVWRm5OMk5rWTNSSGNYbFpUamtyUW10NVJWWnBNMjg0ZW1sQlRIRmpV
      VmczYzB4bU0ySmlla3htU3dwT05uQnhUbkZXTkdNd2RtUkxabEJvVWtOUE9XdG9kVUpLUzA5T1Nq
      SnVjV0ZGTUVadE5qaFRkREppT0VGVGVDdDNRV1pyYkVob1dVZHZla3RHWVZaNENsRkhOblZuVDB0
      dmJGWjFTMDEyTnpCelR6VndZallyYW5WSlQzVkhkamxVUVdwVk1sVjZjbWR6Um00M1YzcEtaV3RD
      T1djMmFrZFdZbFoxTVV0Q1EyWUtaM0JQVG5OTlJFVTNWbmszWTNkclVGTm5kM2R3U1c5T1YwUldU
      MFZhZDI5NFN6RXZUWEJPYzFGWUt6UlBTMHhXVEdKR2FXdHFWeXRIYW5OdFJuTldTUXB4TjFJeWVG
      QmxjMmg2VUZaQmFIZEhZbmcyTmdvOVluRjNTZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Find /etc/cron.daily/ file(s)
      command: 'find -H /etc/cron.daily/ -maxdepth 1 -perm /u+s,g+xwrs,o+xwrt  -type d '
      register: files_found
      changed_when: false
      failed_when: false
      check_mode: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Set permissions for /etc/cron.daily/ file(s)
      file:
        path: '{{ item }}'
        mode: u-s,g-xwrs,o-xwrt
        state: directory
      with_items:
        - '{{ files_found.stdout_lines }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Verify Permissions on cron.hourly
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_file_permissions_cron_hourly,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = configure
# complexity = low
# disruption = low
- name: Verify Permissions on cron.hourly
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-82230-4
    - NIST-800-53-AC-6(1)
    - NIST-800-53-CM-6(a)
    - PCI-DSSv4-2.2.6
    - configure_strategy
    - file_permissions_cron_hourly
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUmhRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      SklPRkF2YVVFck9GRjBaRk5yVDJwcGRYSndSVXd3Y1dVMEswNEtaMDlrVkhkbU0zSnpXRFpuVlc5
      dE1uRXliQzlwY1dWTFQxaHZWMmx4TkRsalNXdHdUbXRPY21OYVZIWm9Za0ZTUkZJd09GZE1UbEJP
      TVZsaFdXSkRXZ3BYVDA0elNtSkhiSGR6V21vM2REQk5lVVU0YjFaUWN6aFhjVGRXUTFaaGRWSk1W
      MHhZTVRSaU9IUlVPRkJtWnpGUVJWcG5PV0ZFYVhVd2N6bERhV1ZVQ25GbFZFczBOV3RuVFhaWVpH
      MHJkRmt5WlVsNU4wRTBkRmRaZFdwcWNrMUpXRVJqWm5JeVUwc3lTMWgyVGtoaFpVcENaWHBQY0N0
      d2FYQnhSMDFSTVRNS2RXUlRlbnBWTTBVcmRXWnhXbTlaVHpZeFRrNVhZbVJyUVRkb1ZYTnpjR3Qx
      VkZoeVozVmlUMWt5TlZnd2NWRnNlbHBZWjNVekwwY3lSWE5MVVRGTlVBcFRLMFZLT0U1M09VSTFU
      VEl4VjBOTmVIRXJiMG8xYjFKTFVITnhLMHh4YzFGU1FsZERSbEoxUzJaRVZIZzFlbXhJVlVwT2Vr
      Um5jR3RQTlVOa1JDdE9Da2xUYlUxa1NqazJLMHh6Y0dkR1lVcENVa0pqWjNjd1dtNU9WVkpOZGtZ
      NFMwdE1OMEpZVUZSVFJVZE9LM0p1VW5KaWRpczVabXg0T0d4c2RHbHhhWFlLTjJKR1IxWnFZMmsw
      UlZOME4wOVRUSEZYWkV4alFtSjBWRFF5YWt0TFJFVk5lRTFpUkNzMVkyTTJVVkJVVWtOM01FOVlj
      R05QZUNzNGFYcHJNRkV2ZEFwUWF6RlNNMFk0TVhGR1RWSjRaRE15WWpKRlQyWjZjRWt2YTA5WFlt
      UXZka3RwTlZSWmMxcExlbE42Y1hGa1lsRmxNV3RPU0RWNlJFTjNhRVpEVTJWSUNtdFhUV051V0Zk
      Sk5DdFdWblZISzFwYVQySmFaek00VmxacVVrTk9NakIxZUdsbVdYWnRPR0ZPYW5KTGRFZGlObHBa
      TVhwcU5YSkJMMDFaY0dObE5rOEtaM1JqS3pZcmVIb3hXVXBOVWpGRmRqQldlRVp6TTFScGRuTm5l
      RlpsUTNCTVFteFJaekJKUWpORWVYUlphMnBxWkVwVGIwZENNbVYwWjNST1kyUnRUd3BWYlVwVGR6
      Z3JSV00yZWtKTWVWVlJRM1F6THdvOVJHYzNhZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Find /etc/cron.hourly/ file(s)
      command: 'find -H /etc/cron.hourly/ -maxdepth 1 -perm /u+s,g+xwrs,o+xwrt  -type d '
      register: files_found
      changed_when: false
      failed_when: false
      check_mode: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Set permissions for /etc/cron.hourly/ file(s)
      file:
        path: '{{ item }}'
        mode: u-s,g-xwrs,o-xwrt
        state: directory
      with_items:
        - '{{ files_found.stdout_lines }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Verify Permissions on cron.monthly
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_file_permissions_cron_monthly,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = configure
# complexity = low
# disruption = low
- name: Verify Permissions on cron.monthly
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-82263-5
    - NIST-800-53-AC-6(1)
    - NIST-800-53-CM-6(a)
    - PCI-DSSv4-2.2.6
    - configure_strategy
    - file_permissions_cron_monthly
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUmlRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rp
      OWhSVkF2VWpaeWRWSm5WWEkwVFhRd1JtZHhPVVEzTTJKYVdFOEtNV0psWkVwU1ZFRlpkWHBHT1ZO
      dWNpc3hlbWNyUzJKMldXdEpVMnRzTjNONGFVOVlXbmRpVTB3elpGRjRaRkpJUzI1MFNDOTVhVzFL
      UzJaek1uSXdiUW80WXl0dGFXcFdhSFFyZUZoV1pVVlVabE52V0U0NGVXNDNZek01VmtSUVMxWnBi
      a1ZMTURSVWJ6UnZaek56VTFGTllrWmtSSE5RYTBNd2QwTm1iWGRUQ2xaVE9GVXhlR0ZSWlhoNk0y
      aG9RMVJXVkhjMFFURnZSM1pXYVdOTU9IVkVWSGhDUTJSSlIyZEdibGRwVmpWWVJIWmFWVWxzWTFs
      UE5rcExhbU0xVVc4S2F6UXpaR0ZDYzFaT2NuZHJWMHhDY1hOWVl6ZFJjSE55UXpGaFEwSnNVRWh5
      ZFhGTVExSmlOR3NyTlUxV1kwZFZlR3g2TTFsYWNWZHZja1I2YkhKRFdRcHJRME00VXpWUmJIQjNR
      bk5rYTBaRU9UUjFNRVJYVm5vclZWQTFSelp0UzJKeVFuWlRka05WTm5oVE5WSTFUU3RpYmxOcWNr
      OTJRMjR5WkZoeGFIVkVDbWR5VW5CbWVXcDBOWGR2VkZadFdGa3ZVR1ozV25oblMyeDRibWMzY0dj
      Mk4xWTNka3hDV205WVdFZzRZWE42VFRoSFN6RnBabVZDT1ZsUFpERmlOVGdLVVhwV1drWlBURXRC
      TDJGWGRtbDBhRnBtVWk5NFdHMVVaRTVsTlVweVNsQkdNamxHVG5ZM0szRkxaRnBOV1cxaGNqVlNl
      a3gzVkZSQ2VHUXJWakJ6UndwS1kxa3JOMFZxY3k5Mk0zbzFURTVuVG5RMFpub3hZVFp2ZEZkUFZF
      eE9jMHc1V21ocEwzZFliM0Z4WlZwUE1tVkdabVp5ZUROcFFsTlRibmRCYzI4NENtUmxXR0p3TTFS
      V2MxVkxlbmhTWjB4dFFsQmxSVzQ0TVRoYWFHVk1lbE5OVGxSU1lYRkNZWGRYUVd4cFN6UjBaRE4z
      T0hVMFIxUTFZMEZHVldoRWVIY0tUVVIzTDBVd1NYVkVRbkJQUTBKM1dtTXlTUzgzVVU1eFJuTXZZ
      ekJoT1RWNFUxRmpSWGRETkVSRlRTdHJZbUZXZEc5S1UwbENTREZZZEdadFIwbHplUXBvV1ZrNE1X
      WnRhMlp6T1VkQlFtRlNaMk01U0FvOWVYcFpUd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Find /etc/cron.monthly/ file(s)
      command: 'find -H /etc/cron.monthly/ -maxdepth 1 -perm /u+s,g+xwrs,o+xwrt  -type d '
      register: files_found
      changed_when: false
      failed_when: false
      check_mode: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Set permissions for /etc/cron.monthly/ file(s)
      file:
        path: '{{ item }}'
        mode: u-s,g-xwrs,o-xwrt
        state: directory
      with_items:
        - '{{ files_found.stdout_lines }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Verify Permissions on crontab
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_file_permissions_crontab,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = configure
# complexity = low
# disruption = low
- name: Verify Permissions on crontab
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-82206-4
    - NIST-800-53-AC-6(1)
    - NIST-800-53-CM-6(a)
    - PCI-DSSv4-2.2.6
    - configure_strategy
    - file_permissions_crontab
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUmlRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      VnNkMUF2YVd0R1NXTk9jbUphWTB0bGNFTmxPV1EyUzJ3MGFIQUtSMHBzYzNoNFoyTjJSMlYySzJo
      bGNqTmhRMlZIVDNkcldIVnpTbTlPVDBGcEsyUkxWbTkzVVUxWU1qTnJWMGgxYTNkUE1VYzRXbU54
      VmtRelFsa3Jjd3BuVFd4aVduRjVhSFJFWlZwMGN6Tm5TalozVjJGb1J6SXdjRkZIV1daM1lsQnZj
      bXhWSzNZd1dHcHRUREkzVUV4RVdXZHFZa0l2Ym0xaVJrNXlTM2x4Q21sdlJHdEdia2g0Wm5aaE1u
      SkVlRWgzYlRsMVJFcGpjVk5tY2pGVGJIVjRUWFV2VFZZdmVsbGpUVmxNZFdwSFEwVm9iVUZvWjBw
      UEt6aFpVVlZzZVUwS1NVUmFkMVJIVDBaYVRuTjNVWGxtYWpoSFJrWk5XRGhyTTBaMWNqTmpVSFJ5
      Wmt4WlJYZFRlQzlvVFM5bVNtdzVPR1pOTm1aS2FWRTJORmhYZFZKVU9RcGtXSEJpZDFCVmNFRk1k
      bUpzYURneVpHRXdhR3RvUVVOV1ZXMXhZV0pYT0hGeWEwaE9NaXRuVUZvclpYaHBRbEZ3VFRFeFZq
      bGlZbWwwUzNodGRqUjBDa0o0VkcxelMxSnpkamhoT1U5SmFWQTVUakpWU0U5cFVFNU1PRWw2V0dn
      M2VWSjBWRlZHU0N0TFVFVlZNR1o2UlZFMU5ERm5WRGxvVkhoS1kwaFBVVUVLUkM5UlVrVTVNR0Z6
      TTJoTE9YYzNibmw0T1U5SGVVaFVTbWxvUm1KTlZrdFhPSEp1Tlhoc2NXWkxlbk00U1VWVFpXRjRl
      VlJOU21sRmFVOXRkRmsxY3dvMlIxWktNV2xHUVZkT0sxWmhRMFkwUmxvcmNHUjVUa3N6ZVhwR0wy
      UlNWVnB1YVRGNk5scHdRbFI0VjI5WGIxRXdhSHAzTlV3NVQwa3hla3AzZUdOMENtdzFlRzF4YTA5
      bFFsSlhTRkZNZEZVM056QXZXVzlXVWxGamNWVmhZelZFWXpFd2RXczFaRGREUmtGdVZrcFVNblky
      TVU5cGExSnBPR3R2ZERRMVF6RUtZbE0zTTJaT1NVWm5abGhOV25OYWQxVXlZbkpyTW1wV01uaFdh
      V2RCWlVwR1pYbHhWV3BSTm0xaldWQmtiMEkwZVVObmEyWjZUVVJQTTJSa1dUa3hlZ3BKVTNCcVUx
      VTFNRUZ4TTNvNE4xQmpTVlUyT0FvOVNXbzFkZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Test for existence /etc/crontab
      stat:
        path: /etc/crontab
      register: file_exists
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Ensure permission u-xs,g-xwrs,o-xwrt on /etc/crontab
      file:
        path: /etc/crontab
        mode: u-xs,g-xwrs,o-xwrt
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - file_exists.stat is defined and file_exists.stat.exists


# Verify Permissions on cron.weekly
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_file_permissions_cron_weekly,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = configure
# complexity = low
# disruption = low
- name: Verify Permissions on cron.weekly
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-82253-6
    - NIST-800-53-AC-6(1)
    - NIST-800-53-CM-6(a)
    - PCI-DSSv4-2.2.6
    - configure_strategy
    - file_permissions_cron_weekly
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUmlRVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      WnhaMUF2TXk5SFdFaElNa2RTYVVSdlZEQnJjM0k1ZVVsa2FYWUtRVzFqV0d0blIyNVhiRzl0VjBS
      SlZVTlRSazFxV2xwTVNDOUZaSHBzY1ROMFRtZGFZVlZHWVRNdlNHeHFhM2QzWlU1TWRWVm9WRGxs
      WjFGV1ltTnhhZ294VUdsMWNUSk9ha2hwUnpkRGVUZElPWGsxYmxVeGNIWXZRMm94VVVkR1NHUnpl
      REZ2ZEhWMFJIRldWRnBKVVdKTVVVcDFXRk51YkhSbFpESjBkSG81Q2tjd1YwVjFWVmgyZWtGR1Ix
      TnJVbWh6YTBRdk16RkZWMnRFZG1saVEwaFljblpoYlVSaVIybFZkbU01U0ROSVVWSmlTazVGZFc5
      TVduSmtOM3B1WmswS1NFRkJRWGx3V21WaGVGY3pkMHBzYzFsdVUweDVPRGRWZVc5eWJYUTBVWG9y
      TDFkU0t6QllZMEpNYjFSeFRrWXhlVmxEY1c5QlJtWnhMMEpPVUdKSVNncENlbnBOVjBWWWNIZ3ph
      MFIyVDBwck0xSkNSRGhVU25CNlYxRXZaakJtZDNOcVIyOWxRV2R2Y0hGeFdUVkdSVko1ZUV4ME5I
      Wk1RalZST0c4dk0yMWlDa3hXWVZONVMyczRSRE5HVFdkVk9YTkhMMVJETTJsRFRHY3dVR2h6TTBo
      V1pUWk5ha0V3Y25oYVMwMVZTR2xvTkVFMmNXdHNReTlrVVZWa2Ftd3ZXRmtLSzFVMGRtNTVlV3By
      TVZCTVdIWmlOVEp5ZFU5YWVYbDNkMjVhSzNkcWJrRkZWVnBrUW0xeFowZEZTVXRWYW5aTFZGSklU
      RGszV0RsTGVsaHljR294ZVFwWWN6RjBWV2xLWldaaGVFOUhUMjFYUWxZeVdXVm5iMVl6Tkd4YVFu
      QnZSRFozTVhaMVQySjFNRkZJZFc1RVIxa3JWVVpaTlZkYU15czBkazFtVkVKSkNpOXpiR1V4YVZK
      dVpYbHJlWGxhZW5WWE5rcGFNU3Q1WTNGbU4wRlZUVGM0WTJ0cU9FSjNia1JDUlc1WlpVVkRZME5Y
      VG5SSlIzSnRPRVJLTVdGWFNEWUthV0ZXZFV4dFVGWm1TMFZWUVdRelZTdFJlRGh0V2k4elNFNDJP
      RTFaZUdocWRUSjNNbmd3SzB0cFdrdEJieXRaVFc1bFMzUm9SQzlMTms5dWRUSnNkUXB6T1d3M1RV
      cFFVMW8wYVUxWWFUQkpWVmszZHdvOVVFaGpZUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Find /etc/cron.weekly/ file(s)
      command: 'find -H /etc/cron.weekly/ -maxdepth 1 -perm /u+s,g+xwrs,o+xwrt  -type d '
      register: files_found
      changed_when: false
      failed_when: false
      check_mode: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Set permissions for /etc/cron.weekly/ file(s)
      file:
        path: '{{ item }}'
        mode: u-s,g-xwrs,o-xwrt
        state: directory
      with_items:
        - '{{ files_found.stdout_lines }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Ensure All User Initialization Files Have Mode 0740 Or Less Permissive
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_file_permission_user_init_files,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure All User Initialization Files Have Mode 0740 Or Less Permissive
  hosts: 'vian.local'
  become: true
  vars:
    var_user_initialization_files_regex: ^\.[\w\- ]+$
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVlRRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      ZFZXVkF2YVhVMlRtOWFWazFKTUZsVVlsZFpXa3hSV0U4MlZDOEtXblJNSzI5Nk5VTkZVMDl0YlVa
      TVpHVlNhMmh6VFZSbWJXaEpPQ3RFYkc0d04ycEJTMnBSV25wVGRFcHNXSEZsZFd0RWNqaENTa1Zw
      SzFGQmNrNURkZ28xYWpscWVYVXhkMnQ1UTA1NVRsaFZRbFExUlZwaWRFVXlVak5NY0N0bGRrZzFl
      RGxGYUhOR1ZHbHRWUzlTZHpObFVXRXhMM2g2ZEhaRVpUSXJNRGxJQ21ONlptcEZhR2hXU2sxck5t
      NVNjMWxPVDBkUFZtVmxUa053VEV4UGVURlZOak5sWlZCYU5HeFhVUzh2YVRKbVNsaElVWFF3VEZN
      M1RXRXlkMHh1VXpRS1pEaEJVMlp6YUZSNVJUZEtRblpqV25sdlduUlFZVWw2VldSMlQySlNXVEYy
      ZFZsYVFXRkRXSGhoY0U5eldYUllWRXhQVlZkTFlrSjZSVWxUV1VaRmVncFVaelZHU0UxTFVraENl
      V2R4ZDBRNFRuTnVlVVJSZUhSVFZsRTFNVTlGUzNOSFZHcFdNakpWVlRSMmRuUmFURTFyZFZoQlpt
      TmhjR1psU210eU4yMUdDbWx4TTJoclNXeFZWRkY1ZUdWR2F6ZEdVazFFSzI0M1lVWlRSREZDY3l0
      elRFNTBUMkkzVkVneWMwUjVjaXRUUm10WGR6QlVNVEJoVEVRNGQxQjVlRGdLVERkWWVtUXhlWEpP
      UlV4MlVHaEtWSEZyY1ZVMVdqSTJjVkJDWWs1RE1rMUhUR1prY0ZGUmRpODFTQ3RRYld0U2FXVkhS
      V2RPVDJodFZXOU1PV2hpVkFvMWVsWm5WM3BrYmt0T2NUbFJWMmcxWld0VE1YSm9UVWRNTW05a01V
      MDVUa3QwZEhwRlYwVk5ObU4xVUZSWFlVWlFhME0xVW1wNlIzcHBlRzEyWmt4dENrMXZPWGx3TDJV
      eFZEWk5UMWRDVG1WdVJFNDBVVVl3YjFkM1ZEQXllV1ZCYW1kV1oxVjVaMFJ2VFhkaVQxZEpUMEUy
      UmpGb2JrTnJWVzQzUTFCUlduSUtaMHhHWWxCR00xRmtVbUpTT1c1c2EyRTBSV0pqYmxsWGQzWXlP
      SGx0Y1dOcE1uUm9VbWhvSzJWU1puQkhVMVpYY2xaVU1sZHNZVzV0TDNoR2FHTk9UZ3BMT0VGaGJH
      UXJTVEE1YW0xbEt6RkVlVVJzV1FvOU5VZFZTZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-84043-9
    - DISA-STIG-RHEL-08-010770
    - file_permission_user_init_files
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Ensure All User Initialization Files Have Mode 0740 Or Less Permissive - Gather User Info
      ansible.builtin.getent:
        database: passwd

    - name: Ensure All User Initialization Files Have Mode 0740 Or Less Permissive - Find Init Files
      ansible.builtin.find:
        paths: '{{ item.value[4] }}'
        pattern: '{{ var_user_initialization_files_regex }}'
        hidden: true
        use_regex: true
      with_dict: '{{ ansible_facts.getent_passwd }}'
      when:
        - item.value[4] != "/sbin/nologin"
        - item.key not in ["nobody", "nfsnobody"]
        - item.value[1] | int >= 1000
      register: found_init_files

    - name: Ensure All User Initialization Files Have Mode 0740 Or Less Permissive - Fix Init Files Permissions
      ansible.builtin.file:
        path: '{{ item.1.path }}'
        mode: u-s,g-wxs,o=
      loop: '{{ q(''ansible.builtin.subelements'', found_init_files.results, ''files'', {''skip_missing'': True}) }}'


# Configure Firewalld to Restrict Loopback Traffic
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_firewalld_loopback_traffic_restricted,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# complexity = low
# strategy = configure
# disruption = low
- name: Configure Firewalld to Restrict Loopback Traffic
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-87272-1
    - PCI-DSSv4-1.4.1
    - configure_strategy
    - firewalld_loopback_traffic_restricted
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVlVRVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      VnZVVkF2TUZCUVVFWTJia3hFVjB0M1dIQnNMMlIyWVhSdVl5OEtRWGcwV1dVd1JscDJla2hIYUhJ
      d2NFZHFlbTVxUkRNMmRVVXZkWE00YmtwTVJVMW5UblYzU1VFMlVUaDJRakp5V0hNeVZVZFFiaTl1
      WVRoWFoydGtTQXBLZVdkbVUzY3pVRWhvYUhjNGRTdG9SakIzY3pGMlRESjRXRlpRVTA5bFJqUlBX
      V3hPVUVoMlRYUjJSVGxGVEd4SFVXNWhhakpCVHpnMGEwaHhUVWhxQ21ONWNsbENWbmhNVVZaamFX
      eG1UVFZvT0ZscU5IQlVNRTl5VnpKcFJUUnRXRlJzWTJNMWN6ZFNaMUJ3UzNFNGNuaDZSbGMwUm14
      TGVUTnJVM2QyT0VjS1IxVm9SM1ZMVGtseVRsZHNjMVpIWTNSNU5ESnNNR3A0ZWxsREszcG5VMDFG
      VFRnNVpuQkVLelZXVDNRclZUbFNZME13YzFwVFZEQTNVV00zTmsxbGRncElWRWQyVVRacU9ERjVT
      R0ZWUjNCR00wMDFRbGxpY2paRE0ybGxaRWxWTlhweVNUaGpNVE5JWkdaelZHTlRVV1YxUVZKRWEw
      bzVNV2tyZG5ZNVVVUldDbUozUTNOTFdUTTNZMVY2ZUZvME4wTkpOVm8wVGtOTFNGWTBSRGd6YUN0
      cFpYUXdWblJQUjFBM1ltaEJhMHBRVG1wNldXUk5VRk0zTmxrd09YRnphRzhLZEVadlEyZHhTVWxE
      TmtadlJGUnhXVGxvTVVoSFRXNUZPRlZ6VlhCek5YQnJkVGhzWVRCeWMwTXZUSEpNZW5aYVJqZGxj
      bWxKYmtsWVpsQlJOSFZPYlFwWU9XZ3plSEJqZVVSMVdrTk1aWEJoVmpGQ1ZYSXZNMHgwZDBWS09H
      NUtOR2t3WmsweFZWRlpjMnRZVDFNcmRsZEhSSGRwZEdOMFdHazVVamxwU1hKdENtOWhlR05oVEhw
      NWNFTlpTVWhvTWxoUmRXUjVTRXR3UzJKTWQwMVlNREpOSzAxWk5ucExiSGx1UWtOWFNVZFBOVEl4
      VWtKVFYzaEpOVGhCUVROaFZua0tUMll4U0hCQ1VrSmFNMUIwY0cxa1IxTmtVM0JXZUVKdlkzRXZZ
      VGhQT0cwMlNVaHZhMGRPWld4RlZqbHZUSE5TWmpkWk5qTmxSbXRUWkdWblUyUm1VZ3BCUlRWcVNG
      SmFUbXRLUmtkd1JIaHVWVTFLY3dvOWJrVTVRd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Configure Firewalld to Restrict Loopback Traffic - Ensure firewalld Package is Installed
      ansible.builtin.package:
        name: '{{ item }}'
        state: present
      with_items:
        - firewalld
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Configure Firewalld to Restrict Loopback Traffic - Collect Facts About System Services
      ansible.builtin.service_facts:
      register: result_services_states
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Configure Firewalld to Restrict Loopback Traffic - Remediation is Applicable if firewalld Service is Running
      block:

        - name: Configure Firewalld to Restrict Loopback Traffic - Ensure firewalld trusted Zone Restricts IPv4 Loopback Traffic
          ansible.builtin.command:
            cmd: firewall-cmd --permanent --zone=trusted --add-rich-rule='rule family=ipv4 source address="127.0.0.1" destination not address="127.0.0.1" drop'
          register: result_trusted_ipv4_restriction
          changed_when:
            - '''ALREADY_ENABLED'' not in result_trusted_ipv4_restriction.stderr'

        - name: Configure Firewalld to Restrict Loopback Traffic - Ensure firewalld trusted Zone Restricts IPv6 Loopback Traffic
          ansible.builtin.command:
            cmd: firewall-cmd --permanent --zone=trusted --add-rich-rule='rule family=ipv6 source address="::1" destination not address="::1" drop'
          register: result_trusted_ipv6_restriction
          changed_when:
            - '''ALREADY_ENABLED'' not in result_trusted_ipv6_restriction.stderr'

        - name: Configure Firewalld to Restrict Loopback Traffic - Ensure firewalld Changes are Applied
          ansible.builtin.service:
            name: firewalld
            state: reloaded
          when:
            - result_trusted_ipv4_restriction is changed or result_trusted_ipv6_restriction is changed
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - ansible_facts.services['firewalld.service'].state == 'running'

    - name: Configure Firewalld to Restrict Loopback Traffic - Informative Message Based on Service State
      ansible.builtin.assert:
        that:
          - ansible_facts.services['firewalld.service'].state == 'running'
        fail_msg:
          - firewalld service is not active. Remediation aborted!
          - This remediation could not be applied because it depends on firewalld service running.
          - The service is not started by this remediation in order to prevent connection issues.
        success_msg:
          - Configure Firewalld to Restrict Loopback Traffic remediation successfully executed
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Configure Firewalld to Trust Loopback Traffic
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_firewalld_loopback_traffic_trusted,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# complexity = low
# strategy = configure
# disruption = low
- name: Configure Firewalld to Trust Loopback Traffic
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-87278-8
    - PCI-DSSv4-1.4.1
    - configure_strategy
    - firewalld_loopback_traffic_trusted
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVlVRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      VTJUVkF2TXpSTldGVjRUMDlFTDJoVE9XVmhSMVpUWldFelIzb0tlWHBtY0dkbFdqbHRjVzV5TkRK
      MFMyZFNVVE5GZVUxTlRFMVpTMGxGY0RZek9VUXdabEJJU21WcVNuVmlVVzlFWjJKdU1DdGpSVlZ5
      Ylhod1JsQmtlUXBQWVd0YVZqQjJkR3BKTUZkeVVrTmpaRWxzYjNOU1ptVTRSWEZ0VTJSelRUWXZN
      RmhqVEhWSlVUQTJlVVJsVFRVM1ExSkhOVEl2TUdZNGRXbDBTMkYyQ2xWNFQyZzBhR1ZQVEdoQ2RG
      WTROVFp1VEd0TU56STJTSHBrTkcxSGVIbDNjVTVZZFRGdGNXeFhia1p4ZW1OemJGTk9aR2R5VXpB
      Mk4zUkhiV3BIU0hJS1puUmhlR2hwTjJsd01uSXhkeXROUjJGa01UQnVNVlJDVTFwS1QxbHhObTB5
      V0RscUszSjFVVGR3SzNsSk1ubERZVGgxTm5kNFkzbDJUbEUyV2taa1J3cEhZMDkyY2pSd1VFWk1U
      amRhWlhaMGRtdEZaRWxqYVVJemVIcEZibU0wUkRGRlFsWjBiVkFyVlVwTVIwcEJVSGxpTW1wU2Rt
      eGtVQ3N3Y2l0Nk9FSlVDa2hFYUhKd1lYSkVhak13WWl0U1RWRXZRMDExVEc5MUwzTjBRaXRtU0dG
      U09XaFZRMmRGTm1zMGNIQTFORVJDVkhkTWFYVmpjalJsVDJwR2RHY3diRWNLZUc1TmRFUktUa1pZ
      V1hGWlRWTnBVV2R0UzJsck9HTXlhRUZ6VkRJNFpHWTRNVVJDV0VRNE1VVlVibUV6UldFeVVtc3Jj
      RFpEWjNwcGQzTnhWV3R0UWdvNFYwODVOREZ6ZEhKS1dXSTNjVWhrVG1odGVWaEpNRkJ3UVVWM1VX
      dHVUazR2WnpSRVVuTndZV3BqVG05a2NqSlRRMVk0TkhocmMzcEhTVEJ2VWxCdENrbG1SV0UzV2pG
      c1YwUTJNV1V2WWxWVFVIRm9TWEZFWmpsQlRVSk1kRFY2T0cwemRqZEhiSFpaYUhsVlpUSTVZWE5U
      U0RkdVJXRm5jbkZ4TUdOWFR5c0taV2RLZEVsblEybHllR0ZoWVN0cE5GazVSbGQyTmpKamNYVXla
      bkJqYmxseE1FUXZjMnhUVFhoa09Dc3ljME5zVkhOd2FESXlWbkJ2WlRGcVJrRndiUXA2ZDI0ck9E
      Um9ZM2h2VFU0cmJIZGpWWGdyVkFvOVl6WnVjd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Configure Firewalld to Trust Loopback Traffic - Ensure firewalld Package is Installed
      ansible.builtin.package:
        name: '{{ item }}'
        state: present
      with_items:
        - firewalld
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Configure Firewalld to Trust Loopback Traffic - Collect Facts About System Services
      ansible.builtin.service_facts:
      register: result_services_states
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Configure Firewalld to Trust Loopback Traffic - Remediation is Applicable if firewalld Service is Running
      block:

        - name: Configure Firewalld to Trust Loopback Traffic - Ensure firewalld trusted Zone Includes lo Interface
          ansible.builtin.command:
            cmd: firewall-cmd --permanent --zone=trusted --add-interface=lo
          register: result_lo_interface_assignment
          changed_when:
            - '''ALREADY_ENABLED'' not in result_lo_interface_assignment.stderr'

        - name: Configure Firewalld to Trust Loopback Traffic - Ensure firewalld Changes are Applied
          ansible.builtin.service:
            name: firewalld
            state: reloaded
          when:
            - result_lo_interface_assignment is changed
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - ansible_facts.services['firewalld.service'].state == 'running'

    - name: Configure Firewalld to Trust Loopback Traffic - Informative Message Based on Service State
      ansible.builtin.assert:
        that:
          - ansible_facts.services['firewalld.service'].state == 'running'
        fail_msg:
          - firewalld service is not active. Remediation aborted!
          - This remediation could not be applied because it depends on firewalld service running.
          - The service is not started by this remediation in order to prevent connection issues.
        success_msg:
          - Configure Firewalld to Trust Loopback Traffic remediation successfully executed
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Disable XDMCP in GDM
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_gnome_gdm_disable_xdmcp,fix)
# Version: undefined
# platform = Red Hat Virtualization 4,multi_platform_fedora,multi_platform_ol,multi_platform_rhel
# reboot = false
# strategy = unknown
# complexity = low
# disruption = medium
- name: Disable XDMCP in GDM
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-86007-2
    - gnome_gdm_disable_xdmcp
    - high_severity
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - unknown_strategy
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUm9RVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      NTRaMUZCUzBObWVFRnZPVmt6Y0hSdVRVWjVZV3N3YUZaUU1qSUtWRUV5WjFKd1RXVklhVmxqUTFa
      Q1ZqTTFTVVpWZWtSUVkySjZOWGxpTkhkYWN6SXhOa1UxWlRrclZ6QnVXRms1WVZST2VreHpVMHhR
      YWxoVFNsZEljUXB3ZUdoRVEwUXdhRUp4YjBwSVMwbFdUVTVqUjFWWVpGaHRaMmRCWW1rM01tMUxl
      WEJJZVhOeU1ETk5kM2RQYW1GcU5XUjZMMHRZYkUxVlQwcFdiSHByQ25jMmExVkNUa1pLWTNSWFVY
      aDBXV3BoY21WaVlVOXVaM05UZDBobk9GWlpaM1UzTkU4d1UxZGhNMHhQT0ZWdlJGTXJRbkZGTXpG
      aWFHMVVUMmhJY0hjS1Rsa3hTVXRZVW1FMU9XVkZkMmN4TTJSaFltUXpOakZrYTNaS2FIbFBUVE5O
      U1hCb2QyWjNaMHBXT1VkNE5sRjJkemxqU0U5TVFreGtla2RoVEZrNFZ3b3JkSFpqU2xKR2FHeHhj
      R1JHSzJaUmNYTlhTVEVyTVRkMVpIQkpiVGx5VDBaWlpXNUtVV05xUmpONGVucFdSREZRTjNkREsw
      TlRUMWM0VnpRclF6Qm1Da3BoU2pObk5WZHFTVWgwVVdZNGVtRndNbWsyVHpFMWJscHViRkJqU0ho
      NFpYaHhlV0YxVVZSTEt6bHFhelJRU0c1T01ucHNhV1ZsSzBSTVIwaGtNMmNLYUZsQlkweExjVlJN
      WlVscFJFeEZPSFJaV0RGT2RHNDVSU3RTV0ZGbGRHdHJZbkZvZUU1YWRGUm9OVWRyWVhodVJXUXZX
      RTlQWVRsWVVqbDZWbkZuU2dwUmVHZHpVM3BWWjJSRFJEbDRkRlptV1VKcE1XVjJka0Z1UVVrNVRr
      MTVXa1kzV2pCWVMwaFpiR1ZzWlU5RmIzRlNOVUpJVURCVFQzbE1lRFJUTXpsUkNrVmhWbTQzVW5s
      UFZrWjNNMlpwVEN0NFNYWTNNMWx6VFRGQ2J6QnNPVFIxT1cxRU5rOVdXbWxYYXpsSE9GVlNObXRG
      ZFdWSlMySk5VRVIwVDFKT1VIZ0tSbkI1V2s1cWIzWllOblJWTVVwcVFsTjFORE56U0VNdk5reGlX
      RlpVV205RGVWQmhXbFF5TmpjNE1XZElXSFJUUjFSRVVqZE9OelJrTkM5UFIySlpaQXBwTkZjNFdU
      VkRORXhGYldZeFl6UXhiMFpLWVFvOWJVOXJPQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Disable XDMCP in GDM
      ini_file:
        path: /etc/gdm/custom.conf
        section: xdmcp
        option: Enable
        value: 'false'
        create: true
        mode: 420
      when: '"gdm" in ansible_facts.packages'


# Ensure journald is configured to compress large log files
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_journald_compress,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure journald is configured to compress large log files
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-85930-6
    - journald_compress
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUnBRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      bEZiMUF2UVc1SlMzcFdVVmhXZFU1MFozQnpiRFJxWlhkV05XOEtUSGxGV2pKSWRsbGFSRWRLVlVK
      TVUwOXJTRlIyTTBwR1IwODBWVTVIUWs0eVpFTTFVMmhtVFhwMVRFTlNVMWhrU2t4Uk1EbE9hbVpD
      UTNkWGQybGtXQXBwVlVWNGJHeHhWVE5OZFd3NU5VeENUbmxYV0U1Q1QzaEZha2RXV0M5eFUwaHFi
      V1UyUTB4eU5HMHJVbWhQUkdndk1XSjRNamxsVFhnMVJtczBUems1Q201Tk16UnhTM1ZTY1VWNldr
      eFdjMVpDTkZaclVFZERSaXRzYmtNeFUzUnpaMEoyWlZKd2VXWXJNbmxPUmpWaVdEZFRZblZYVEVS
      aVJ6TmhXbGx5YWxjS1NHUk1hR2w1VG1OUVNWcGlaa2MyTkdzd0wzcGFVbVZzUW1WRVVreDJSMnBM
      TTNObWVGQjVlblJ3UzBsbVF5dDFNSGxhZDIwd01FRnRSVFE1YmxWdGJRcHdXVFpzTkZwTkwydEJP
      VkpPVG5sd1oyTm5hVUpFYjFCalVUVTJhVk5XWkZsbVVGaHFiVXBDZDFScGJ5OUxTU3RNVDA4MGFF
      UnZRMEp1ZWxWRVJrRTBDak14Tnlzd1RYQmxMMFV6TkVOQ2JVSldTbFEzSzNFMFNtWTRjMDE1WmxS
      UWNWQTVWRWxCYTB4U1N6WnhPWGxGV2xwc1dVNVFUVkV5VkdKNE1HWXpZekVLVW5wb1VFaGxaRUl4
      YVRaMGNXZGFPVFIwZW01TlVWbFVjRzFsVmtsNU9VeEVOVXc1VFNzcmIwcDBUVFZSYmpOd09FcDBS
      bVJWZERRd2EwOXJhQ3RZUWdvMWJHZFZUekV3YVROaVpYVk5UbG93YUhWdGFFOWxPSFpvZURsRVNq
      aHljRGh5WVRkUGVGVlpaM051Ym5sek5IVktPV3hPZW5VMFlqQkxhbE53WW5aakNtdE1abmhxYUVo
      RFZVNDFTRXBKZWt4RVdWUjZlV2RTY0U5clF6VkdiMHRCV0V4R2REaDVUMGhhTlhWMlMzaFRkRk1y
      WldWa2VrOW5MMUZYVVdGbVRFSUtXbWd3VjNKRU5EbEJSMlJFUlZCb2VFRlhPR3hHTlhacWNIY3JT
      a3hhV2tsRVRIQjFhMFJ5VG1oemJUTmxkalpYUjA1eWNWcFZVV3A1YTFoR1lrNW9hd3AwY0RFeFRq
      QnVkMEZrVUcxclowazJhU3N4VHdvOVJrSmhSUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Check for duplicate Compress values in master journald configuration
      ansible.builtin.lineinfile:
        path: /etc/systemd/journald.conf
        create: false
        regexp: ^\s*Compress=
        state: absent
      check_mode: true
      changed_when: false
      register: dupes_master
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Deduplicate Compress values from journald master configuration
      ansible.builtin.lineinfile:
        path: /etc/systemd/journald.conf
        create: false
        regexp: ^\s*Compress=
        state: absent
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - dupes_master.found is defined and dupes_master.found > 1

    - name: Collect all config journald files which configure Compress
      ansible.builtin.find:
        paths: /etc/systemd/journald.conf.d
        contains: ^[\s]*Compress=.*$
        patterns: '*.conf'
      register: journald_Compress_dropin_config_files
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Deduplicate values from journald Compress dropin configuration
      ansible.builtin.lineinfile:
        path: '{{ item.path }}'
        create: false
        regexp: ^\s*Compress=
        state: absent
      loop: '{{  journald_Compress_dropin_config_files.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Insert correct line to journald Compress configuration
      ansible.builtin.lineinfile:
        path: /etc/systemd/journald.conf.d/oscap-remedy.conf
        create: true
        regexp: ^\s*Compress=
        line: Compress=yes
        state: present
        insertbefore: ^# Compress
        validate: bash -n %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Ensure journald is configured to send logs to rsyslog
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_journald_forward_to_syslog,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure journald is configured to send logs to rsyslog
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-85995-9
    - journald_forward_to_syslog
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUnFRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      OTBjMUF2TW1OMlZXUlBOM1JJY2xSc1dsUTBOalZTT0dVNFJWZ0tTVTVqWTFCaU9WUlJSSEpOUTJ4
      cFZuQmFTMUVyT0cxSVJXRmxiV3M0VkhkMFJUZFdObkJ4WW1abFoyTnRRVFZ2VlhoM1RFOXBibkIx
      VVc4eU0wdHpNZ3BMY25BNU9HTlpjMVZyZFhVNFdIVktUbFFyZWtFNWF6Sk1WM1pFZG1keU5XZEJa
      Rlp5UXpWRFJrVlhUbUl2THpSUU5uUXJOekIzV1ROVlNuaGFjSEZzQ2pkVUwyNTRaVWR4WmtKYU5I
      SlpPSEZ0VjBzd1RuaGhjQzkyTVRsdFNVSmxRVXBrYm5SSVMwRTBRMVZXZDBjMGFYa3dNbVJtVDNv
      d1IyczNaM1pVVDFRS1JURkJVSEZKUm1jeFFYRmlNeTl1Ymk5RFZETnlSamRMZFRJcmJHdGFlRWRN
      ZVVsUFNXeEhSVUpCTWk5bk0wUkJRMDByVDNkc1MxVkVaMVV5WkdKNFFncEdWMDlMVWxOTVJEUmhR
      akkyVjFSd1FtaDJMMDFWVm01dmJETTNSWGhQVUVwUVQxZElZMFUzWWtrMWNGVnhWMmRRSzBsYU9H
      TnJOVEJuYVVkUVdpc3hDakpzU1d4blZGZFNORVJFYUdZd1VYcHJRVWRKUkhjM1MyazRUaTl2UlZC
      bVRFNDFjV1IyVUZWek5GY3paVVpWVm5GM1YyRkZha00wT1U5SVRIcFFla1VLV2sxV1dGRklSMGt5
      ZGtsUWJIZHlUbVZqVDIxeU5HWTVNak5SYkVkUmVVeEJZek5xWVVsVVQzbzNhVzlCVmtaMVRFbElV
      bG8yVnpaSmF6aFZURTFQVEFwRWNIUjRhRlZzY0ZOV2IyczFNVGRFUkRVeGFGRkVjakJIY0hORmR6
      ZGtjV1Z2Vm1zd1ZqbHVjbWR1Y3poUGNUVjJkRUp4Tm1JMmRFVlZWSFZaV1VKbENrWklaV2x3VHpC
      NksyZ3dWMWt6U2tFeVFXbHJSVXMxS3psUmFEaG5UMEZ2VkhkWlJuZzRkRUZoWlhkU1N6TkxlbUUz
      YldOM2JtSnJlbTlIVkVSdVNYSUtSR1F4Y0U5RlMxWkZiMjlYTkRseGMwUmtRMjVKTXpsNFNHOWFO
      bTB6VEVObVYxbElkRnB0YWk5NlpUUkdTazFPSzNjdmVtWkZSRWxxZGxSMmFHVjJNd3BoVVdadWNY
      UmlTVU5wWjJ0elpXaHdWbFJ3U3dvOWEzY3djUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Check for duplicate ForwardToSyslog values in master journald configuration
      ansible.builtin.lineinfile:
        path: /etc/systemd/journald.conf
        create: false
        regexp: ^\s*ForwardToSyslog=
        state: absent
      check_mode: true
      changed_when: false
      register: dupes_master
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Deduplicate ForwardToSyslog values from journald master configuration
      ansible.builtin.lineinfile:
        path: /etc/systemd/journald.conf
        create: false
        regexp: ^\s*ForwardToSyslog=
        state: absent
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - dupes_master.found is defined and dupes_master.found > 1

    - name: Collect all config journald files which configure ForwardToSyslog
      ansible.builtin.find:
        paths: /etc/systemd/journald.conf.d
        contains: ^[\s]*ForwardToSyslog=.*$
        patterns: '*.conf'
      register: journald_ForwardToSyslog_dropin_config_files
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Deduplicate values from journald ForwardToSyslog dropin configuration
      ansible.builtin.lineinfile:
        path: '{{ item.path }}'
        create: false
        regexp: ^\s*ForwardToSyslog=
        state: absent
      loop: '{{  journald_ForwardToSyslog_dropin_config_files.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Insert correct line to journald ForwardToSyslog configuration
      ansible.builtin.lineinfile:
        path: /etc/systemd/journald.conf.d/oscap-remedy.conf
        create: true
        regexp: ^\s*ForwardToSyslog=
        line: ForwardToSyslog=yes
        state: present
        insertbefore: ^# ForwardToSyslog
        validate: bash -n %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Ensure journald is configured to write log files to persistent disk
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_journald_storage,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure journald is configured to write log files to persistent disk
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-86045-2
    - journald_storage
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUlNRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      cHZkMUF2TTFKV1dTOUxWamRvY0UweGFsQnRUSEV5TDNsSFpqZ0taelpWUzJSNlNtWlFRa1ZSTm5R
      dlNHWnlZVEUzU205SlZYa3ZXRmhoWTB4Rk1FWnlaVzFHWWxaSk0xWTJMMGRJVG5ORlZWYzVhM1pV
      Y1hwcWIyOXhOd3BRWlZScFRtcHFZazgxUWtSelFWTlVjWGMwVldKdWJYa3JSM0ZOUjBWaU1UVTBR
      MDA0VEVaR2EySjJaVWMzU2t3dk1ERkJLMDlwUXpKa2IyWnJZaTgyQ25WUE1tSjVjaXM1U2tWeFJ6
      TlVUbFYwVm1SdFdFVjZNQzkzZWpsa1F6SjFlRGRIUVZCTWJuQjBNMGxZZVhGMlNETjNWSEpIWkRO
      dmJVeGpRVVZUT1VRS1EwMHhTMFJzYjFwVE1GaElXVlZwWm05WFFsRkNObFpHU1hjNVJHUlpZVU5F
      Y0M5SVUyazNPQzlYU25Ca01FVkpaV013VXpCMldUWlhUVXQyWlhaSWRnb3ZUa1pvZFhZMk5YUk5P
      R3hyYTI1dFVYbzFUMmxHSzFOM1drODVValJSTldOR2RYcHpjbEZMV1ZjeWJYVnJNMHBEYVhveWRH
      RTFlRTV1U2l0YVFYSlZDbWgwZG5ZMFVXNXBiVnBxV1U5S2R5dHJRbW8wVjJsVlltTm9lR1ZvYTJk
      bmFWQXdNV053V2pkdVJGWkxURzkwYnpkUlZFOTVibEJPUTFsUUt5ODNTa2NLYzJKS1ZGSmxlV1JO
      Y1hWUmJrcEhSRlIxUzFSV1ZVMVNUWFl4YldWM2RsRTFkbVZTWnpGSmFUaFpVVTE0TlRWYVNVMURN
      akJ1TVhSWVZHTTJUbWd2TWdvMWJGbEZhMHgzYzNwWVZVUmpMMEpLVmtOalREZFlNVmhKVmxBMWVF
      TXJiVUZ0VkRFNVNXazRVR05hU25WSVMydHdhRGR5V25SUFNrbDNXa0ZhTWt4WkNtUjRVVkIzV1Zs
      dFRqRlFjVGhMWjBnNWVsQjZXRlZyU1U5Sk9XNDVVVFJ2U210TFVFSlRVR1JrTjI4NVMxUkxRa2xD
      VFdSdVpYQTBRVzVZU2pSUlpWUUtWREI0VVRsTWNGcHRRM05LWml0b1ZWRXlkV0pEZFhsQlpqUm9P
      WFZ6WkZjd2RWQTNURm92TlUxMFZFazNSRFoxU21GNFFXMUVjRE5NYlZSUVJHVTJXQXBxWkM5RVUw
      aHJPWGxHVEdwaVJFaGlhV1pPVHdvOVpXWnNVQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Check for duplicate Storage values in master journald configuration
      ansible.builtin.lineinfile:
        path: /etc/systemd/journald.conf
        create: false
        regexp: ^\s*Storage=
        state: absent
      check_mode: true
      changed_when: false
      register: dupes_master
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Deduplicate Storage values from journald master configuration
      ansible.builtin.lineinfile:
        path: /etc/systemd/journald.conf
        create: false
        regexp: ^\s*Storage=
        state: absent
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - dupes_master.found is defined and dupes_master.found > 1

    - name: Collect all config journald files which configure Storage
      ansible.builtin.find:
        paths: /etc/systemd/journald.conf.d
        contains: ^[\s]*Storage=.*$
        patterns: '*.conf'
      register: journald_Storage_dropin_config_files
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Deduplicate values from journald Storage dropin configuration
      ansible.builtin.lineinfile:
        path: '{{ item.path }}'
        create: false
        regexp: ^\s*Storage=
        state: absent
      loop: '{{  journald_Storage_dropin_config_files.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Insert correct line to journald Storage configuration
      ansible.builtin.lineinfile:
        path: /etc/systemd/journald.conf.d/oscap-remedy.conf
        create: true
        regexp: ^\s*Storage=
        line: Storage=persistent
        state: present
        insertbefore: ^# Storage
        validate: bash -n %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Disable Mounting of cramfs
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_kernel_module_cramfs_disabled,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_rhv,multi_platform_ubuntu,multi_platform_sle
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Disable Mounting of cramfs
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-81031-7
    - DISA-STIG-RHEL-08-040025
    - NIST-800-171-3.4.6
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - disable_strategy
    - kernel_module_cramfs_disabled
    - low_complexity
    - low_severity
    - medium_disruption
    - reboot_required
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUnFRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rp
      OUpTVkZCU1ZWdVZHTlNUV05zUldoUE16azBOM1JFU0ROR1VFNEtVa05vVlRCblFsZDNPVkE1V0ZS
      bVp6TlFZMDFFVmpWVWQybE9jM2w1TDNGcFJIVnFaMncxWjJFeVJYQnlObkpGYnlzeWFFNUNSSEIz
      ZW1FMFJWSXJiUW93TTIxd056SlZUV3B4Y25WWU1FSlJlRGRHV25kaWIyUk9keTltVWtkbFNFbENT
      RWhMY25BNU1sWmlURmhpTUdkVVRITk9aMmhZWm5Kb1ptTkZaMU5sQ25SeFdtSkJVbkI1WkdRNFRI
      QlZUakJKTm5aUVp6ZFFjV0puV2xFeWIyWkJPVVk0WlRkdlZHWkhaMmRTYUdsdVZYVkRUbmhrYkdO
      YU4ybHFNbEowSzBrS0szSldkbkpsTURNMVRrMDJaazh4ZVVkSlEyZEZiVTVqVUZsUVYwTnZPV3M1
      TWxnNVNYZEJNRmhYYXpac2VtTjNSMDFTVjB4VldHUTNjRU5ZWkV4T1l3cDBVVlpJTURRMmQwTmhX
      bEZDTVRaTlltNW5Na0pJWjNkbU5GcG5jalJrZVdwSmFGb3piSEp4Y2xWWGRYZHdPRE5GUkhsSFdE
      UmtPV3AxTjJSVWJEUllDazByZEVWV0wzcGFXRzlRUms1cFJYSnpiRzFKUkRoSmR6SmtSa1pKZHk5
      WGNIRXlVREZzTm5wU0sxRlpXVFEwWkZabVkxRTBSRGxNTVd4NVJVTm5hbEFLVVU0eFkzRXdObXRK
      WWxRdldDdHhlRlpYY1c0eWEyWktRemxsTlRSNFJuUk5jalZXU0hOTVlYcFhSalJ4YzNrd1dITjZX
      R1pCVkVWMFRUaEVZelZhUkFwb016WkJPV1U0YnpsalFXSm1jbFkyV0ZaeU15OXhUVTVsWTJVM01X
      eFlVRXc0TDJOR09HZE5NM1p0ZDFJM2J6QnBZVkpSZVhWTWFuZzNhREpqTkV4SUNtVlFNMmRhWVVw
      NWMxbFNaRTlyUm01T1JYTlRWM1o0UWxwMlUzWlBObmswY25KT2JqYzJkMUo2V21FNE5GcDJlakJY
      U25Gb2NYSjRhM0JhTDJGTVFsY0tRVEo1UjNwS1UyNDJRVWRoUVdoeFIyczVWVEJWTm5WbWRqWlFU
      bEozZEdGVVNteG9hSEJOU25kTWQwSnFZazR3VUZKbGFqRllWRTFxWlVvdlRFaFdlUXBsU0UxWkww
      TTFSRE01UVdzNWJGaGlOekkzY1FvOWRrVjNMd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Ensure kernel module 'cramfs' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/cramfs.conf
        regexp: install\s+cramfs
        line: install cramfs /bin/false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Ensure kernel module 'cramfs' is blacklisted
      lineinfile:
        create: true
        dest: /etc/modprobe.d/cramfs.conf
        regexp: ^blacklist cramfs$
        line: blacklist cramfs
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Add nodev Option to /dev/shm
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_mount_option_dev_shm_nodev,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = configure
# complexity = low
# disruption = high
- name: Add nodev Option to /dev/shm
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-80837-8
    - DISA-STIG-RHEL-08-040120
    - NIST-800-53-AC-6
    - NIST-800-53-AC-6(1)
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-MP-7
    - configure_strategy
    - high_disruption
    - low_complexity
    - medium_severity
    - mount_option_dev_shm_nodev
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUnJRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rs
      TXJORkF2TTBocFIzTTJNMlF2YkU5V1pHbG9ka2ROZWpBeFNuWUtSVUppZWxCRVl6YzBZM2hwTW0x
      bU1WQnZiVWRIVnpOaFJHWlVWblZTTWt4V1lqRkZLM0JOYW5sWlREWTJTMjlvYkdRd1dGSnNOMDlL
      Tm0xU1EyTmpUd3BvZG10UmNVZEVWbXh0T1hGbVVrdEpMMXB2YkVGVmNVMHdVMWwyTm1GaVUxbFNi
      Mlp6TW1kdWRWZzVTa2xsWjFkS1dXVlVlRXM1YVdaNFEzaFdaakl6Q25VNE1sZGlWalozWm5JME9I
      UmlOMUpzYzB4WFdreDZhbXBOUVZCeVNrTjFXbXhuWWxaSVlscGlNME5EWjJFMk1qVlRNMk5sVkVG
      TU4yZGlUMmszWjBNS1NYcEZURlZEVVM4eGVXZHlaRWRPY1dsSWRHaEJaSGxLUjJGcmNITkphbXBT
      UjNNM1IzWjBNMlJDYXk5MlRYTjFiVlJsTDNoRWRXRnBjRWg0TDBSTmNRcFlORXc1TTFGRFVuRk9U
      WHBxUzB0ME9VTnVTRmx5V1ZGcFVTdGphWFpVVkRjeVdFaHVVbmhoU1c0ckszcFNTbTUwWldRclJt
      MW5aMVZQY3l0MWIwVXdDbUpwTjNSbVV6RnJiVzVNVEU5ak0wVXdkRlI0TkVoeFZYQmpSbWxFY1Rs
      V0szaFhOVVl6VGtsblpsWm1VM1pITm0xSWIxSTNSM2xWV0daWFoxb3llVmNLUWsxYU5sQkZNRkJ3
      UlRWQlJWUktiamRxZVZCU1lsQkJVbGQ0YVhsR2FWUXZaMlpxYkZCWFFVRnFXRUYzUkcxSWQwaGpi
      MnMyUTBRd1dscG9RbEpwYUFwb05GSmxUM1oyTVhaeGRsVXdWV1pwUjFsWlFsbDBOVnBCZG1KUlF5
      dFlWRXhMSzA5Q1QybzNPV3BhVWtsaE5FeEVaVXRFZUZSV1RpdGpMMkU0TkVsWENuRkNSMUV5ZUVK
      WlZuaFBiWE5zSzJFd1RXaEVkRXhxY1hWYU1XVldSbFZwU3pSMU0yMDRUU3MzVVdKTFlsQnlTbFEw
      VDFCRFR5dEZWRU4xY0ZOMlRXRUtVRzlRWTBKWFNFbFNRbTlsTm5sbVN5ODRRWGRTS3k5c1dFUTJh
      RWgwVTB4VGNWZFJlRmhYYlhkV2FsVkNhV3A0TWpsdVRHdHlXRzVoVTJkTFpXRXJWQXB5TVZwaFYx
      SXpWSFkxTUdGWGRVTkJMMnQyVVFvOUszTjRVQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: 'Add nodev Option to /dev/shm: Check information associated to mountpoint'
      command: findmnt  '/dev/shm'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: 'Add nodev Option to /dev/shm: Create mount_info dictionary variable'
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)

    - name: 'Add nodev Option to /dev/shm: If /dev/shm not mounted, craft mount_info manually'
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        -   - target
            - source
            - fstype
            - options
        -   - /dev/shm
            - tmpfs
            - tmpfs
            - defaults
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - ("" | length == 0)
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length == 0)

    - name: 'Add nodev Option to /dev/shm: Make sure nodev option is part of the to /dev/shm options'
      set_fact:
        mount_info: '{{ mount_info | combine( {''options'':''''~mount_info.options~'',nodev'' }) }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - mount_info is defined and "nodev" not in mount_info.options

    - name: 'Add nodev Option to /dev/shm: Ensure /dev/shm is mounted with nodev option'
      mount:
        path: /dev/shm
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }}'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - mount_info is defined
        - (device_name.stdout is defined and (device_name.stdout | length > 0)) or ("" | length == 0)


# Add noexec Option to /dev/shm
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_mount_option_dev_shm_noexec,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = configure
# complexity = low
# disruption = high
- name: Add noexec Option to /dev/shm
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-80838-6
    - DISA-STIG-RHEL-08-040122
    - NIST-800-53-AC-6
    - NIST-800-53-AC-6(1)
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-MP-7
    - configure_strategy
    - high_disruption
    - low_complexity
    - medium_severity
    - mount_option_dev_shm_noexec
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUnNRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      WkdORkF2YWtkbGRFbERWbGgwWXk5MFRqUjNNMUJRV1RGRVRtMEtiWHBCUTAweGNYQkRUMnRtYVVs
      aFRYUXdaelpSUmpsSk1HZElWRkpTY1ZCWWN6STFLM040WjJ3MmRWVXpXVFE0ZGxNNWVXSTBhMmsw
      Um14RU1rNDBRZ3BWZEhKckwwaEdUVVpoYUhWVk0zUndkM1ZEZDFBMU5UQm9VVkJWTkRGT1FubERi
      MGwwVm05WlNVWnJZMGR3V1RoelpXWnRNMVkzT1RkcVUwdEJZMFZaQ2pSd09IaFNVbkJuV21kd00y
      dDRRM0pNWW5WcVVYQkxUMWx4VURCTGJTdFphWGN4ZFZObWJGTmxhakJqYkVsM1QxUm1WREl5VFRG
      bVdqTTJWbnBKVFRrS05uVllZek5NU1RGalFqbGtPSEJ0WkZkbU1YQndXWFZ1UTNjd01WaHZORWht
      VTFKU2FXSTVZV2RUT0RCSlVYWjRlakJEUTFKaWRGWkZPVEE0TldwSVNncE9jVVpGZUdVNWRWY3di
      eXRDZW5CQ2JqTm1lREJCZFV4SGFuaE9RbU5XWld4M1dtZExlV3g0SzJFMmNYQkVaa0ZQVERKT1VD
      OXFVSEJ4T1VsVVJXUnRDbWhFU1hkSGRWcFFkM0Z4TlVoVmJrZFhTemhpVW5jNVFqTlJhVzFKY20x
      NFMwUk9lbFJNVEdWR00xTXlORVF6TUZNd2NVUXlPWElyWjNaUloyWjNlRUVLTTJKVlRrbGpiMUpx
      WlVFMGFIa3ZRMkZLY20xSWJXVlFOMk5aZFhCWksyOHZWWGh4WW0xVmFXMUZhMk5uYVhGallXMTJO
      WEphZHpCb1pYYzRZbU5FS3dwMlNFbDRlakZJWkN0aFZEQnJaM2xtUjFSU1dVVkdNMVEwTVhkclVt
      aFJRMGxqYlRKYU1IUmxaVE15Y2tJd0szSmlRVkpTYWtNNVNraHdiM05UZGxJd0NrUmhWbTFyZVda
      MVlrTlZlVXh5VFhoVE4ydHBPSFE0TVV4eVFXVm9UbU5JTm5CVksyMUNXQzl2TjNOUFFYUjNRVlpD
      UjFOaFZVMDFPRkpSTDJ0eFFUa0taMGhEVjFWeU5YcExNRlJIYWtwcEt6VkhURWhLYzBSa01tSkxO
      R3RSYmtaSk0xRlhOelZGZGtONmRHeEtOV1pwWmxKdWNWTXpVazVzVm1oNk5uUldlZ3BMUlROM00x
      TXlhVEl5U1hCRFFYZzRaU3M1V2dvOWVrRlRSd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: 'Add noexec Option to /dev/shm: Check information associated to mountpoint'
      command: findmnt  '/dev/shm'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: 'Add noexec Option to /dev/shm: Create mount_info dictionary variable'
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)

    - name: 'Add noexec Option to /dev/shm: If /dev/shm not mounted, craft mount_info manually'
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        -   - target
            - source
            - fstype
            - options
        -   - /dev/shm
            - tmpfs
            - tmpfs
            - defaults
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - ("" | length == 0)
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length == 0)

    - name: 'Add noexec Option to /dev/shm: Make sure noexec option is part of the to /dev/shm options'
      set_fact:
        mount_info: '{{ mount_info | combine( {''options'':''''~mount_info.options~'',noexec'' }) }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - mount_info is defined and "noexec" not in mount_info.options

    - name: 'Add noexec Option to /dev/shm: Ensure /dev/shm is mounted with noexec option'
      mount:
        path: /dev/shm
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }}'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - mount_info is defined
        - (device_name.stdout is defined and (device_name.stdout | length > 0)) or ("" | length == 0)


# Add nosuid Option to /dev/shm
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_mount_option_dev_shm_nosuid,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = configure
# complexity = low
# disruption = high
- name: Add nosuid Option to /dev/shm
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-80839-4
    - DISA-STIG-RHEL-08-040121
    - NIST-800-53-AC-6
    - NIST-800-53-AC-6(1)
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-MP-7
    - configure_strategy
    - high_disruption
    - low_complexity
    - medium_severity
    - mount_option_dev_shm_nosuid
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUnNRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      aFBORkZCUzBJcldHMVJTRVZUUlVwWGJqTTNWMlZuU21aU1FWa0tTMHh6YUZSTE9ERXJRV2h0UVhG
      RFVrTlNUVnBVY0V4bUwxUjZORXMwU1hndk1uaGxjVGhzVVZSSlNsQlJLMmgzZEc5b1NFWnhlR0pp
      YkZWVlVVaENhUXBDV1hwak5ISkVTM1JhVTJNNE9XWnZha2hvVTA5WU1rUnpUVFpLVkZkck1UaFRO
      MWRKU0hoVFMwcFVUSGR3S3pGT2VEUlBNRnBrWVVwQ1ZXMXJjVVozQ25GblZrYzJRV280WW1KSGJq
      QkljbVZhUTBwdkt6UmpVRFZUWjBrME5GazNWVGswYVZaTWQzQlBjMXBPYW1vd1oycFFURkJNY2xO
      QlFXTkpjRXhKVGk4S1ZqWXhMM296V21ONk56UnNZME42TkRaek9FUnFOREl6VFUxM2NGbGpNR28x
      YjI5NlVteHRXRVI0Y0hRNGMxRlpOamt3UlRGRVdsVm9OMjFtTlhSeFNnbzFWVk5STTBneFlXWkJV
      VGhyZVRJelRVOXBZV2N6WXpsWUsyWmxNblJ4YURCWmQzbFRVVTVHZFVZeGNtUjBkVkZJY2xwdFRY
      SkliWHB0VnpoUUszQmhDbFpSWVd4d05TOVRiVWt4Wm1rek1TOVRiMWh4TUU5d1pIQmFaMHc1YnpK
      T2VrVldOMDkzUmxOVFEzbG1UbVUzTUdaSFRWQnRkWGcwVURKd05GUmtlbVFLYjJ0cU5tdHhhakpL
      YVhkV1EzbDBhV2wzTm1sd09HNUNlVkZZVFZOS1VtRnpWbW8wV1dScVEwWkdPR2xETWxOdlFYcHRi
      SFF3YW5KNGMwRkNVbE1yZUFwd09YZzRielJsVXpNME5HSnhSMVkzTld4MmFFcFRSV2RyTHk5UmRY
      TlpZV2RvTm5kcFp6azVRMU40Y1RKa2RrTnVNSE41VVZneGFEbFJaelJuYlRKRkNqUmhlR2N5UVd4
      QlMwTTJSVnBXU0VwbGJGUXpVRkZ6WTNwTWExWXJVRzFxU25KVFJGWXdaSEJtWkhGV1ZIcG1TVmR5
      ZUdoNVNqUXlVVWhCUjBONE1sWUtRMkUxU0RSYU5VcG5UemhvZDFOT2MxbEJjWEZQY0VKU01sVmpO
      VFZtVXpGa1dHOHhVVVp2T1RSRFExcFVTalZCTm1RelJFdzVka2hSUWxsc1NuSkhPQXBVU1ZKalEx
      ZDZPV3BMV0hsb2RHVXpkRXhTWXdvOVp6UnlTd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: 'Add nosuid Option to /dev/shm: Check information associated to mountpoint'
      command: findmnt  '/dev/shm'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: 'Add nosuid Option to /dev/shm: Create mount_info dictionary variable'
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)

    - name: 'Add nosuid Option to /dev/shm: If /dev/shm not mounted, craft mount_info manually'
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        -   - target
            - source
            - fstype
            - options
        -   - /dev/shm
            - tmpfs
            - tmpfs
            - defaults
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - ("" | length == 0)
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length == 0)

    - name: 'Add nosuid Option to /dev/shm: Make sure nosuid option is part of the to /dev/shm options'
      set_fact:
        mount_info: '{{ mount_info | combine( {''options'':''''~mount_info.options~'',nosuid'' }) }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - mount_info is defined and "nosuid" not in mount_info.options

    - name: 'Add nosuid Option to /dev/shm: Ensure /dev/shm is mounted with nosuid option'
      mount:
        path: /dev/shm
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }}'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - mount_info is defined
        - (device_name.stdout is defined and (device_name.stdout | length > 0)) or ("" | length == 0)


# Prevent Login to Accounts With Empty Password
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_no_empty_passwords,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_rhv,multi_platform_ubuntu
# reboot = false
# strategy = configure
# complexity = low
# disruption = medium
- name: Prevent Login to Accounts With Empty Password
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-80841-0
    - CJIS-5.5.2
    - DISA-STIG-RHEL-08-020331
    - DISA-STIG-RHEL-08-020332
    - NIST-800-171-3.1.1
    - NIST-800-171-3.1.5
    - NIST-800-53-CM-6(a)
    - NIST-800-53-IA-5(1)(a)
    - NIST-800-53-IA-5(c)
    - PCI-DSS-Req-8.2.3
    - PCI-DSSv4-8.3.1
    - configure_strategy
    - high_severity
    - low_complexity
    - medium_disruption
    - no_empty_passwords
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUjBRVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      WnpRVkF2TVZGVVV6VnFiR1Z1TTBaVWJFODVSRlZrUW1vMUwwMEthMHRFVFdWMVZGQkdXRWg0U0cx
      Rll6UTVUMUI2WVVNMloybDNVbGxuTmpWemNuTTFTV3RxZHpkSVFqZEtiVmN5TTBGT1pFMXpWalpM
      WW14NlpXWklPUXBtVW5odldsTmxZMlZVZG1sTE56Y3dRaXQyZGtVd2NEVTRkMDF0VEZJMGQwdHRa
      a1ZSYWpGSk0ybERiMkpIUlV0V2NVSXJkVGhtY1RrNWNFVnpWMVo2Q25Od1VHSnpWVVZGU2pNNE9V
      MVBLMU5hZFZoaGFFSnBNa3RSZEVsRVFUWTFPR05rY0cwME4yeEhOa3BDVVd4SFdIaERSRXR3ZVVO
      UlVtaEVZMUkyUzBrS2VuQkNlWEJ5WkhoV2VVRnpOVWhyUkZNdlJtVkxVVUUwYkZSakwwTmxXRmRQ
      WVdaV1ZFOVFkalZqZEhSVUt6VnZXbVZVVFcwclkxVTJRbm80VTFSSWVncFJXV1YxUlUwNVdHWTFS
      MUZwWW01cVJIUkpOemgxVkRKMGR5dHJXSGxHUlhkWk0za3hjMjAzVTFoVFdXYzJVM0J4T1ZvdmIy
      eG9SM1YwUlRsUFNsUkJDamR4ZFZJdlprWjJlVVEwWlVoelNWWnFkMVpsVmpKM1JVdHlPR281WTJ4
      d09YcHJXSEk1ZEM4NWFVRmhlVlowYW5Wbk9UaE5UbVI1UlZwaVExbEdabFlLT1dSeVMwcFdRbTlZ
      TmpKdmFsQkJTRGxzYlZveVJYTjZVR015Y0RoTmFIUjBLMVJzU0dad1FVWk1UV3RWUWxVMlNuQjZi
      M2hpVEdSV2JYbzRORVZFV0FwRGVtSm5TM05LZVdSdVptUnJRblJZT0NzMVZDdFlOV2hGU1dkTWJT
      dFJjekV5UWpOSWVISjVOVms1T0hWRVVGZHZiVVpVUTFWRlEzbGtjVEJuU0c4eUNqTmFVMmx0TVhs
      UGRqWktZamxWZGtsQ1JUVk1ZWFJxVG5oV2NsaHZXbG80WTFNelN5OHlRbVpZVG5wbldIQlJla281
      U1RJemFFUkNMME41VDNZeWJYSUtOVUZUZDNJMU5FdFRlVXhGTldaTk9WRmFValJtWmtVMlkxQkRW
      bFJUZDFoaVFYbHRiV0phYWxWTVFWUXlhM0UwZWl0emRrczFjbkZyV0dReU5HTjJSZ3AyZEVkck5X
      dDZSRmMwWm10clQydG5jSEJKZEFvOVYyTldXZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Prevent Login to Accounts With Empty Password - Check if system relies on authselect
      ansible.builtin.stat:
        path: /usr/bin/authselect
      register: result_authselect_present
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Prevent Login to Accounts With Empty Password - Remediate using authselect
      block:

        - name: Prevent Login to Accounts With Empty Password - Check integrity of authselect current profile
          ansible.builtin.command:
            cmd: authselect check
          register: result_authselect_check_cmd
          changed_when: false
          failed_when: false

        - name: Prevent Login to Accounts With Empty Password - Informative message based on the authselect integrity check result
          ansible.builtin.assert:
            that:
              - result_authselect_check_cmd.rc == 0
            fail_msg:
              - authselect integrity check failed. Remediation aborted!
              - This remediation could not be applied because an authselect profile was not selected or the selected profile is not intact.
              - It is not recommended to manually edit the PAM files when authselect tool is available.
              - In cases where the default authselect profile does not cover a specific demand, a custom authselect profile is recommended.
            success_msg:
              - authselect integrity check passed

        - name: Prevent Login to Accounts With Empty Password - Get authselect current features
          ansible.builtin.shell:
            cmd: authselect current | tail -n+3 | awk '{ print $2 }'
          register: result_authselect_features
          changed_when: false
          when:
            - result_authselect_check_cmd is success

        - name: Prevent Login to Accounts With Empty Password - Ensure "without-nullok" feature is enabled using authselect tool
          ansible.builtin.command:
            cmd: authselect enable-feature without-nullok
          register: result_authselect_enable_feature_cmd
          when:
            - result_authselect_check_cmd is success
            - result_authselect_features.stdout is not search("without-nullok")

        - name: Prevent Login to Accounts With Empty Password - Ensure authselect changes are applied
          ansible.builtin.command:
            cmd: authselect apply-changes -b
          when:
            - result_authselect_enable_feature_cmd is not skipped
            - result_authselect_enable_feature_cmd is success
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - result_authselect_present.stat.exists

    - name: Prevent Login to Accounts With Empty Password - Remediate directly editing PAM files
      ansible.builtin.replace:
        dest: '{{ item }}'
        regexp: nullok
      loop:
        - /etc/pam.d/system-auth
        - /etc/pam.d/password-auth
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - not result_authselect_present.stat.exists


# Install AIDE
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_package_aide_installed,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = enable
# complexity = low
# disruption = low
- name: Install AIDE
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-80844-4
    - CJIS-5.10.1.3
    - DISA-STIG-RHEL-08-010359
    - NIST-800-53-CM-6(a)
    - PCI-DSS-Req-11.5
    - PCI-DSSv4-11.5.2
    - enable_strategy
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - package_aide_installed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUjJRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      aG5ORkF2TVhjelFUVnBiV0ptTjFsc1RIbHVWa3dyZGl0NmRWSUtXR0ZMVUd0V1ZXcEZRVlZUY1VW
      clltNUJXVGRwUldsclRDdEpObVl5TDFGRGFVdHJWVE16Vm0xUVZGUnRTSEpJYTNST2N6aGhTV3My
      VWpoaFYzQm9PUXBPV2taM1ZrdGxXVmxIZDJac2VFdHdNWFJ0TnpOdlQzVlRlVVF2TnpWV1NUUkhV
      MnBYWjNNMFdVSXZSR1pVTjA1UFdXdEJSMVptUTAxek5FZFNZV3hYQ2xnM1FVWXZTWE5OZEZSa2Rt
      NVlSbWczWVU1RU5qbDZSakJsUlU1Vk9YUkdiR1Z5TVVKRE5UWkZjbWRwUkhCNGVuWk9WbXBXVEhs
      UlZWTlhja1FyVEVRS1JGaFpPRXcxUm1jMU1XeDVSMkpSVFd4bU9EWTNLemsxWVU1NGVsWXlaQzh5
      ZG14Wk5FOWtTV0ZDVFdGQ1MyTXJZbGxZVWxBd05XZHhVWEJ1VTBoSFNBcENUakIzV2pSWk1uUmtl
      bkJHWVM5NlZFcE1VWGxxYmk5b1J5dGpTbkpaVTB4VGFIcG5aelJVYlU1SE9ITnVaVlZIZG1KNlVt
      bE9jVkl4TTFBNGEzRjZDbVZaTTAxaVpuTnJMM1UzWVZZMGFtZHhjM0E1UjFZM2FIbDVUamg2VTAx
      MWJTOVFjV0ZLVEZsM1ZFZEhNMmxEVjBSUE5qQktXSGRrTkhGS1MxRXZWRk1LVEhsVVVrcFFhV2x1
      ZUc1WVNIVkdiemRLVFV4RmJ6ZHhlbGsyWW5WcWQxSkdabXhXWVZOS1JrRnhSekE0Ym5Ock5EaDNi
      MGN5VGpKbU0xTjZkazl2UXdwWVFVTktUR3B6WlRoWVNWbzBjRTQxY1ZobGNtUnpha1YzVGtseGJF
      SnNNM1JtVlhkMGNYbFVXbVpETWpWSk16UnNXbmMwVWk4M1ZWSkxNbUZRVWpSSENqUk1abkZzYW1r
      eFZsTkhNbXB4YldaQlpGSm9abFJ6YkhseGN5OWFLMWxRV20xWmRHWkNjM0JqTjFGMWVsZHdUR3c1
      YW5kM2FFUnZRa1JKV0RCMFRHc0tNVTlyU0hWYWVYSkhPVnBQVkdjM2VFSmtkVkI2ZWxZNGRWZEJU
      blV2Um5oWFJ6UTRUWGhNWkhKWU4yaFpOM015YmtjMUwwUmhOR3BIVmtKMk5sUjZiZ3BXY1daTVVr
      aFpWVzh6YldkQ0t6RTBlbXg1UWdvOU4yVnZUZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Ensure aide is installed
      package:
        name: aide
        state: present
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Uninstall avahi Server Package
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_package_avahi_removed,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = disable
# complexity = low
# disruption = low
- name: Uninstall avahi Server Package
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-86512-1
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - disable_strategy
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - package_avahi_removed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUjNRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rs
      cE5RVkF2UVRsTFRFVlRSRkYyVkRCVVRqWlZMM1ZxVjAxNE5ISUtRa1ZYTW1jd1EzSTNkelpOVDJ0
      MVducENXVTlOUjBrdmFYcFJUMlZqU1dack9FTTVjSGRHUXpoeE4zbDJXbFJSVTJkSlEyMUZlR052
      S3poRU1HVnNWUXBEUTA5SVdUbDNabUo1TjNVdloxWkRVR1ZPYzBoMGQzQjNZbWhFYTFBMWN6QnlS
      QzlET1dWaUszVmphRTlWYTA5TFJ6bG9ORVJwYUU5WlJGSXJla1pXQ2pCRGExVTBSMHBwV0d3MmNX
      UTBVVnBFZWs5bk0yMVBaSEZqT0dwNmRWVklhREZyTHpSYUsxZHZMMjlzT0V4UE4xUlFVa3AzUTJG
      M1VYVktWRXh1YUVJS09HVlBOamRzUkVGcU1YSnhkRWx0VG14TGIwNUVXR0l2TkdKSWNFUjFUVWwy
      VUZvdk9ETjNNMmh2U1cwMVNuUnFSV3hGU0c5SlFrdGpjbTV2ZVcxd1F3cDJVRFozY0VwbVYzWXpT
      R2N5U21WMFNEUktkRzVLVW5Sb1RHazNVR1JFVWxoM2QxQkRlVkJwV0hkMFpqZ3dhSFEwVkVsSE1H
      WkVOakZNU25OUVduSjNDa0YyYlZwWFdWaFdiak54V2s5NVRFMXhTR0o2U20xaFQwOWpZekEzUzJz
      emMwbDVTMlZJZGpFNFFVRlFkVE5TUjJ4alptMTRTMVV6TlRSb1NEVnpPVk1LTUdaUk0yUnFlRGcy
      VWxWUGNtRmpUVTgxTUZsWmNFZHFXRFZhWTFsaFVERktORU4yVlVOTGNHOXVNbVYxUmpnMWVHdFlS
      VFI2VGtONVZFNUtXRGt3TXdwdE1UZzVZbFV4VVdVMVoxbFNSVkJJWmpGbGMwSlNhbXAxU2tGcFYw
      RjRlVVpTWXpkVlUxQkNNbk55ZEdwMk5VNXBOVkpFUkhKWGFtaFdVR3QyWlZwaUNrZExWbFU1Y0RJ
      eFlrSjVkR050VVZRM2NIZHFWMFp4ZEc1d05rRmhLM3BHUm1Vek1tZEZiV0Z2UlhjNFVGSTVkR0ky
      WlRkYWIycENSM3BFZDNwSlIyOEtRV1U1WWxFM1lVNVRURzVsWWxWVmNYVlhkM2xsUlVSVFYxaFhS
      VVJETUZGbFduUlFXRFpFU1c1dGIzWm5lSFpSUXpRMFJVc3ZaVWRKYm5Bd1JHZGhPUXAzUW0xV1Fr
      WnFUMWhKTlZaRmVEUllXa3NyZGdvOU16RlZSd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Ensure avahi is removed
      package:
        name: avahi
        state: absent


# Uninstall CUPS Package
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_package_cups_removed,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = disable
# complexity = low
# disruption = low
- name: Uninstall CUPS Package
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-86299-5
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - package_cups_removed
    - unknown_severity
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUjNRVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      a3pPRkZCU1ZsRFkwMUdlRkJ3YTJVek9IRmtXR0ppWld0UlIwOEtRMVJSZVdKMFdtTmpUREI1UkRV
      M1JXMTZjVVJNYTNaalRYVkNRekZCZVdKM2FUaFlRbnAxT0ZveVEwZHBOSEJXYW1OdmFWTjBRelIw
      UldwWFFuSjJPQXBDUWpoaWIyaEZORzB5TjFsU2RtaE9SalpKWkhOTUszZFBjV0Y0WjNaRlVYQm1Z
      MlI1U2l0dFFYQmpSV2h3Y0ZWUFNreFlPRk56YVd0bk0zTjFTSGw0Q2pOeFUyNW9PVkIzYWpsbmFq
      Rk9LekFySzJWNFNEQkRiVWxWV1ZrMFZXdHlZa00wWTJoTmVpdHlkM1pMVUROTmFGSXpNbTU2TVZo
      bVRWY3paamhCVVhNS1VreHVjRWRNSzB0S1ZtMTVUV3MxYUc1ek5FSmxOMUY1UlRKUGRETkZRVlpL
      YlV0Wk9XNHZXakUyVkhaUGVGWmFSWGhYVEUxNmVEUmthVmRZTWxwSVNRcFJjbG92VGpoeGRGTkdP
      SGxZSzI5dWREYzFWMDlLUjJ4QmQxcE1Oak5OTW1jeFZsWllNV3BoYUV3emNVeE1SRGxpVjI4MlZG
      ZGFXV1k1WkhWSk5XTlJDblkzU1VZeGFVWTVORVpXY3pkMVFtVTNOMHQwTTA1SGNEQlhPREZ5UlhS
      Sk1GQldVRzVDVjJ4RWQwTkxTbGRuT0hGbWNIUkpkMlEzVkVObU1HazJiRFlLT0djeVptWjZha3hV
      TjNZM1oyRk5ZMDlXY1hsUU1sZ3hTamxOWVhOdVV6aENjRVJzTm5Fekt6UlBZVUZJWWpad1JuSkZi
      MjVhV25ObFRHZFdlV04yY3dweVV6VTRTR3BsU0ZsaWNISnJiMEZUVnpneFpuUlhUREJPWlZaS1dE
      TjVWbTQ0TUV4RU1taE9TVUpwTnl0R1pYazFMMkpTTHlzeVl6bE9TWFJXVHpSSkNuTnNObXd2Tldo
      clVYSkNWVVZZUm1Rd1pWSkdTR1JpV0Zac1dWbG1WRGx6ZWtkeE9VSjBReTlLWWxsc2RFSllXVFpu
      UjFKeVYwWTFPWE5LUzFwQmNGVUtWRk5wTTJNdmR5dFFabHBIYkROTVNqZHRZMGgxTUVsc2RtWndl
      RXRzZDFkRFNHOVBhRlo1TkZCVFkwbEdOVTVrYlVwT1RVbG9VMU5NT1hWNVNGRTRVQXBOY2l0RU5X
      ZEJkRFZrY1RsV1ZVcGlWVXhQYmdvOU1TOVlLd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Ensure cups is removed
      package:
        name: cups
        state: absent


# Ensure rsyslog Default File Permissions Configured
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_rsyslog_filecreatemode,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = configure
# complexity = low
# disruption = low
- name: Ensure rsyslog Default File Permissions Configured
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-88321-5
    - configure_strategy
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - rsyslog_filecreatemode
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUTNRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      ZHVNRkF2YVUxTVNHMW1RbWhqUWxVd1FVVkNRalZIYW1aUlZXTUtNM1ZOY1dOSE9HUk9ZekpRZDJW
      MmJtbFhNVWRyYzIxMFduWmFUa0pMYVZscGJtbzFXRE5MVDB4SmRXSjFObVJQYzA4NU5WSkpabk40
      VURNM1UyVkNVZ28wYzNoUE5IUlJUVVpQVW5obmFIbHBNVGwyZG1WcFJsQmhiVVJYWkRBMmMwWnJT
      MlpaU20xcE1tcDFUazF2Y1hGdk5WWnhjVVUyYm5WeU9UaDBORzlzQ25oMlkxVnJkR2xFVmtsRE0x
      UkxZWEpWWVhvdlZtbHhTM0F4Y2xaTWNrczRVa3RPT0U5aFkxcGtkMkZGYUVreE1XUnNXbVZpVGpC
      NloxUk9MMHhFYmtNS1FVaGxSM05EUTI0ek5XWTFTbXBPTVd4S1ptdENXRVk1TTNCalIySm9WbWha
      VlhCalZHeHViRkoyTTBWMk5Vb3dWbG8zUmpodloyWndUbWxUTUZGSVZRcG5iV1pNYUZseE1ISmFi
      VXBPYm5OeWRGUkNhRGswWnpGNEwwaEZUaTlsYkhvek1VcEZjblYxV0hCWVRtMW5lVVJqZVRKVWRs
      TjZjbmhGY0RWTk5UbFJDbVJGTkVoTFVGcDRSR2RHZWpSamNuUTVVR2gwY0N0Q1FqVTFTbUZoSzFw
      aEwzcGtUMnBEVEZGR2IybENkaTlZYW5rcldWbDNlRmsxTTFFcksyNXFjM2NLWjBkcE4xQlhTR2h1
      ZVd0alZ6UXhPWFpXWWtReVVrSk1jMDFMZHpkaVlXcHVZM2QwVjJkRFNGRXZTQ3RxYlhvd1JtbE9T
      VWgwYTFoRWFVWnVRVUY1VmdvMFNqUkNaMW8yTjJ4UlptMXRWVzlpYjBkM1JteFpSVFpTVldkaVRt
      azBia1pzUVc1S2QyNVhUM0pzVVZaemJqZzBlR3hOUTFGUGNXRlRTWFpNTkhob0NrTjFXbTlsWnpo
      bmIyeDVjVGg0UkVsMVJUSkZZeloyUTBVelIwTklOblJhT1d4R2RFcDViVVZNVG1adVVqRkZLMEpy
      VlRWRFRtMDNhRzA1VURGcVJrZ0tSM2gwVVVab1RVVkhaelpvWmlzclpVdDFPR0ZNVkVJMVptdGtN
      WHBTTlZGaFRqaE9WWEZWTUVoak1Va3dkRmQyZVZFNVRpOUxabVV3VkdoamVrZEpkUW8zTkVkd05U
      bHlhV3BtTkcxQldWZExXR0ZNVHdvOVoycHBSd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Ensure rsyslog Default File Permissions Configured - Search for $FileCreateMode Parameter in rsyslog Main Config File
      ansible.builtin.find:
        paths: /etc
        pattern: rsyslog.conf
        contains: ^\s*\$FileCreateMode\s*\d+
      register: rsyslog_main_file_with_filecreatemode
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Ensure rsyslog Default File Permissions Configured - Search for $FileCreateMode Parameter in rsyslog Include Files
      ansible.builtin.find:
        paths: /etc/rsyslog.d/
        pattern: '*.conf'
        contains: ^\s*\$FileCreateMode\s*\d+
      register: rsyslog_includes_with_filecreatemode
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Ensure rsyslog Default File Permissions Configured - Assemble List of rsyslog Configuration Files with $FileCreateMode Parameter
      ansible.builtin.set_fact:
        rsyslog_filecreatemode_files: '{{ rsyslog_main_file_with_filecreatemode.files | map(attribute=''path'') | list + rsyslog_includes_with_filecreatemode.files | map(attribute=''path'') | list }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Ensure rsyslog Default File Permissions Configured - Remove $FileCreateMode Parameter from Multiple Files to Avoid Conflicts
      ansible.builtin.lineinfile:
        path: '{{ item }}'
        regexp: \$FileCreateMode.*
        state: absent
      register: result_rsyslog_filecreatemode_removed
      loop: '{{ rsyslog_filecreatemode_files }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - rsyslog_filecreatemode_files | length > 1

    - name: Ensure rsyslog Default File Permissions Configured - Add $FileCreateMode Parameter and Expected Value
      ansible.builtin.lineinfile:
        path: /etc/rsyslog.d/99-rsyslog_filecreatemode.conf
        line: $FileCreateMode 0640
        mode: 416
        create: true
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - rsyslog_filecreatemode_files | length == 0 or result_rsyslog_filecreatemode_removed is not skipped

    - name: Ensure rsyslog Default File Permissions Configured - Ensure Correct Value of Existing $FileCreateMode Parameter
      ansible.builtin.lineinfile:
        path: '{{ item }}'
        regexp: ^\$FileCreateMode
        line: $FileCreateMode 0640
      loop: '{{ rsyslog_filecreatemode_files }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - rsyslog_filecreatemode_files | length == 1


# Disable Bluetooth Service
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_service_bluetooth_disabled,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = disable
# complexity = low
# disruption = low
- name: Disable Bluetooth Service
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-87231-7
    - NIST-800-171-3.1.16
    - NIST-800-53-AC-18(3)
    - NIST-800-53-AC-18(a)
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-MP-7
    - disable_strategy
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - service_bluetooth_disabled
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUTVRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      dE1NRkF2YVU1aWQyVk9aVE50WlZwRlUwcGxTMUZQYjJ4R2FFUUtTbFZXTWpOQ1ZFMHlaMFJNY3pG
      M05HMTVla0o1VVRRNVlWTllWblJ5Vm1GS2VEaGtkR0ZvUWtWc1NFNHpRa3ByWjJsQlRYTkRZMjVD
      UjI1R2NXOVpSZ3BvYTNCVE9GWklja1I2VDBVMFVUVkZSV0ZvT1ZsbldtTnlTbVZhWWxCUGR6RkxU
      WFI2UVRBeFUyaFlURlk0VWk4cmVXaDNlR1J5ZVc4NVVHbzNSM2xLQ2paR1dYbGtRMGxhTUZCYVFt
      Y3JSV0ZGTjBaYU4xZHJNM05rY1hGdVEzaHNVUzlVTjJSMmVGWnVVR0ZJWkZKb1ZreHVjalZPYTFj
      MVIwNVROa3haUVhnS1dHNUdaRWwzVkVkRFFXZEhUbTlqVldsSlJGSm1aMEZMWlRVck5HNW1lbWcz
      UkRad1pIQmljMVZhVWxkRmQxSm5SRU01VTFsTEwwTXJkRmhMTVRCWGRncDRkbm8wVjJWSGVrOWFj
      SE55V2tWdFZVUktZWGMyYlhwdWRYRjVSSEJsTkhGdk1saEdibVJVWjAxaVp6Uk5jVmRWYlU1dFJt
      bG1VM0JOY2tSdlpXb3pDamxMVFdaaldWWlBkbTVpZVZkelpHZENVekIwTjBsV2REUlJObGhIZFVJ
      eFJFTTRlbk5LVkRadlZ5dExTalZzYTAxUlpYQnJhVUkxYm5OWlRVRklibTRLYzJWbWNURmpOalpX
      V1hrMlVrcGpOVVpIU0Zsdk5GZzBTWGRDYmxJeU5sSm9aMVZDUzFsWVFVcFdNakJoYldaWFFXbDNO
      VzFMZHl0WmNXOW5XVUoxVEFwWWFtSTJkMWszVW1Vd1VUTkpXV2hYZEZsbE5FUktXamMxVEcxSVFt
      RktXVXB3Y0VaVlJUbDRVVlptZFRWaFYwbzJSRUZ5WlZCc04xVTRkalZYVEdKd0NsSk5Na0pXZW5w
      QlVqZFhVMU5YTDFNM04wOUZTbkptU1ZWVU5sUmtNRTUzZEVGaU9YUXZRVkphVFV4amFIRlVjSGM1
      WTI1b00zQkZXbUpLZEVSbmNFRUtPV2RaTm5RMFRXRmhNVk5MTVdGemRXcDNURVZ0UkZaMFUxVjFa
      REl2ZDJKcWIzZDFlVXdyYzJoMmRVNVpXbXRvYmpCblZFaGFjM3BUYzJKbVdtY3JlZ293WkRKcU0y
      bHVjMVF6ZWxVeU5IaFpjRWhZVUFvOVVXbG9jQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Block Disable service bluetooth
      block:

        - name: Disable service bluetooth
          block:

            - name: Disable service bluetooth
              systemd:
                name: bluetooth.service
                enabled: 'no'
                state: stopped
                masked: 'yes'
          rescue:

            - name: Intentionally ignored previous 'Disable service bluetooth' failure, service was already disabled
              meta: noop
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Unit Socket Exists - bluetooth.socket
      command: systemctl -q list-unit-files bluetooth.socket
      register: socket_file_exists
      changed_when: false
      failed_when: socket_file_exists.rc not in [0, 1]
      check_mode: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Disable socket bluetooth
      systemd:
        name: bluetooth.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - socket_file_exists.stdout_lines is search("bluetooth.socket",multiline=True)


# Disable Network File System (nfs)
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_service_nfs_disabled,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = disable
# complexity = low
# disruption = low
- name: Disable Network File System (nfs)
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-82762-6
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - service_nfs_disabled
    - unknown_severity
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUXZRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      OWFaMUF2YVRCMVduZFFRekJ6TW1aSFRHRnFRelJIVkZwMVJVd0tibTlJUkZWNE5tWnZTMU50ZWpK
      WFZXc3hja0ZLWWxaRlRsQTVTMkpoWjNwR1VFOUhOVVp1UTJSeFF6aG5ha0ZTU0ZWaE5teHBSVzVD
      Y1ROa2FWYzNZUXBzV0dSeVZtMUNWSFZQYVc4dlRsWnVhV0pRV2xSV1VYcE9kVkJaYmtsTGEyeFFh
      bEJ2TjBneWRGVlZhVXBFWW1kMGQyTjZUblZPVjFoSk5IQk1NRWRKQ25OU2VHcHNNbUZzVFRCWVFU
      Sm1aVlZqVUd4bllXdHJLMDQzTlU1U0swNVVPWE5OZDBSU056UkRiWE5RV25aS1ZtUk9abmM0ZW5K
      dVpYRTBXVWxFU0hNS1NYQlpZa3BWYkhocU5rUXJZbGxMV0doemIxVjVhVk5TT0U4emJHeFVWelZL
      ZEVNMVFXcEJjemR5U0VSWVRHUmlWMlp5TVc5dWVIa3JOa0Z5TXpOUWJncGpjMUpRTjBjdmEzVkxW
      R1ZGY1ZwVE4wMDNhM1l5UWxsQmVtSkNjek5VWm13MFJYRlVPVUZYYld0Tkt6WkpWMVJsVFRKV1NU
      VTJjbE0yV1ZWNVFqbG5DbTlsYzFablIzTkZWbFJYZG1SeWVWSnlRalF3TW0xMmREQlpUazl2Ulc5
      VEsyMVFZVXBLVWtsUmNTdGthMDVQV0dKMVpEbFZNMDVXUm10a1FXaEJOMUVLYmtGb1V6WmpRVTlw
      TTBaeFMzUk9lbTF6UkRZNWMwZG1Sa3gyVjFKT2JFcFpNMUZLWm5sM2RrUldOWHBaYTJsdGJVTlNV
      bVYyV25SaGVGUmlRMnBYWmdwdk5HRlJVekZVVVRST2JVa3lhM0JpVEhSb0t5OWpabE52Y3pRclRt
      Rk9SMjB3VFdoM2VIVmFUVXR3U0VWV2NGaHNVVTA0ZWpJNFRraGFUbVpwZURSbENqRlRTbG92TkdG
      MWFuVnRWRmsyTXpKVVNXOXRNalZVZEdNeFJ6QkdWa2RFVFVGTU1rWmpRVWRaVm1kTFFtdERWVmxD
      VVRnck9HMXBkblU0UVhZNVUySUtXa2N5ZEU1NE9XNUVXSFZLV21oMVJFbFdNMWxpUldabE1DczNW
      bTF4VlhOYWQwOHpTRmxRVjFOeGR6YzBZV1JSSzFkVWRUQlVZa2c1ZUVKU1JYVjBXZ3AzTVZGSlNW
      Z3hUUzlHUkd0SWREVkVjVmxoV2dvOVZUbGtWZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Block Disable service nfs-server
      block:

        - name: Disable service nfs-server
          block:

            - name: Disable service nfs-server
              systemd:
                name: nfs-server.service
                enabled: 'no'
                state: stopped
                masked: 'yes'
          rescue:

            - name: Intentionally ignored previous 'Disable service nfs-server' failure, service was already disabled
              meta: noop
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Unit Socket Exists - nfs-server.socket
      command: systemctl -q list-unit-files nfs-server.socket
      register: socket_file_exists
      changed_when: false
      failed_when: socket_file_exists.rc not in [0, 1]
      check_mode: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Disable socket nfs-server
      systemd:
        name: nfs-server.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - socket_file_exists.stdout_lines is search("nfs-server.socket",multiline=True)


# Verify nftables Service is Disabled
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_service_nftables_disabled,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = disable
# complexity = low
# disruption = low
- name: Verify nftables Service is Disabled
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-88428-8
    - PCI-DSSv4-1.2.1
    - disable_strategy
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - service_nftables_disabled
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUXZRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      UkdPRkF2TVRCVVpFSXlaMlZTTDJST05DOVhjWGwzTlVKR1MxSUtRMndyWkdOM1YzVTNTaTlLUVZw
      NmJFTnJabEF6UWpoSk9VaHNZMjlKYVhGd09VNU5kRmxyZFdSdmR6SlJRMFF3UVZrMU1HOVdibkph
      TUZCT1VqbHZhQXAxU201b2RIZ3JRMm8yYkdOVlVGQlpNMjVuV0RaVk0yMVJPWEpzZVRndmJYVTFR
      VFJKYTNoaWQzbHZMME5pT0RaV1VsTnVka0Y0VlVSUVFtVlljWFpCQ2tsTk1WSkpWbVZuZWxOU2Nr
      cEtlRlJZVGpKMVdrbGtOVlpxVG5wdEwzVXpWbEZYYlhkRWNsWm1ZVVZGUWtSeldFTllaMjR2U21k
      SU15dHJXVFpCV0VFS01YZzFiMmN2TDBOdFpuRndTVFU0WlZRd1kxcHljMmRtZFhSQ1owNTVjbXh6
      YURSdFJuWjJRVkZoWTBaT1UzZHZjR2hMTjI5RGQxWnROMFpoTURSWk5RbzBVM1EyZURoS1lraE1k
      a2wzWXpkbmVWTkhkMkYwYTBoTmJEVlVSa0Z0TmpnNVIyMU9aRmg0YkRVeVFVbFFPR1E1V0ZJMlVH
      ZDJPVE5JWm5odE5ITkZDbTVHWW5VME5VMXBVRzlUVFdzMmIzbEJRekJvVm1WR1EwMWtjbko2Y1c5
      WFUyRm1VazVsWkVsNmRuSklRMUIxWW5wSWNGazVkSEJHWjFCQ1lWSkJUalFLVW5WUFpXUm9XVlZE
      TmpWU09FbGFjbkpJSzFaUFdrdG5lR3RWVlZOcVJITndTazgxSzNadU1sSkdkRmxJYW5GeFVHVlJi
      MkZ4Y0c0NGRYVjFVVk54VUFwSU5uUkJXa2RqVFhoVGNYaFNSblpzUTJ0RGVEUk9Wa2gyWnprMFJX
      RnRTbmh6U21wSVVtRldVMjEzVkN0SVpEQllTazVzVW1wMFVtNXJjbVJYVWxWS0NrSlVkRFpSVkUx
      SFRrTnhXVGcyTjNWaWRuSkhkVzk1ZFdKc1EzcG9hWFozTTBoRVpWazBhaTl0V2k5MFZFODBSRUYw
      WW5keFMxZFpiV2Q0Wm1sYWIyd0tPR2xFVFdVMVFtTjJiSE5WYUVoWWVscFJLM3BqVVhaUlVuTXpT
      SEJoYm05SlFXSnlNRnB5WVVWNVRraFlLMU1yZERWdlMwOXRTWE5TYUU1WWFrSjBkQXBvYXk5bUsw
      bFFaVWhWVXpSVVVWbHBWMkZMVEFvOWEzVlVRd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Block Disable service nftables
      block:

        - name: Disable service nftables
          block:

            - name: Disable service nftables
              systemd:
                name: nftables.service
                enabled: 'no'
                state: stopped
                masked: 'yes'
          rescue:

            - name: Intentionally ignored previous 'Disable service nftables' failure, service was already disabled
              meta: noop
      when: ( ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"] and "firewalld" in ansible_facts.packages and "nftables" in ansible_facts.packages )

    - name: Unit Socket Exists - nftables.socket
      command: systemctl -q list-unit-files nftables.socket
      register: socket_file_exists
      changed_when: false
      failed_when: socket_file_exists.rc not in [0, 1]
      check_mode: false
      when: ( ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"] and "firewalld" in ansible_facts.packages and "nftables" in ansible_facts.packages )

    - name: Disable socket nftables
      systemd:
        name: nftables.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - ( ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"] and "firewalld" in ansible_facts.packages and "nftables" in ansible_facts.packages )
        - socket_file_exists.stdout_lines is search("nftables.socket",multiline=True)


# Disable rpcbind Service
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_service_rpcbind_disabled,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = disable
# complexity = low
# disruption = low
- name: Disable rpcbind Service
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-82858-2
    - PCI-DSSv4-2.2.4
    - disable_strategy
    - low_complexity
    - low_disruption
    - low_severity
    - no_reboot_needed
    - service_rpcbind_disabled
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzUXZRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      MDFWVkF2TTNFM2NUWnpiR3RaTUM5RFNEaDNSR3RwUjFCYVdHRUtaMDlxUjJsdmVreHlNWGxIVEdO
      NlZVMXFSRzg0TUVWTUswOXRZbGgwV0VkTVpHaHdSVVl5UjFkcE9YaFBRM1V2TjNCelZtTmlTRTAz
      YUVKM1JFNXBNUXBTTlVVNGQwY3lWRVI0VkRocGRrOURNMGs1ZVZod2FteHRTamhvTkZCRmVuaHpj
      MVJHZWtoU0wxRk1WVzF0TldGTlVHMTNlRFJDTjA1alZVazVjVFozQ2t0TVZHNUxUMDB4TUZORlNI
      Wk5SSEUxYkc4eGRpOWpNVkZYZEROelRHaDVaREZuU0hwclowcFhNMnd3WnpacGFHeFNaVTVhVEVZ
      d1dGaFRiRGRKWW1rS1NrbHVRa3BsZWk5cmRYRjNVWFoySzJabFkxTTFLMk5xWlhWMVNYWTFibUpQ
      TTFneGEyOUtjMFE0YVdoWFVXSnpZakZWUlhwdVlWUk9ObXRtTm1KTmR3cDRjMW8zTTI5QlFWSXlU
      VkJDVUhKdlozUkxja1ZqTjFCVlkxRldWSFpwYm1KcWVESjBOSGRJVDJSelVraG9hMGhPUkRjcmVt
      czFWRlEwTm1ObWVsbFZDbUY1YVhkUVNqQnZZemtyV0hCamIyRlFRVkZMYlZWR2QxZ3pXa280WjNC
      elpXeFNZbnBTTUhoclpEQm1RMWRETVdocVowWTRSek52WjA5aWJEZFhVblVLTTBoRlRTdFJNVGcx
      ZEc1MVZqZEVVMUp0SzFsWmJXVTNaa2hqYkVWVlR6SXJRWEVyVGxoc1MycHdSRWRPZWt4eWEzbHlZ
      bUYzWVdSdk1sRkpZWEZzZGdwa1dDOWtXbkp0TnpRd1EyWmFjMFJUUlN0aFQyNTNUMWw0VFRGVmJE
      Um1aWGhNTDAxNlltbHFaVUZMVlV4UFoycGxTVFF5UmpoWFVqUXZSbFJTU0VnNENqaElVR1o1WkVw
      WVprTnJVell6YlZWVGQyeHhiR2t5YUN0T2EwdGtSVVl2YXpsRlJVaGFiVGhRT1daTUswWkRjSEJ6
      Y0cwMlZUWnlaRkpVTnpkRWFtRUtVa0p4V25CcFVIa3lUbVpUUTBSaGFFRXlkM0F5YW1KNVducFhS
      RWcyYTNwSlJEQmFaRXBGTld3MWJHcE5hbGhZWVZsd2VEa3pOVGd6U2t0a1kxVnhZd3B4V0ZCalZH
      WjNlVGxsVVRac05DOWtRV1ZPUkFvOU1Fb3ZRZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Block Disable service rpcbind
      block:

        - name: Disable service rpcbind
          block:

            - name: Disable service rpcbind
              systemd:
                name: rpcbind.service
                enabled: 'no'
                state: stopped
                masked: 'yes'
          rescue:

            - name: Intentionally ignored previous 'Disable service rpcbind' failure, service was already disabled
              meta: noop
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Unit Socket Exists - rpcbind.socket
      command: systemctl -q list-unit-files rpcbind.socket
      register: socket_file_exists
      changed_when: false
      failed_when: socket_file_exists.rc not in [0, 1]
      check_mode: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Disable socket rpcbind
      systemd:
        name: rpcbind.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - socket_file_exists.stdout_lines is search("rpcbind.socket",multiline=True)


# Disable SSH Access via Empty Passwords
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sshd_disable_empty_passwords,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Disable SSH Access via Empty Passwords
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-80896-4
    - CJIS-5.5.6
    - DISA-STIG-RHEL-08-020330
    - NIST-800-171-3.1.1
    - NIST-800-171-3.1.5
    - NIST-800-53-AC-17(a)
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - PCI-DSS-Req-2.2.4
    - PCI-DSSv4-2.2.6
    - high_severity
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - restrict_strategy
    - sshd_disable_empty_passwords
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVkRRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      UlBORkF2TW10a0szUm5SemR5ZEhwVFJuVk5jV3hQVUc5R1IwY0tkMlZOYmtOb05rOWxTVEl4YVRW
      clltRnVRMWxXWm5GbWNGUmlSR2h2U2s0dmRTOW5SRzVHYnpaNmJVaGthazAzYVRaSU1XZEpVemxu
      TUZNclVUbFJSUXBUY1drMVdraERTbVJHZFRsNUswOVJUMmRDU2pSUFNtMXVUMUZqVlVFNU9IY3Zh
      SEJJY1ZZME1FaG9lRVo1UWxsUk5VdDBSMDlRZDBjNWRrbG5hV3B2Q25nNVVucG9RMnBYVEZGYU5X
      bERjbTl5T1d4aGRUZEhaa1JFUjI5WldsZEJaVTVsVFdOUU4yRkZVbTUzWm5aTU9VRnZjRzlKVmtG
      dUsxWmlibUl4UlVVS01qSkZNRlFyVlc0dlVHMDRWRWhQYm1OTVdIZDVlbkl6ZDFsdE9UbEZPRmx5
      Y1VsTE5FSnBSVTAyUnpKeFZscFFVR0Z6YldsRGFFNXhiMlpZTTA1a09BcDBNak5KU2pabWEzTkpW
      SGQ1WVRCTU9Wa3JUVzV6YkVwa2FVMHpOblV3Y1UxVU5WZGtiVVUyVlU5UGRtcGhSV0ZyYW5Oa1RX
      NUJaMnRMT0dKaVJtZFpDbGhFU25SWmFUWXJlbTRyYldSR016aFlXa3RrUmpKcFlrUlNjbE53WWxa
      eFdXVlhkMXBYTXpkRlIwOWlaU3RRZFhkcFUyTlhOMjFVTDNsalNUWnJlbThLTldoUFpsSnJkRlkz
      WjBSNFZtcEpSMHQzUWxGdlpXeGlNV05yWjI1cGQwOHpiak5FYzBWc01DdDVjelJGUnlzMFoyVlVj
      elkzYnpsUlNUbG5hUzk1U1FwdVlUWXJUMWRGZVRCR1psRlBiWFl5TUUxV2N6aFVVMEZLZVU4MFZq
      VjJPVmQyY0N0dVNFNUNSamxuVWk5MFVXSlphREZqYkRkd1RWRnhUbFpITUdwd0NrTkJSMUpuWmto
      VVRYSjBVR1IyUTA4ellXaGhjazFHZUdFelozQTVaVVJRWW1KNk5HdHRhV0pUTkRKNlRFazVXVUps
      WkdGcVEybDBhekYxYVhCeWFtc0tPVFZvU1ZaTFdqRlVka1kwS3pBMlEwMDRZM0JOY2tWQ1ZWTnFR
      bVV6TUUxVlNVODFOMGRSU0hoTlZGYzNRbXBJUlRWMU9EWTFlVUp4UkV0NVltOXhkUXB3UTNScEsy
      UlhhSEZqYTFOR1JEQndaVEJIUmdvOVYxSk1id290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Disable SSH Access via Empty Passwords
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*PermitEmptyPasswords\s+
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*PermitEmptyPasswords\s+
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*PermitEmptyPasswords\s+
            line: PermitEmptyPasswords no
            state: present
            insertbefore: BOF
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Disable SSH Support for .rhosts Files
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sshd_disable_rhosts,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Disable SSH Support for .rhosts Files
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-80899-8
    - CJIS-5.5.6
    - NIST-800-171-3.1.12
    - NIST-800-53-AC-17(a)
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - PCI-DSSv4-2.2.6
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sshd_disable_rhosts
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVkVRVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      TnBSVkZCU25sSmNWaHRTQ3ROTVRreVNtNTRhMDg0UnpCWkwzRUtSWEphT1M4NWJYaFdVekZzWWps
      MGVWaHRWRTV2UW10b1VYZHplWGh6Y0Vjd1dITjJlbXA0SzA1NmVUWjJXVE1yZW5OaU1VeERWbHBh
      ZVd0ck9FOWhRd296U0dSeGRHRnNWRVpyVFVRMGVuTXdUV1JMYWxrNGNWZGlNMUYyZGt4YVlreDFW
      V3c1U2s1cFkzaExObWs1TURKWmMxbzVSRnB0YlRoU1VrSnhVRXRLQ2s5bFIyRnNWa1kxT0RKd1lY
      bzFaVGhCTnpCcmJEUjRhVVpQYUhCclV5dEViSGRxWkV3clZWSTNRVGgxWkd0b1ZGQTRZa0ZzWkZO
      c2RVbzRhRFI1Y1RRS2RsWkliRkJyVWtKQ1pWcG1SbEZYVFdzMlJEQTJVamd2VG5KV01IWlhOM1p5
      VUd0dGFsUkZaazUxZUhodFJFazNXakJ5TWt4cFZVUXhPRVJsWlUxdmVBbzFaWGcyWWtsYVQyaE5h
      bGhQWkdwbmJrMHZiV3RRTXk5dWFVdzNXa2t3ZFRSVE5FdFZaVXhzTlUxcGRHY3ZLM0ZuY3pORk1r
      SlJZbE5IYUZsNVNVcFZDbEpGVFVwek1FcHBkbTB4VnpSUFlWWmFPVkp2Uml0cldEbFVMeTlDTldo
      alRYWjZjVUpMTUVsWGFXMDFNV1prZFdWUU1sbzRiSFpFTWt0dmJrdHBZWGtLTjFkMGJsUXlWVGg0
      VVZjd1NEUkNiR2RtWVdaWU5FMURiSGxTUkVndlJWQkdibTFpUkVkb2JqWnFabTFOTTFKT1ZWQm9k
      bHB0TmtOd1FYRjFOV2gwYWdvekszQjRXR2czVkdkNVFVWm9NbWs0T0Uxb1ZsRlhVblJxYWxSVFVY
      aEdkbTAyVkdWbFJHOVBVRFV5UVZvMlZHaHdWREoxYTJsTVoxRnZVVk51VkZSckNrNDFiMEZVTkZk
      bWQxRTJTRGxwVkcxclRUaHlUQ3RGY25VMWFscFNSbmhMUVRoSmIwSlBZVEU0Y0UweVFYQnFWMXBF
      YVhGb2RIaFRTRXQwVmpkb2Fra0tVVkpZZERVM1lrZzNXa3RXSzAwdlFqWnlOV001TW5GU05XRlBV
      bFF3TTFvM016UndRVTE2V25KSlNqVlVTMHRVVHpaRmNIWnVXbnBCTjFKT2F6bG1Vd28xUTFCblRY
      VXdaMnRLT0ZWQ1dtaERSWE55ZVFvOVpuTmpRZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Disable SSH Support for .rhosts Files
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*IgnoreRhosts\s+
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*IgnoreRhosts\s+
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*IgnoreRhosts\s+
            line: IgnoreRhosts yes
            state: present
            insertbefore: BOF
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Disable SSH Root Login
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sshd_disable_root_login,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Disable SSH Root Login
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-80901-2
    - CJIS-5.5.6
    - DISA-STIG-RHEL-08-010550
    - NIST-800-171-3.1.1
    - NIST-800-171-3.1.5
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-6(2)
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-IA-2
    - NIST-800-53-IA-2(5)
    - PCI-DSS-Req-2.2.4
    - PCI-DSSv4-2.2.6
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sshd_disable_root_login
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVkVRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      UlRUVkF2TWtsNU5ETXhURk5SZVZFd2JHaEtiMDlEZW5KRE1Ib0tha1J1Ym1OcVpYaENXVWhPWkVk
      UWRGSnZlRkpRV0cxU1lrMVhWR2d4VFZkTlpsTk1ORGxaVG1KQ2MwczFjRlZVZGtGcFIxcFBZbGxr
      V21kbFNXRnRjQXBhUTFGTlIwSm5kVFpQVVVkbU5sQnFSR0ZyTVRsRk9VeEVjSFZ0YkdaS1RXWlRZ
      bVZHT0U5SWRHbFJiMm8yVmxkRGNYVTJkMUppZVdGTFVFYzVja1ZaQ25oa01sQTJjV1ZXYmtSWlIx
      TjVTWE5MUVhadVYwdGhXSFowT0VaRU5IRlpiRXh3YVhoTWJGaGtPRXN4VEM5c1YzTkJjVVpHWlda
      NVUzVmFVVWRYVlhjS1IwTkNSMFF6ZFRGeFYwRkhTSEkxUTA0NFJETnVlRW80ZFhRNVFXVm5WbEJu
      VUhGd05HRTFTM2hZU1hsUlpTczNSV1oxY1hscUwyMXFZWEUzVEhob1J3cEtWemd5VFVGalVETjVV
      M2N3VUdVeEsxWmpjMGN4Y0VZeVR6RnZlbEJOVFZob1MwOTJZakZQVWk4MGMwNVpXbU5RWVU5VUwy
      Y3pZalJWTVdwNVZVMVhDa05SWlhwcFZFeExaR052TkVWaFJIVnlSa1ZIZWxSYVFYSnhZbFpwYzNW
      NlZ6SXdWRXhZT1VOT2VHbEpNVGw1YURZeWIzSkhRbVUyYXpSbGVXRlZVWE1LTjJ0SWJ6Rm1PR0Y1
      TkRWMlRWRlZRVVIwY2tsUk1HcFBUVXh1YjJ4Tk1pOURTSEoxT1RWNFJsWm5TVTVoTlhWSlN6RmFi
      VUpVUTJkelMxQkVNelZ4U1FwUGQwVkpOblEwZVdveFkxZGlLMnhhZUROS0wyUmpWakpDVjIxMlEy
      aFNXR0VyUTJOMFZXUllWRTEzT1dodVNGaHhabGh5WVhGdWEyOXhSRlIzWjFJMUNqRmtRM3BCZUUx
      elNXcG9kVUl3UzNFcldrMW5OeTlGZVc1UVQxRnhPVlkzVG1WaFVtSnFUVkExZEhSTlNHWndUbmxr
      VG5SdE5GVTFOVVZWWW5ReFdITUtTRXRZVERnMFprOHdhSEV2VFdwcU9UWjRaalpWVjFwV1FraDVX
      SHBpVldGalVFMHJWMnBFZVRkblNpOHZaR280VVhGTVFURm5RV1FyYUdWUmRGZDZNQXAxYWtwcloy
      OXFZVzlyTVc5R1UzUnNVR2xKTHdvOWFHOVNRUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Disable SSH Root Login
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*PermitRootLogin\s+
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*PermitRootLogin\s+
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*PermitRootLogin\s+
            line: PermitRootLogin no
            state: present
            insertbefore: BOF
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Do Not Allow SSH Environment Options
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sshd_do_not_permit_user_env,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Do Not Allow SSH Environment Options
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-80903-8
    - CJIS-5.5.6
    - DISA-STIG-RHEL-08-010830
    - NIST-800-171-3.1.12
    - NIST-800-53-AC-17(a)
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - PCI-DSS-Req-2.2.4
    - PCI-DSSv4-2.2.6
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sshd_do_not_permit_user_env
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVkZRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rp
      OVdPRkZCUzFGVmRsaG9aRzFRZVhkUFZWaHBiSHBHY1RZMU1YWUtUWHBrUlZVcllYWnZjWGd2ZG5S
      WlYxSjFhbWsyU0VvdlRIZFZjMUpPY2t0SFowcEpiVU0yY1hoVWFrMU1PWEJzUkU5M1ZqVmFTRXhp
      YjFKa2NYRnZMd28yWjJSd1MweEpTUzlNTW5kR01VMDRMMHB6VG5KUmFXbHpUbFIwVTJsRFVYZG9R
      bkpVVDFKdVdtd3lURmRZVFV0MGVWTXphVVZHTTNoTFZuQm1PSEYxQ25oQ2RXdHVRV3BJU1hCNVpV
      UTJXbW92ZGpZeGFWVjNNbE01YTNOV1RtVnJXak5FVW01VVEyTmFWa2x3Ukdsd1QwMTRiREk0WWxs
      cVZWWlNLMmx0Y2pZS1QxVllXRU56YTJoMmRYRlpaemxXWlRSbU1uaDBUME13V0U5aFlYWkpPWFJS
      UkRCUFNucFZaMHhaTW01bmFXczFSalIzYW10MVNFdE1OMlJqVkRkUFpRcFpUbWR3U0V0bGVEUlVS
      MjE2WlV4VlowYzRPRFF4U0hCRmJHOURZbUZYU21SdWJVSXlkelJwVTFJNWFIbFJlRVJuTmxCRVYz
      aEhTaXR6TVRacGVERXdDblZsUlVGVWVuWmtSekpTUzFNMGF6UjNSek5qYmpOSllWaHViV3RyVTBk
      dFFXUlFWbkZ0VjBNMWNWTnJURUpFZEdsdmJ6ZFJSWFpRUjFSMGNqTXlhVFFLTkRaV1dXcFFTbTlw
      TlZVNE1tTjRUM05vVDNjeVZXeEJjbGxRYTBKM1pVRjNRMmhGTVdsVFJVeHBaMnhYYnpOc1UycDZN
      MUYzV0hKSWNIbG5URVpqZWdwcEsyZGhZblpzTm5Ka1QxRjZkWEJ5ZUdNNWRqQmhMMUZWV1RsWVdX
      bE9lbFZxWWxvemFXNW1TMU0xTmtOc1RrVktORW92VkhKS1dESndOMU4zVEZKQkNtaHBiR2R3TDJ0
      dFVFWkNkM0o1WjB0RlJFdzJjRkpqYUdKUVVHVlRiVnBZWnpjNFN5OXRhRVJtUjA5S1ZtWklVVWhq
      V2k5blpUbE5hbUl4YldseFZDc0tkVVVyZFRWcmRrTkhkRnBzV2pkbllXaDJXbUp0Y0VvNVYySkVk
      elZTYWtKelNEZFFhMk15VmpVMlVsbEdWVTF6VUhSNU4wczFNV0p5Y0RWNVptRXpOZ3BaYlcxMFNr
      dG1ORlpCY0ZKcmJsQXpWWHB4TUFvOWJtc3Zhd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Do Not Allow SSH Environment Options
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*PermitUserEnvironment\s+
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*PermitUserEnvironment\s+
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*PermitUserEnvironment\s+
            line: PermitUserEnvironment no
            state: present
            insertbefore: BOF
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Enable SSH Warning Banner
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sshd_enable_warning_banner_net,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Enable SSH Warning Banner
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-87978-3
    - CJIS-5.5.6
    - NIST-800-171-3.1.9
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-8(a)
    - NIST-800-53-AC-8(c)
    - NIST-800-53-CM-6(a)
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sshd_enable_warning_banner_net
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVkZRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rs
      RjNaMUF2YVV0UFYyTkZNVmRJUzFWbGR6aFdhRXN3ZVN0WWMwTUtZMGd4VGs5YWJWaHJWVFZ5Wmtw
      amRVSmtUa2x1VUhBMk16TklUVVZPYW5oVVpVdEtkRFZoWlVkNFZFcG9PR0ppTXpOa2FuTlRMekpI
      T1VkSWFreFJNQW94VGtwdGNHeERUMHBxZG05WmVYSm9hMGh3TldWNmJYVTFkMUJJVlVFeEwxaHZN
      R04xUWt4RVJ6TjVNVWxtT0UxRWNubFBaVE0xUWpSak5FMXBkV05qQ25oQlVGcEJOVUZZUkdvM1Js
      QjRZa3BLVERkbmJUWlVNRlpqTmtrMEx5OTFVbFJUUWtsdVFub3JWVVZoUVZsdE4zVm1jbUpLZFZw
      NFpWRjVlRWR3TjJnS2RFOHpObUU1UzFKWVRISlFlalJRYzFWV2F6RnJVMFJ1TDBFeVExWk5iVlp2
      ZW5kaWNrMXNaMmx2WjBsTlRHZE9lR2N5VG1adGNHaFJXR0k1Y0c1RlZRcDBWazV1ZG5jNVdFOWxT
      QzlwUkVSNlZsQnlabXB0ZGxsQ1FsQklNemh3VWtoNWVUYzFOa014UXpSVVVtbG5Wa1JSY0VWalZr
      RTVlV3B1U25sNlRtcERDbkV6VjJKTWNtRTFla3BhZFhaSU4zZDFlWFkzVG05aE0wMURNMVUzWTFa
      MlMyMWlabnB5ZEZadGNUQkJkMGx4UlhRNWJ6SlhWekYwUVdNMlMzZHJlVWNLWW1kalZHeFFiakEy
      VVhFM1ZuSnVNRmQwVUZwNGJFMVFZa1l4UW1OM1JtMDROa05WZGpWQ1YydG1WbE40WkRSdFJIUTBV
      VlIzYjIxeVowTTRNMGRyZEFwcU0zaG5aSE52UkdRcmRFcFVMMHhJZHpWemVVRkRjSGN2WVRNcldW
      WnZWSE5uYms5VWRVeHFNRXcyVWpkWVRGSkhNRW8xVlV4NE0wTlFSSFJTY0ZKckNuVjBWRnBUVlVk
      YVkzaElRVkp1UW5SamRISlZVRTkyYkRaRlowMTRSRE5PYWk5MlpERjVTbXBuUjJwNlRIY3lObTFS
      V1VsTlNpdE1UWGMzTm5KMU9WWUtTVkpTYlVWamEzRmFhRWhPVVU5MmVFNVVkakp5YXpGVGFWVTJZ
      bUprUW5SRmFFaGxhM05wYjNacVJGRXdXVlEyT0c1SFNrdHFSV3N4VWpOTU1YZ3JTUW8yV1c4MUwz
      QlVka3BoTDBkRlVHWndiM3BRU3dvOVMweDVlZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Enable SSH Warning Banner
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*Banner\s+
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*Banner\s+
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*Banner\s+
            line: Banner /etc/issue.net
            state: present
            insertbefore: BOF
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Set SSH Client Alive Count Max
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sshd_set_keepalive,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_rhv,multi_platform_sle,multi_platform_ubuntu,multi_platform_debian
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Set SSH Client Alive Count Max
  hosts: 'vian.local'
  become: true
  vars:
    var_sshd_set_keepalive: '1'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVkdRVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      SkNVVkF2VWpSdlNsTnBSa2RNZHl0bVYzSktaV0ZNTDNoeVRISUtWak51ZUUxclJIaHlNblZ4VUZS
      TE9IcHBZbkZwYTBOdFJraHZWVEpyZFZsRVZHcG1XV3MxUW5OTlRuUlNXa1Z3WWt0cFEzZFRZbTla
      ZDNjeVpHRkhRZ3BqVWxSMlNuUkZVM2RXVVd4VmNHSmxSemhuTHpCaU1YQjZWa1JNWTFFMFduWkNa
      SEpFUnpaNmFreEJhMGhaVDNadWNscEliWFphYUhwaGVEaElOMGgzQ21aS2FtWlBTV0p2TkZrMU4w
      dzVhRk14U210SUx6SjFTMGhrU2tVNFdHNTBNak5tVTFFclFuWTFhVFpZWjJRNWVFbFVLMjQ1VVRO
      S1EwZFZWVEpHYVZVS1FubHhOV3BGUm1KelVuVnJlbXR6Vkc4elpsTkZNemxuU2xGdGIyTTRlV3R4
      VEZCcWJpOXRTbmczWjJzMWQwUmxVbUY0UWxWcGRFSk1jSEpGVlRONVF3bzJlRVJDWVdwVmIyOTFW
      RXB6SzFac2JtWm5VRVV6V1ZsSU9WRkhkREZrUzFOYVkxRXhSbkIxYkVWbWJqZDRlRzg1UWtZelFU
      TkJlSFZIVFhaTE9GVmtDbXAxTjBORGQyZFhha0ozV1VOUU1qVmxSRUVyZHk5cU0yeGtUREpTYm5k
      NmFsaFJZa2w2WjA5dVZXNWtURXRVZWxsSlZIVXphVU01YXpoR1JYSm1Oa0VLWjA0M1lYRm9RbFI1
      VlVoWGFVdFFiRVYxU25GSVlqQm1kSFkzWjBNMlNVcHlRME5JVFZJMFVDOTRObkZOYnpoNmJWVlVU
      WGRYYzBOM1lXTlpTREJVTlFwcFpsUlNhbGMwWkRCT2QxaG1Zako0U1d0QlRUZGFUMkpUWkd4WFpr
      dDFTbEZqYzNwRVlXVlVhMnRyUjAweVRrRk5SM2c1Tm1FcmIzWXdMMUJTZWpGdUNrdDJORm8wY2t3
      MVMxUnpNVU5aT0Vkb01UZFhNQ3RWUTJ3MVVXc3pRVmhyUlRCNGJYQm9ZVEZHUXpad1YydDJTRGx2
      VFdoemJHZEhkbkZtZG5OU1NHVUthME5RWlhSTmRITm9NbE42TkZCTmVXaEdNREJqYkhOS1pTOXFU
      Vk53WWtSRVpUSjJWWGc0WTJjMU0ya3haR0YwUzFkMmNFbDNLMVZUVlN0M1psYzJTUXAxTm5kck9X
      MU1UbVpLT1c5VU1IcEhRbXB4V0FvOU9WVlZlZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-80907-9
    - CJIS-5.5.6
    - DISA-STIG-RHEL-08-010200
    - NIST-800-171-3.1.11
    - NIST-800-53-AC-12
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-2(5)
    - NIST-800-53-CM-6(a)
    - NIST-800-53-SC-10
    - PCI-DSS-Req-8.1.8
    - PCI-DSSv4-8.2.8
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sshd_set_keepalive
  tasks:

    - name: Set SSH Client Alive Count Max
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*ClientAliveCountMax\s+
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*ClientAliveCountMax\s+
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*ClientAliveCountMax\s+
            line: ClientAliveCountMax {{ var_sshd_set_keepalive }}
            state: present
            insertbefore: BOF
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Ensure SSH LoginGraceTime is configured
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sshd_set_login_grace_time,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure SSH LoginGraceTime is configured
  hosts: 'vian.local'
  become: true
  vars:
    var_sshd_set_login_grace_time: '60'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVkdRVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      TlpORkF2TUhkWVpsUnliSGx6UkZkMlVsUmFTMlpXU0VOUFpFRUtSWEZKT1N0S2ExZGFVa292V0RS
      S1Z6Vldja2xFUVhsWVlVVjNkbmh1VTB4c1JEbFdUVVZHUTBaS1FsSnlhM2xxTlRCRE1URk1jVE5S
      UmpoR1VXaHJUUXBQZDIxMVpHRTJkelkxWjBFeEwyWkVNbXRNZUdVdlFYSjNSVkZYUW5aT1JVbHpX
      bTlPY0ZKd09UTTRjMDlCUVZsWmEweHROVXBLUVROR2VHYzFkakE1Q21ob05IZHFVVkpzSzJZNFRq
      RkRTV3B2Y1RSc1VFWnJPQzlWWkUwMVkwRkxiblZCVmxSRVRrcFdXbkZaVVdkc1dVeG9UMmRUZVVW
      Q1JGUkJhR1l2TUhVS2JpOTBWV0pLSzNSdWRHeGpTRFJEUkhocVlsZERhbGt5VVRsWGFITnBlbmdy
      UjNKTWRqRnBNVFp2WnpseFR6SXhUMlZWVmtVM1FVTkZVMHBJTkU1dGVBcE9hbGsxUVhoclRHUlFh
      M3BLUjNsRWQxSm9MMUpaYUZSUGRVcEVRakp6Y1N0Nlp6bHZMM2R3ZVVSck5VdFFUVGtyUjFVNUwz
      RmtUM2hNUnpCdmEwTmtDa3BrVmpGbFJHZHBMMjlvT0VWdlpsZzRiVXRETDI0M0wzVTBjRmh0T1Rs
      NlZURk5URkpRWW5ZNGIxQjNkbUoxZEhkNkx6VlVTMkkyVDJZME5FTXlSMDRLV0VkRk1HNHdNSHBz
      Y1dwT1QyMDBOSFZRUVU5UVRUbG1NakJUUWsxTVZuWlVWVFJyU25ObVV6QnZUbVZsVWl0b0sweHhk
      R3RSUkRsRFV5OW5Va0U1VFFweVVVcFJRMEp2VFVOUVVXTm1LMnBvUzNwSVltODBUVWsxWWpCMFVs
      UnJaRlV6VFVkcmNuRkRlblF4Tkd0S1VXZFhXbWswYW5aRlJHTkZSa1pUVVdGSkNqSldlblJHY21w
      cGFtNXlUMEZOTmxoc1psUTRTM2hRVkRSVmNrUXdNRXMyVjJVMWRYZHJaM2xQTTFwMFMySkhVRXBP
      WjBsclpFazNNSFp1TW5kaWF6VUtOVmhHY2k5eE9EVXZWV2RNYTJzdk0wVk1hMUkzYm5BdllVVllh
      M1ZWYzFoNVRubHBkRWRFZERoMmIwMURlbEp2VDNrM1IwTndSRUpUYVRkTGNGQmlhZ294VUdodlpY
      UkNlRVkyVXpKWlV5dEphVEZIVWdvOUwxbzVhUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-86551-9
    - PCI-DSSv4-2.2.6
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sshd_set_login_grace_time
  tasks:

    - name: Ensure SSH LoginGraceTime is configured
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*LoginGraceTime\s+
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*LoginGraceTime\s+
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*LoginGraceTime\s+
            line: LoginGraceTime {{ var_sshd_set_login_grace_time }}
            state: present
            insertbefore: BOF
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Set SSH Daemon LogLevel to VERBOSE
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sshd_set_loglevel_verbose,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Set SSH Daemon LogLevel to VERBOSE
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-82420-1
    - NIST-800-53-AC-17(1)
    - NIST-800-53-AC-17(a)
    - NIST-800-53-CM-6(a)
    - PCI-DSS-Req-2.2.4
    - PCI-DSSv4-2.2.6
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sshd_set_loglevel_verbose
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVkdRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rs
      VXZSVkF2TTJKMlpVZDVUM05hZFdGc2JHMUdhM2xyVGk5Q04zTUthRkJvZUhsVVVXTnpWemhwYUVN
      clJuTlpWalk0TDFKYWNuUjRZVUZoTHpWelVGTkplbGhyTjJKSWRtVkJNM2RqVlVJcmFtNTRNbVow
      WTFGSE9VOUljQXBYUm5ObEwzbE5RbU00SzFoMllYbHVhRlF6Tms1M1YydGxUalZIYW5SeVUzaFFR
      MUY2YVZObmIxVnpiMjR2WldZeVl5OUVUa3hXVGpOdVJuUmhLM1p1Q20xR1RreFFhemxrYTJwYVUy
      WkVMMjB6TjFkd2R6UnpNV05GWldObldFSjBhbFl5ZEc4eGVHTXphazF5ZVRkQ2NubHFOa2hxYUdv
      NVV6SXdaM0Z1TVRrS2NVcHNhek0wVjJKdVRIbEZkV28yTW5wcFowNUVkbk5sZUdFd2FUSnFUM3B5
      ZW5WM1kwSlhkalpWVDBKSmRuQkRNekpuZEM5SFJFRk1PSFJHTXpWVU1RcEthMFpFVDA1NVlUaHFi
      MVkyVTFJeFptdFdSM0ZRVHpKbGN5c3lURFEyWkU4MlVsaE9WRWgwWXk5S01rNXFaMFoxZG1OM1JI
      VlBibGxPU1V4RVdERlNDaloxUVV4MVJHOHpUVXAzU0ZwR2JGWXlMMHB5VG5wdVJFcDRXbFIzUW01
      Uk5HWlVObXBJVDJkc1QxQkllV2MwUWxkVWVIRlZPV0l6VW1aWVQzbEVlVXdLYTBselkybGxTVXMy
      YjFCVVVUZEVZV1J0ZVZRM1ltMXNMelpCT0RoNVVsTk1kMDlRTVZaRmVGVkhValp6YlU5dGEwZDNU
      MnREUm5obU1qRmpkV2RXUXdwUVFrMWtjSEF2TVZCa1lrRTRiVXR6ZGt0V1ZHbGpabll6YWtzNGRH
      bHRaV0pyZEcxTksybDZMME5vVTNoS1ZXcFZaMGxQVURJNU9WcG1PSHB6Y2pSU0NsRm9hQ3ROVlc1
      clRWSTRXbkJ4YTBoS09WTnpTSGs0YUZkVk9HZHNTREJGWVhscmVIQnVXWEI2UVhwNWNuRlZNV2RT
      YWpWNmRUWkdPVzlhU0RSUWFHd0tjVGhCUWxWdFlsTlBWelphY21saGJETXlka2hxTVhscmRVMWxR
      bWt6Tm5CU2JUZHZXbVJ3Ukc4cmFXTklUelZTU21SblIyRkxRMlYyYWxWR2VFWk1TZ3B5UkZGWllX
      NUpjMWMwUVhKSlkyOXZkSFpHVlFvOVMwMDVSd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Set SSH Daemon LogLevel to VERBOSE
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*LogLevel\s+
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*LogLevel\s+
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*LogLevel\s+
            line: LogLevel VERBOSE
            state: present
            insertbefore: BOF
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Set SSH authentication attempt limit
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sshd_set_max_auth_tries,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_rhv,multi_platform_sle
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Set SSH authentication attempt limit
  hosts: 'vian.local'
  become: true
  vars:
    sshd_max_auth_tries_value: '4'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVkhRVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      WkZZMUF2TUhZMlJtMTZkWFpNTmsxT1VVODJNRTVtWTJGTGRuTUtjVXRWZVRjeldITkdhMXBhWm1Z
      emVEZHFXVzVpZG5kRlptbG9PVGxVVVRWNVUxUXpNVEJWTTI1Nk1IcDFhR1JsYm1WWGVIYzNRemww
      TTNSeVNWazJXUXBMTlV4bE1sZHJLMFUzYlc1U1lURTFXa2xpUzNvMFkyNTFRM2hXTmtVcmVtTnpM
      MnRUZWpkb1ZGTlJXbTFYVkdKMGFFZEdhWHBwVTBkalRqbFBiMGhqQ21FNFpsbzFiRmhCTUZBeVJX
      UkJVbWcxTUhoV1lVOWxOWGQxVmpaMFRuZFFWMkUxUTFCRVkzWTRWV3BVY0VoVmNEWndZbVZ0U1hw
      MFFtUlBUbkp6ZURjS05XbFJTMjlKVFRkUWIxTmhValZ5VkhWaFprcFFiRXB5Ykd3ck16Tm9OazFJ
      V2t4cWFXaHNOVGs0YzJkSlN5OU1lVUZ4Wm5RMWFFTkNaa05vU1RKQlZRbzBjamtyYlhjNWQybGxP
      VU5RTTJWUWJub3lNMk5yY2tGNFlXRnZNVFpXVmpJNVVIUlViMnR0ZW0xUlZsZ3JSR1ZuU205SlF5
      OHhOMWg2YldGb1kyRmtDbEZzWm01MlVqQk5aakJSVkZsbVNFNVJOR1pyTTBwNlJrY3hXbnBzY2pO
      YWNUQnJNMlE1YUdad05rUnBiRFpzYTFSdVF6aDVhSEpzZHpSYVNGZzBkbU1LVEV4ck1XMXdRVUp5
      VkN0R1JqUkpOVEJ0YWk5TWJGSlJPVTR4TmpGSGFEbEpOV2x0YzBsdmMxRlFaR3RpUVVOU1JHbHdR
      alp5ZEd4S2NGQXJZazQ1U0FwaVVHMHZNV0pTZDNsSU16WTNXQzl0VWtZNGNqZEVUV2NyZDJkQ1RX
      RlRjMVV6VlRaRk1EZEpielJsY0U5c0wySjJkemxPTmtsV05HeHdPVEpTVFdscUNuUnpWMGw0YjI4
      M1YySXlSV1ZKYTNSTVdTOTNUR1pLVFhCaFYySkxaWEJGWjBWSFpHY3pjSEZVYmxOTU9XWjBkbkoz
      UjJkRGVsbGlhRWxxTjI1cVNqSUtSRTFwYUd0RFkyaFpTalZFVXpBeE5sZGFhVVF4WXprMFREVllk
      R1ZxVkVsUE9WcGpjR1Z5ZEZoQlRUTTViVzlXY1ZoTWIweHpTMGhYUTNCdVdGVk1UUXBTWVhWTFMw
      dHNlaTlaUmxGSGFsbElLMXBuTXdvOVRYQkZZZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-83500-9
    - PCI-DSSv4-2.2.6
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sshd_set_max_auth_tries
  tasks:

    - name: Set SSH authentication attempt limit
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*MaxAuthTries\s+
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*MaxAuthTries\s+
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*MaxAuthTries\s+
            line: MaxAuthTries {{ sshd_max_auth_tries_value }}
            state: present
            insertbefore: BOF
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Set SSH MaxSessions limit
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sshd_set_max_sessions,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = configure
# complexity = low
# disruption = low
- name: Set SSH MaxSessions limit
  hosts: 'vian.local'
  become: true
  vars:
    var_sshd_max_sessions: '10'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVkhRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      Z3ZXVkF2TTBSVEwwZEJWRmxHUzNkTWVrSXdTWE5XVEROd0x6Z0tNRUpCVjBaTmNXMTNTekJEVkhr
      M1ZrMDBiVzVYWnpOUFJUSk5Oa3RHVHpaSVRIYzBiak52TVVkdFNVY3pNR2hMTUVWRE4yUkNiRXcy
      V0dkWU5HRTNNQXBuVEhKVE5EVjBaRmxZTkhSb1ZuRlRSR3hDTTJwNlNqWTNaMFZLWVdKM016UnJN
      bkpyU0hwd2VsVXdNMjFpVlhaTU5YVmFRalpVWkZacmJsZEdTbUk1Q2pGcFlWbE9lbFJETkdFM2R6
      aHBhVzB2ZUZac1owVXphbWxoWjAxMFRuWmpURkkwSzJ3eU16bGpZVXRxWlZwRU4wTlNZMWM0SzBa
      bU1uWTRRbE5KTjFjS1ZqUXJXV04yUkZwQmIxcE5hM0JWZUVvelZqQkthMGxLYkROMlRITTNWVGRP
      Tm05c2MzQnllbWhTTmtkMVZUWlROemxyYldwWWRXVnBjMkk1YWtjMFpncE1aWEU1WjFCRlNGTjBa
      MUZwWTNrMlVscEZaVmRMZW0xR1EyMUZaak5vVjJSUlVXNVpXVTFYTXprMlNFbEZRbVpSZG1obWVH
      Vk1VbE52UzJGWUszaG9DbU5ST0RKNUswOTZNVnB0UTNSbWNYQTNhRzFRVjFJck5reHBNMjFYWTNk
      MU5XRTBZUzh6VTNsV1oySjNSRGRwWlV4cE5WTllVQzl0VVcxVVkyRnFaVzhLTkRrM1N6ZG9NbHBr
      Vm13clpUSnphVEF4Y0U5eWJuTlpZMWRPY0d4eFdWVlNMMXBHWTNVd1kxRk9lVVk1ZWxKVVEzaEtN
      MWswTjNoblJYcE5NV2xPVndwSmVHZDNjM1ZvTDJ0NGEzQXJNblpyZGpscmIwcEdjRGxuVWtKRmFq
      SkVTVE5MY0VGdWNGcGxiRTl1ZG1GeVlsaEpha2xhUkZoQmRHcHpXRFJFVldwRUNtRm5UVEl3Ymt0
      V05WUmliMnh0WnpKRU9IbGFaSEpHVFhwTFFqQkNRMHQ2Tm05cVYxWlhjM1pXVTNkc2NsSnpXVWht
      YlVwc1ZDOWhjMWx1U2pKaFFpOEtkazkzTW1OSlVXSmxSRTQ1VlVOUVJWQk1ialpwY1RNMVpXdGFR
      V3BKVUU5YU9FNXRabTFqY2xkeUszQm9XakkxZUN0WFZGTlZVMVpZWkdSa1VUVlpTZ3BvVDFWV05r
      dEhTemg2ZEdwbE0wMUpZa2huWkFvOU1sb3lad290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-83357-4
    - PCI-DSSv4-2.2.6
    - configure_strategy
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - sshd_set_max_sessions
  tasks:

    - name: Set SSH MaxSessions limit
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*MaxSessions\s+
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*MaxSessions\s+
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*MaxSessions\s+
            line: MaxSessions {{ var_sshd_max_sessions }}
            state: present
            insertbefore: BOF
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Ensure SSH MaxStartups is configured
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sshd_set_maxstartups,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure SSH MaxStartups is configured
  hosts: 'vian.local'
  become: true
  vars:
    var_sshd_set_maxstartups: 10:30:60
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVkhRVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      VTFXVkZCU1hSU01FTkNaME4zUmsxV1NERk1VRk5DZUhJMGQyOEtZVlJEZG1saVQzSldjWEV5Y2xC
      M1MzTkhTbWx6VG05WVNqTmlUblZFT0c0MFRYTlBUV3dyUVZReFRYcEVjVUpHVUU5a1YxWlBPRWdy
      U3pBeE9EQkxjZ3A2VXpsQ04zSmFWSEJPUlU5UVNYRjBkV2hqUTJob1VIcGlObUl5UXl0amIxRnNL
      MWd4U25reFZUaEpPVlJpVWpSeVdFOHdkamszWjFSSFowNWFabWRhQ214SlVuTTRWbU5rTlVSd1JH
      OVVMM3B0V1dwamFtbGhhbmw1TXk5eVJWVTBXR28wTW5sMVdtNVlObnBNU1M5UE9ESlFjMDR3VGtS
      V1ZIUkdObmxIVEU4S1RFbEZhVkJhZFV4NVozaERjVmg2V0ZBM2RIZFZjeXR0UjFwWVdWQXdOMDVH
      VVZoTVpraDRlbloyU0ZsdVMxTnhkVzV4YVVkVVJ6TkJMMkpRY0U1RVRBcHpibWxRUlRObGIyc3ZU
      Rk5YV0dkM1oyNVZia0YxVWl0b2FrVjJWMjE0TUc5WlluSjNNR05RYVRKNmEyeG9Va1Z3VW5SamR6
      ZEpTV0pOVGpCSGRuQjVDblUxWVZKTVIxZENTak5xY21sVWIxSTBhMDlTV1hkbE4wOHlOVlpxUVVo
      WU4yVXdSVVkzVUhKdU9Hb3JNM3BsWTJOMlZtRXZRMVZhUlhwVVVtOXpVSGNLYmxGNWJITXhiSFJs
      TUZsVEsydFVjR04zTkdSbFRucFhhSGh0VFc5VWJWTk1UWEYzVkdWdWEzaG5XVE14WkV0aFQwSlJj
      MWhDSzBvd2QxUTBhMWxIV0FwcU9VOVpVelZVTnk5cGVqZE5kMWRGVEVVeEsyTk5ZVFo2VVRsNlJH
      bGlZME54V1RoSFZHUm5URWRLU210Rk4wRmlWRFpNTDBNeU4zaG9Ra3NyVldsTUNreGpSMjFuZVU4
      ek4yaEtOVWwyTWs1eGJVVjBkbXcxZGxKV2MyODNUa2MxVDJKUFRUbEhNWHBzUXk5d1lsZHNTSHAy
      VFdKVGJqUmlNM0JTY1VORVdXTUtkakZYWm5SQldVdDJZa3hXZGxSS2MyaDVXR2t3YzAxa1QxcHhW
      a0ZoT1hCQ1dUVTJUWE5NVEdKTU5uSklRbXhFUWtFd1FVcElURGRDZVdSMWVucEJSQW95YjJaQ1ls
      aFdNV2hLWjB4bWJHYzNURUZZT1FvOWJEQjNiZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-90718-8
    - PCI-DSSv4-2.2.6
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sshd_set_maxstartups
  tasks:

    - name: Ensure SSH MaxStartups is configured
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*MaxStartups\s+
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*MaxStartups\s+
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*MaxStartups\s+
            line: MaxStartups {{ var_sshd_set_maxstartups }}
            state: present
            insertbefore: BOF
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Use Only FIPS 140-2 Validated Ciphers
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sshd_use_approved_ciphers,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Use Only FIPS 140-2 Validated Ciphers
  hosts: 'vian.local'
  become: true
  vars:
    sshd_approved_ciphers: -3des-cbc,aes128-cbc,aes192-cbc,aes256-cbc,rijndael-cbc@lysator.liu.se
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVlhRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      RlBXVkF2TWpCcVQxSnhaRUZhWmxNeVdFZzNTV2hGVkRoM2NGZ0tXVTlFTWxGSmExTndkbEJ3U2ps
      SVl6bGplazFpYmxKTk9FMXplbTVHU1dKaU1VTnpVaTl3VTFwek5UWlFkRmhRUzFkTVRuRjBhMWN4
      YzFFM2N6ZHRWQXBFTW14cGF6QmpUR1pvU1hKRWNVODFOamhyZGxWdFoxbFVhblJWZWxWT1JrNVFO
      WFowV2tGNFVHOHJSR04zYlVreFZGUXZORXBNUVRGVmFFYzJiVUpLQ2paQmRVbHBkVkJvY2xKTU5Y
      UlNaazFFVG5WcU9GSnBLMUFyY20wMlJscEhlSE5WVG5SNGFHZzJOemMxVTI5S1RuRktkelpRTDNk
      a1ZHbDRVVVptUzNRS1RqY3hOWEZIYTFsSkwxaHlZbkZETkdOek5FSTVWRFV2WlZSVWVtdERkR3gz
      Ukc1alVtdGlSRU01TDJWNE0wbGlXV2RaVFdnMVNtWjVXVmRYTUVacFdBcDZUVEZSYVVRNVVTOVha
      SEJqVjBoRlJsVlRVbGxGTkM5clZGTmFVbnBXS3poc1pqTnpUVVJSWTJWaU9VRTNUR0l6UWtRNGRW
      Rk1TM0J5UzA4d1F5ODRDa1paVVZaWVZUSmxjbmswZG1FdlQyeDROMjlHYkVwTGVGUkdZbEptY1d4
      NVlpdEVkR05uTWpGS1YxQkZUWGMyTjJvME1YTkhMMlYwTUZreldIcG9lbmtLTURKUFJuUnBSamRz
      TWxCNFlXUXJUMEpLVTFKeldFVjFOa3gwTVN0WFdXSk5LMGhQUWt0TWRHcFhTMEp2T1ZWSmNVeFJN
      WFIwYkV0eGMzSXljUzkwT1FwVk5TOXhlRUY0VFZkdFNGcENSVmsxTW5WQ1UxQndTMU51VTI5R1VF
      dzJkVXQyWW1SMlkweHlSMDlpVkc0MVNtTjFhWEI1UmtKT1FrdFZNRVkwYTBzckNtNW5lVEZ3VGl0
      RmFWb3pWRTVxYlROYVRqZGtUVnB2YlRRemNXSlNMeXRuWWpWTlUzbFRVRmRFVGprNVZYbHhPVXB5
      UVVsVGFVOTVWemxYTTJjelFWVUtTMGhMV0c5VlF5dFhiR3BzU2pOVmFTdGtXV040T1VJelpXWnJT
      bFJMYlVGalpUWnZSMDlCTVdsc1RHbEthMjAxVjNnMldYbExZa3QzVFU1RmJFUlBZUXBaZDA1bWRE
      Tk1Ra3RwYjBVMk1XMXhXVWhxTVFvOWNVVXJMd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-81032-5
    - CJIS-5.5.6
    - NIST-800-171-3.1.13
    - NIST-800-171-3.13.11
    - NIST-800-171-3.13.8
    - NIST-800-53-AC-17(2)
    - NIST-800-53-AC-17(a)
    - NIST-800-53-CM-6(a)
    - NIST-800-53-IA-5(1)(c)
    - NIST-800-53-MA-4(6)
    - NIST-800-53-SC-12(2)
    - NIST-800-53-SC-12(3)
    - NIST-800-53-SC-13
    - PCI-DSSv4-2.2.7
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sshd_use_approved_ciphers
  tasks:

    - name: Use Only FIPS 140-2 Validated Ciphers
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*Ciphers\s+
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*Ciphers\s+
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*Ciphers\s+
            line: Ciphers {{ sshd_approved_ciphers }}
            state: present
            insertbefore: BOF
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Use Only Strong Key Exchange algorithms
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sshd_use_strong_kex,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Use Only Strong Key Exchange algorithms
  hosts: 'vian.local'
  become: true
  vars:
    sshd_strong_kex: -diffie-hellman-group1-sha1,diffie-hellman-group14-sha1,diffie-hellman-group-exchange-sha1
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVlhRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      aEVPRkF2YWtVeWNGQXpkVUo2VTNKTlYxbG5ZazE1VFhWUVdEa0thV0kzYnpSNlEycFJZbFpMVmpN
      Mk1qaGtOakZsZFZOM1VpOXRZak5MUkVsVVUwRk1abmg0U0hrNVlVbE9URTlzWTBJclpUQkJTbGhq
      ZG1GUkt6QkNNd3BhUkVSVE0xSldOblpKVXk5VFpFRkhaVFozVDJwV1JUSkdRV3hWTUhONWR6QjVO
      RTFZTTA5cVR6ZDJUMWRoVGs5QlVrNUxVMjFXVVRGQ2RFSlpPSGxJQ2t0RVRVODRRVGxGUmpaUlFU
      RjNZa3R2VkZaTWJVeE9RbXMyV0VOWWMyVTVNRzVRVjBSUE1HRm5OVkZuY1dWaVlWZFFWV052WVVj
      d2NGQm5PRzUzY0hZS1dHcE1TR05hYURoR1ZrbHpVRVpoWXpWSk5IVmxkMHhPYkRKU1RFZE9abFZL
      VmtoRWEySm5NbE50Y0U1VVVWRTBjMUJVYTFndloxSndVMnhzYVVodGR3b3JOVEoxZEdoeVdWcENM
      MVp3VGxNeFZUWkJaeTlXTXpNM2MxTmhSVUZ1T0hGVlIyeG9kV05LWmpKYWVFd3djV053VTNSWUww
      aEJhWFp5U0ZSUFNFUlNDa05zTm13dmFqUnhla2MyT0ROQlMwVm1TbGMzVW1Rd1dVUTNabW9yWVUx
      MFdrUXlabnAyYkZvMlltSmlNVWR1ZHpsWFUzQTVOVEZtSzFvMlRGVlZiMDRLV1RGTFFrSkZVR3RF
      WTFFclN6UnlSV1YyZG5WaWNEbE1NemRFTnpSQ2VIRTVOMFl4ZERaMk5qSnNhMkUwVW14Q2EzQkVU
      elJJY0hKcU0wNXpjU3NyV2dwdFluRjVZVWwwT0hwMVVXcE1Xbk5pUjB4NFlXZHRkSHBrYUZwd2Mx
      SXpiVzFpVUhsT1MydENUMGROTW10blUyNUJZVWxQYzBGbE1UZFdTM28xT1dWTENqRjRia0YxU1Vo
      a1RDODFiazF4UVZCQ1JWTmFTWFp0UlZOQ1lsUkNVVXRvYlhoU1QzaFVVMXBKVlV0QlFXZFNWVlZz
      ZDFWaVNESmxZMEY1WVZoeGMzUUtPRzlEVGtWYU1uTkdTSGxFVDNOS1dWRm9OaloxZDBkYVYzazBN
      VmROVjFGVWMxWkljekZ4VVRkNk9XZDRUVzVIYmt4cFRtd3dlVFV2UjNrNGVXeDZNZ3BJVjBod01r
      cGpSRlYxY0RoYWVFdGxkSFpYT0FvOVJGUXJNd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-86518-8
    - PCI-DSS-Req-2.3
    - PCI-DSSv4-2.2.7
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sshd_use_strong_kex
  tasks:

    - name: Use Only Strong Key Exchange algorithms
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*KexAlgorithms\s+
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*KexAlgorithms\s+
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*KexAlgorithms\s+
            line: KexAlgorithms {{ sshd_strong_kex }}
            state: present
            insertbefore: BOF
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Use Only Strong MACs
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sshd_use_strong_macs,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Use Only Strong MACs
  hosts: 'vian.local'
  become: true
  vars:
    sshd_strong_macs: -hmac-md5,hmac-md5-96,hmac-ripemd160,hmac-sha1-96,umac-64@openssh.com,hmac-md5-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,umac-64-etm@openssh.com
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVlhRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      NXpVVkF2YW14SmRGYzRaRVpSWWtVeU9TOXVXVWxMY1ZRMUszVUtkRTh4WWpSWFpsZEVPRFY2YkdR
      NVEydDVRemxZUVdoYWRWazVUemhzZDJwclEzZENWbVJEYm1GT1lqZzVkbTlKYkVSRGRWVlZlVEJV
      Y2xvM2RIZzRWQW94WlZSM2MxTmlMMnRWV1dWNVZXeGphakExVDJGTVRVZFZjR00xT0ZwQmFGVlhR
      VWQxZGs4MEwyaHNka05TWkRVNFJEbFJjblpzTldZNVluWnJSWGhhQ21sU1NXUm9WbGRCWXpoWldG
      UXlhRFpWZDBrNWMzZzVZM2wwWlZCVUsydEhRa1JCVFRabFFVaHdRU3M1TVZseE1Tc3hWWFJHZFZS
      eGJreDRja1prT1hZS2VHVmxURXh6Y1VzeFF6SndNR2xTVFdRNFMwTnljRkJNTlVwUVNHOUJSRUpx
      VjNoMUt6UXdkWGxFVDBJeFN6TldWa1JCUTA1RldXSTFLelJETm1VMlJncHhUa3MyU2lzeVNVaE5k
      VW94ZWpObVlVNW9NWFpwTkcwME5WVnhXa0pyWlVNMWIyZHZlVUpWV0ZsTk1GWjJTV1pYZEdvclp6
      ZHdjRWxxT0Zsd2JWVlRDbGcxUXpoTE1HdERVek5WWjFodWJ6aHVVMWc1VkRkVVNuTkdhR0ZXZERG
      dGVGbHFXRzFVU0d0S1pXMUxjRzVoY0VJeGRURTNWRWxsVjBaUFVrcDVjMVVLUVZkNVRHZE1kemx4
      UkZsaWRsZHNSRnBoZFZCamRrcFpOVTFwTDFOTVYyUnZOakJZTkZOalVWUmFZekptYjJZemIzRnFa
      R1pHY0RKUVUwZFlPVll2VHdwVVZtRm1ORVIzTlZSUWMxbExjR2xOSzJ4amVVbG1ibTVOZUZsb1Iw
      VnNia2tyYmxOWk9WTmhaVkp1VWpsV1RHdGFlRWRHY25sa09HcHJjR1JTVWxsSkNtUkxZa0pIY3pS
      b1NsUk9ObGR2YlM5bGVWcE1jV2RwYVVnd09XWnVZbFJTVlhKS1dqZHNibWRtUVVacWQzaEljWE54
      ZVdwcWRETjZSbUZhTTJkeE9XMEtVWGxpY0RSSmVtTlJhbEpyVkdVNGFtaGhRMlpQT1ZWelJ6STVR
      VkUwVWtKTWVGRTVSM0poZVRWbFRXRldaR0ZUV0hZMWQwNUZiVVZVTDBJNE1rSmxVd3BEY210SlIw
      aFRXVTVGTkhOTlNFRlBMMUJyTndvOVRVTXlUZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-86504-8
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sshd_use_strong_macs
  tasks:

    - name: Use Only Strong MACs
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*MACs\s+
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*MACs\s+
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*MACs\s+
            line: MACs {{ sshd_strong_macs }}
            state: present
            insertbefore: BOF
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Ensure Only Users Logged In To Real tty Can Execute Sudo - sudo use_pty
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sudo_add_use_pty,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure Only Users Logged In To Real tty Can Execute Sudo - sudo use_pty
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-83798-9
    - PCI-DSS-Req-10.2.5
    - PCI-DSSv4-2.2.6
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sudo_add_use_pty
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVklRVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      cG5iMUZCU1dORmJVeDZVSGw1TlZSdlJXaE5SbTVqZWpsR1VrMEtTblozYTJWUWVURjFNRlJuU0N0
      bWNYcFpUMGRxYmsweGRIQlVOR3RTU0hCMWRXWlVhR293VkdsTlVHcENaWEEwZW5CTlFrWjFiV1l3
      V0dobWNuRlFWQW96UjA5eVRHaFVkMjl4ZDJsNVdFTXhSVEExVURsdmNYbDNjMU5tYTJ0cFRHMXlX
      RGQ0TjBSak4zWjRhbTlrZFU1WUt6RlRabGszU0Zoc2NYTXZObk5GQ2tKak5VODBSM05FVmtneFFU
      VXZXV1ZTZDNOMFNpdDZiRXd4ZUhVeVF5OVVRbU56ZEVwTWVrc3pTV3B4YlhKcldrZ3ZaSFV3Um5w
      UmJFMWxNSGhqVlZZS1VETnZRVVpFYnpRMGNXSlRhbWRNZVVoRlVWaFVaR2RsYzFOQk0wcFhhRUpP
      T1M5emNYVXZjSFZUU0ZFMVNucGpTVEZYYkZOVVkwaFFjME0yWVhNMU13cDRabVJJVFhabGNubDNS
      RGN3V1VSVlZFdG5TM2xYVUZadU9FNVdRWHBQUlVoeVNqSmFZekJLUkU5VGFUTm1aVWd2TW1WalFt
      MWtiWGw0TlRBeFprc3lDbXhuZVVkblUybHVjWFIzTlZoMFlqUk1NSFpyWkZWS2NHVTVVWEZKWlU1
      WFZtTkhTRzB4U1c1NGFGRlJORU5ITkU1ek0wUkRZVlpvVXpobmRpdGFSVmdLWVZwVFRVUXZiM1Uz
      UlVGTVFsVkxia0Z5UTNoeFowUllhRWsxUnpjdlFsRjBjSGd2TW5adFRVRjVNV3ROUVVaUk5TODVi
      amhyZUdaQ1IzaHJVVGxqVmdveWJ6SldkRWhtY2xSdlVrTlFNbXRrVVZSamMweHVTbTVUVjBoUFR6
      VjVjbE5PZFVSdldtbFdlVm94TVhjclNWWkZNRzh4UzJGdVFuQnRVblZRSzFacUNtSmthVkZTYWpN
      NFZrcEpXak5PY21OblNqZFhWR0pHYkVaWksybE1jVkJFV0hwTVVWVXJSMUZJWm1oYU1qSTJNMVJs
      TkZkd2RFcGtUV3BsU0VkUmVEZ0tZbU4xUjBoVk5qUTFNbUV6Wm5WcVVGZHVObVJ4VlhCNmIybDNX
      a1pJVlhOdk1sUjZZVGhvU21OcldrUXhiVVJzT0hwelJHWmpPU3R1TVRWRE5ITTNiQW8zTWxwWlpY
      aGhlR3ROUTFJeVkyWTNNa1pPUmdvOWVHczFhZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Ensure use_pty is enabled in /etc/sudoers
      lineinfile:
        path: /etc/sudoers
        regexp: ^[\s]*Defaults.*\buse_pty\b.*$
        line: Defaults use_pty
        validate: /usr/sbin/visudo -cf %s
      when: '"sudo" in ansible_facts.packages'


# Ensure Sudo Logfile Exists - sudo logfile
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sudo_custom_logfile,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure Sudo Logfile Exists - sudo logfile
  hosts: 'vian.local'
  become: true
  vars:
    var_sudo_logfile: /var/log/sudo.log
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVklRVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      VlRaMUF2TWtnd1EzTTNiSGR1WTJsNk5rVkhOemMxVlhsMVNHMEtlWHBqVlZGdVpHbEVhR3hUWjFs
      eVkzcHZPR3BDVDNOclVtRjFjRFEzUXpjM01FOXNhMlJKV0ZOb2FHRktaM2c0ZURGU1VYRlhSVFpq
      YjA1cUswbHBUd3BVVGpnMGVVaFJWazB5VkdSU1F6SlhTMDFXVkhJMmRYRnhWelYxVmk5SGEzWjZZ
      VlpRZW1WWlpsQmhTalZqYldoMFIyeFhWVVE1UjJZeFpXMVpLMFY1Q21KT1MybG5TRFZyY2xJMGRr
      bFplVVpKU0RNeWNuQlZXWEF5YW5jNWMzRkRPUzl4WWxoeFEyMUJWalJ3V2tSbVVVWlBaRzR6VGts
      aVRUTlZla3h3U2pVS1JETkNNbE5NTDJGdmNUUkZiVzg1YVVObVVsWXhZVTlRYzNKeFdURmhWMDAw
      VGpsdWJVdDNaMUJqWTFreFRsVnlWbEp2V0RCS1lqWkxaSGMyWjI1bk9BcEZLMGd3ZFV0WFZUZ3lj
      akJXVDB4dlltRnFVRU53UmxseFlXMXlTalZ2VkZsV2VFSlRWSEZGV0doT1IzSnNTazU1ZG5nMFMx
      TnNVMnBKWlhsNE9Vc3dDbFpESzBKMFFVMVpaMDlvYzBkcGFEbHZWM0UyUmxSMVlVbFdaM2hFVkVr
      NGJVbFZjREJPZWpWMlJVWTVZMWx5YlRkWlUweFhURkJ4TTFRMU9HbEVSbkFLUzIweVYwTlNkbW93
      VFhCSWRrTndiMlpsUWtscE5YbFJXVEpQYW5vclZrazFXVzFuTkVkd2VuUlhUa2R0UW5KWk5rTnha
      RXhoWlhGek0zSnFXV3M1ZFFwUE1IQlVSRFpDZUhrelNrSllNakk0TWpaa1MycHRNblJQS3pSWlRV
      TlFRMDVIY0U5aVpVOUlUM281ZFVOUlMzRTVSa1oxTmpOcWNXRkthSGg0Tld4ekNuaHpOVmcyU0dS
      VU0xSlplSGRQUjB4R1FYSTRhRXR4VEVZNFIydEtZVGxRTURGbE1XNW1lVzR6YmpsTVNFeHVVRWha
      U0RSdGVVMXdWak5xWWtaRFYzWUtTSFk1TW5GS1dIZzVUVGRGVmxKb1NWTk1Ua1Z4WjBWcllsRk1T
      MGxhYzJ4QmMwSTBkRFJOTUZSQ2FYcG5LM0l3ZVZGYVZXZzVVVzgzTWxkcU9Ib3JOUXBxUjJJM1ow
      bG5SbmxGV0RSTVRqZHFNR3MyVmdvOWMxQXZkUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-83601-5
    - PCI-DSS-Req-10.2.5
    - PCI-DSSv4-2.2.6
    - low_complexity
    - low_disruption
    - low_severity
    - no_reboot_needed
    - restrict_strategy
    - sudo_custom_logfile
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Ensure logfile is enabled with the appropriate value in /etc/sudoers
      lineinfile:
        path: /etc/sudoers
        regexp: ^[\s]*Defaults\s(.*)\blogfile=[-]?.+\b(.*)$
        line: Defaults \1logfile={{ var_sudo_logfile }}\2
        validate: /usr/sbin/visudo -cf %s
        backrefs: true
      register: edit_sudoers_logfile_option
      when: '"sudo" in ansible_facts.packages'

    - name: Enable logfile option with appropriate value in /etc/sudoers
      lineinfile:
        path: /etc/sudoers
        line: Defaults logfile={{ var_sudo_logfile }}
        validate: /usr/sbin/visudo -cf %s
      when:
        - '"sudo" in ansible_facts.packages'
        - edit_sudoers_logfile_option is defined and not edit_sudoers_logfile_option.changed


# Require Re-Authentication When Using the sudo Command
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sudo_require_reauthentication,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Require Re-Authentication When Using the sudo Command
  hosts: 'vian.local'
  become: true
  vars:
    var_sudo_timestamp_timeout: '5'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVkpRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      VjZRVkZCU1U0MGJWZFNUVVZQYVdNdlNFVlhRVnB0ZERGcFNERUtjMUZUTURKSk9UTm1lblJHUXps
      cVN6Y3JRbEp6TjNscFZqazNia1IzS3paMk9YUldPVVF3TldoUGFEVjNURlZrYjNvNFZYTlJhRmhQ
      TDA1amRWVkxhQXB4ZVU1bVNUSjRkbWhTYTJ4bVNWSmlabmRIVGtoeVNrSmFZMmt5S3k4NVlTdHpW
      VWN5TjNaTVFVeHJNblEwU2pkSU5GZGhlVTFZTDJoQ1NVMXBiR2huQ2s0eVdrSmpaVVJwUkVWdWFr
      WkJVWGNyYTJOck1WSlFhakZQTTI5QmFYb3hjVXRqU0c5UlMxcHBibTA0ZEhjMk1WcDJRMUYyWkdz
      MldqWk5TM0JqVWxJS1NrbHdWVXByU2k5U05ucDBOVTlwSzFCSVJIRkNkWHBuYld0TWFXcG1WMFJX
      TWtsbFlVRnFiMkpNY2s5UVMyRkRSVVZCYkZOTmRTOTZkblZtWjJSdUx3cFhMMDlLUWpaU1MyMTFN
      blJrTkhoblRrb3dVMm80UkhObUsyTjVaR3d4UjNKT1VWUjVhRUZ0Y1VjNWFuZGplRmQ1ZWpCRFZY
      ZExUVmhCU0c1c1QzbFFDbVI2ZWtsWlRsaEhNMk5RVjJWNVZqbDZTelpqTTBkUVl6QnpORzFqTDBs
      aGNVODFabVJpTm05MVoxVXZXRzVsY1ZoMlVDOVZVMGt3UlZWbk9VbzNRM01LTjJoNGVqZEVkRXRW
      U0d4WlVsUnVkbVJHVDFOMVl6WlllV2N4UWs1dlYxbzFjVGx0WTFkaE5tMUxUVmwwYlVSdFVuVlFi
      RTV3WmpKbVJXWTBWRnBUUkFwbU5XeEdWalZhU0RsSEt6QTVNWFZNWjA5dmNWUXZTblUzTjFCS0sz
      VnNkWE4yTDNwRmQwbFNRbk5TZEdWa2VXeFNTMHAwZG10TWQxVnNNalZuWVRkSUNqZHViRzVMWTJS
      dVZHVlRhV2c0ZEUxa2QwRXlhR3RaWTNVck5sRnVURGhuVG1WcFVVUnZMMkpYVDAxSFVFTklUUzk2
      TDBrM2QwUlJXRzVwVkVoWlpuY0tVRFZSUzFkM1N6TjRWbEZ2ZFhwQ05VZGpSbGRVWldOd2JqaEJW
      MGROTVdvM09FbHNhSEJ2WVUxdVkxVjZka05EYVZGcVFXc3ZRWFZyU2pORlZsTlRTZ3BqT1VreVdr
      aGtSMkZqZVZGTWIxTkZZMFp4ZEFvOVkxVk5aUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-87838-9
    - DISA-STIG-RHEL-08-010384
    - NIST-800-53-IA-11
    - PCI-DSSv4-2.2.6
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sudo_require_reauthentication
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Require Re-Authentication When Using the sudo Command - Find /etc/sudoers.d/* files containing 'Defaults timestamp_timeout'
      ansible.builtin.find:
        path: /etc/sudoers.d
        patterns: '*'
        contains: ^[\s]*Defaults\s.*\btimestamp_timeout[\s]*=.*
      register: sudoers_d_defaults_timestamp_timeout
      when: '"sudo" in ansible_facts.packages'

    - name: Require Re-Authentication When Using the sudo Command - Remove 'Defaults timestamp_timeout' from /etc/sudoers.d/* files
      ansible.builtin.lineinfile:
        path: '{{ item.path }}'
        regexp: ^[\s]*Defaults\s.*\btimestamp_timeout[\s]*=.*
        state: absent
      with_items: '{{ sudoers_d_defaults_timestamp_timeout.files }}'
      when: '"sudo" in ansible_facts.packages'

    - name: Require Re-Authentication When Using the sudo Command - Ensure timestamp_timeout has the appropriate value in /etc/sudoers
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        regexp: ^[\s]*Defaults\s(.*)\btimestamp_timeout[\s]*=[\s]*[-]?\w+\b(.*)$
        line: Defaults \1timestamp_timeout={{ var_sudo_timestamp_timeout }}\2
        validate: /usr/sbin/visudo -cf %s
        backrefs: true
      register: edit_sudoers_timestamp_timeout_option
      when: '"sudo" in ansible_facts.packages'

    - name: Require Re-Authentication When Using the sudo Command - Enable timestamp_timeout option with correct value in /etc/sudoers
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        line: Defaults timestamp_timeout={{ var_sudo_timestamp_timeout }}
        validate: /usr/sbin/visudo -cf %s
      when:
        - '"sudo" in ansible_facts.packages'
        - |
          edit_sudoers_timestamp_timeout_option is defined and not edit_sudoers_timestamp_timeout_option.changed

    - name: Require Re-Authentication When Using the sudo Command - Remove timestamp_timeout wrong values in /etc/sudoers
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        regexp: ^[\s]*Defaults\s.*\btimestamp_timeout[\s]*=[\s]*(?!{{ var_sudo_timestamp_timeout }}\b)[-]?\w+\b.*$
        state: absent
        validate: /usr/sbin/visudo -cf %s
      when: '"sudo" in ansible_facts.packages'


# Enable Randomized Layout of Virtual Address Space
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_kernel_randomize_va_space,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Enable Randomized Layout of Virtual Address Space
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-80916-0
    - DISA-STIG-RHEL-08-010430
    - NIST-800-171-3.1.7
    - NIST-800-53-CM-6(a)
    - NIST-800-53-SC-30
    - NIST-800-53-SC-30(2)
    - PCI-DSS-Req-2.2.1
    - PCI-DSSv4-3.3.1
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_kernel_randomize_va_space
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVkpRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      dDJRVkF2TW1oNmRFTTVaRUl3TWtSQmNIUnliRk5WVmpCNk5Xd0tjMk0wYmswM2RFMXZTa3BLVnps
      WmJIVmliRmhLZFRZM1FYcGFOVTlVT1hacU1VdzJVR3hsVlVvNWRpOXBabUp5UjJSd2EwRnFlV1E1
      U0VwMmVFRkhOUXBHTTBsWUx6VXZkMWwyWVRoWk0zcEdPRkV5YldsdmIwbFNSR3BPVmpoR1VrWlJU
      RzlJYm5ZNVRsSjZWbmM0YW5KSlJrb3ZkSGN2TUhOWFZsZG9OVmMyQ21WWk9HRkxZbkJHUTFsalkx
      SlhaMjlKZDFsNVdVSXhiM1IxV2psc1JtNHpObnAwU0ZSTFNtaGlVREp4VWtselFtNWhVRmx5UkZC
      T2RWaFJXbmxHVVVRS1RTOXVZM1ZEWjA4MmFXVm5PVWt2VFU1eUszazRTMEpVUjNOd1QzVlpZVWs1
      Y0RNd2RtdFZPREIyU2trNU5VbExVMWc1VEVKd2JHbEdObVJpTldkS01ncElSMlZaYm00elYwdGtk
      MVpJVVVaT05tbFNVM1JrWkdzMVJqbHRUbWhDVUhOdFJEQlhPSFZvVFRaNFMwNXdWRm8xWkZwTGRt
      UlRjMmQxWkU1TFZGRk5DamcyWTBZeVVHWkJWbEJuWkZocVNrbHlRa0p3YnpCUlFqQnhMMmc1VUZs
      Q2RERklkbFJzUkVwVVNFRnZZMXA0Y0hkRFJIUnJXSGRNTTFScE5qZEJWbElLUWtGc2VuUmxSVUZ2
      UTBSVFZXUkxMMjkyZGs5NlNTdE5jRWc1WnpSc1p6TXpOVGhZU2sxVE9WSmFUbFZFVDBGcVNHMUVN
      VFp4UVVKV01UZHNWa1JzU0FwUE9GQlRhbGhUUmxaVFRHTk1lR1JTU2xKRE5uUkZSVFpSU1dGak5F
      OUtVM0ZwU0d0d01GVktWazkzU0VZeVNVMUZOWHBsY25wTmVFSnVOa1oxWTJSTkNuRlhVeXRFYzFO
      SWNteFplVlZ5VWtKbVRpdHhkblZwZEZCMVFWZDFZbmQ0U2xGa2RXOWxVbEJXYUZwaFMydElXa2h5
      Y0V0d1FrZEVZMDlsTkZKRGNDOEtjVkpZVDI0elUzaHlZMU5TTmpjMVRFbzVlbXdyZEM5ck1uSnJX
      aTh2YUUxNFdWWklVV3h5YXpaMlNFUldNMUJ2WTFCVE5EVjZjMHhQWVVsYWNYWllMd3BKUlRjdlpG
      SkpUVVJOTDNab04wRktRazg0Y3dvOU5sRkZhd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*kernel.randomize_va_space.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Comment out any occurrences of kernel.randomize_va_space from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*kernel.randomize_va_space
        replace: '#kernel.randomize_va_space'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Ensure sysctl kernel.randomize_va_space is set to 2
      sysctl:
        name: kernel.randomize_va_space
        value: '2'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Restrict usage of ptrace to descendant processes
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_kernel_yama_ptrace_scope,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Restrict usage of ptrace to descendant processes
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-80953-3
    - DISA-STIG-RHEL-08-040282
    - NIST-800-53-SC-7(10)
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_kernel_yama_ptrace_scope
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVllRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      cG5XVkF2VWpKMmRtSlZZVU0yWnpOaGJXNVpOWGRLV21wblJVTUtVRVZxU2pCRlNrRlFWek01T0ZO
      QmIyRlhMME5KU2xCMFpqaHFjeTgyWTAxNGRHUTBiVFpRVEZKVGNVSndZazVJVGpOclpubHJjM05o
      YmtRMFJtTlJZd3BzUkdGck5XUXpVRmRxVFRaT2IxQnJWMDlMYTIxTGJsaEJTSE15TWk5U1NGRjNN
      MUY2U2tWVGFHczJhV2Q2UzFGck5tWjJTVWt5YUVKYUsyTlVVUzlvQ21Ndk9XdHVOaTl1UlVoR05H
      TXJNa1JNVTBZMFdscFpabkJvUzNsdFFWTnFkVkZsVTBGMlIwRnVaM0JPT1ZCbU0zRnRjakkwTDBO
      blkxbzBaR056ZFUwS2JHUjBkbFphU0RsQk0zcEtibVZQWlVKR1RtcDRhMVpKY0hGdFJuZzNLMEZU
      ZHpCdE1XbDJjMFZxWWxKQlpFUk5aemR2TmtaTFZXcFFRa3BRVFhacU5BcEpaemRJVEhZME4xVjZV
      bFYzVm1wSE9VZExlbkJuYUc0d2JVTklWbVpPVGtsMVlqY3dRM0kxVG5WVWMyTlFWWFpLYlV0UGEy
      VmllWE52UjBndlJuUXlDbmM0Ym5jM1IwdzJObWRsWTA5SUswNDJSMlZ2Vmk5V1JIVkJjMlphZGk4
      dmFFY3ZLekJaTVdzMk1XeHhhMVZ3VVhFeU4zUklNVlJQYVV0Nk1ETnhUMkVLWnk5YWMzZDFabVpu
      VTNsUlpqTTJTSFJwVkRkNlR5ODVUMHRhUm1OSFRTdHJNbUZHZERSV1V6SXpiMGxQYUZWWmNtWldj
      RXhwT1hoMWJGSmxRa3BZVFFwVVYwSTBUamxYYlcxTVowNXRSMDlwU25ab1JWTjNiWEpNWVZkVFEx
      cFpVV2hRZW5Wd1ExZGljRzFTZDI1eGMyeGFORXRuWkVWTmVITnVMMHAzVFN0VkNqTk9lamgwY1dO
      MVpsZFRZaTlIV0ZwcVVuQTBPREp4YTFCSFRuQmlkbVJpYjFFd2QzRkpSMVo2VTJWUGRrZEZkbHBZ
      VWsxUVMxUklja0pHTkZneFZIZ0tjR1o1WlZOSGVuUXJTak0yY2pkMVNFTm9kbGx5UlV0cWJVZDZZ
      bGR2YzNkeldGSkZTekpqZW1WWlRtSkVZM2RXVFZKdVIyZGpTVzh3WjBGcGJuVlhZd293VW05clpX
      eDFSa0ZQUTBwVFlWZ3ZNMjkxZHdvOVpFbHBOUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*kernel.yama.ptrace_scope.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Comment out any occurrences of kernel.yama.ptrace_scope from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*kernel.yama.ptrace_scope
        replace: '#kernel.yama.ptrace_scope'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Ensure sysctl kernel.yama.ptrace_scope is set to 1
      sysctl:
        name: kernel.yama.ptrace_scope
        value: '1'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Disable Kernel Parameter for Accepting ICMP Redirects for All Interfaces
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_accept_redirects,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Disable Accepting ICMP Redirects for All IPv4 Interfaces
  hosts: 'vian.local'
  become: true
  vars:
    sysctl_net_ipv4_conf_all_accept_redirects_value: '0'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVkpRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      WlhaMUF2TWpSM2JYbzRSaXRZV1V4SVVUUm9aM3A0WmtWR05EZ0tTakI2UVhSVlFUZHdWME5oUW5k
      NGRXZGFWVFo2VDFJMmNVeFRZMlpFYVRkb2FGVjJSblJtT0ZFM2Rta3pTbGhUVjFvelZreERNMnBZ
      TkhSQ1puVjVRUXB2Y3k4ek1GTlNORGxXVVU4eU9WRnhlR3hDVVdSeVUyVlVNbGh5WXpoTWRFRkhj
      ekpNU1Vwb2ExcElia2R2VERkVFJEbFlTbG96YTIxNGJXMVplWGRWQ2tkSVEzSklkRVJUVjNwR2Jt
      cElTRXBUU1RGWFIyTm5SbU51ZFRkck1DdDZaMm93V1hocFZITlRTRlU1YW1GcGNUSkhWV3hGUVc1
      cmMxbDZhbGMxVVhNS1owMTZMekpJWjFnd01rRXdlalJIVjFjd2QybGlPQ3M0UVRScmRGaDVMMVEz
      ZVVObU1VRkRaazVuVjB4U1F6SlRkRlY2YTNKSFpuWTFVR2QxYm1oQk5BcFZSVXB3YkZKeFVVSTVj
      a3hSSzFwdFoxaG5WVWROTkdSd1EyTlhXa3RtWkZwQ1YyVnpMMGxSZUROVFVrWTRiMjVqYkN0TU0w
      RnlWa1ZuYTBKeE5tRklDbmd5ZVhKcVJsSmhLM0JNV1Zod00zbElPWEpTWlVrd1ZXZGhjMFZaUkVo
      Uk5HNTFVV1ZoUzNod2VFTkJiV1JsT1hsUWRscHBTMk5uVFhWRk9YWllVMVVLTm5nMldYRlZXakJr
      Y1c5b1dFdEJZWEI1WTB4QlJXODJaV3B4VWpOTVVuSjBkMVJoUlhSeVFVbGlLMDVYYjFwRFJHOXVS
      VXhGWWtJd2F6aFZja1JtYWdwTFRtUjZXbkUxY1ZJcmRIRndNblJIVWpZNFVsVkRUVUpMTDNKd2Ix
      aHlTVEJ2WmpWdWJuRmtUbVJwTkdsaWJsRkZUVU01SzNNMU5tWkZOR0p0TW1SWkNrSkphVWhDYkZk
      SlRWbHpka2hFZUZWSFZrMVFOemdyZFhkNlJTOHdRMDFKUjBRclJXTnVVbTExT1ZsTVRsSmFWbXhQ
      WTBSdmJsSlVSVXQ0TkhsbE5HY0tOeXRCUms5cmVESnpSUzgyV1ZCTk0wTm9LekEzZEdrdk0wY3hj
      akYxUlc1R2FVSjVRbTV3Y1ZKMVJtRkZhMnAxVGpGSVZsaFNWek5GZFVWNFp6WXhjQXBDZDFFMU5W
      VnNlRkowV1RWemVuZEtkVU41ZFFvOVNURlJZZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-80917-8
    - CJIS-5.10.1.1
    - DISA-STIG-RHEL-08-040279
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-SC-7(a)
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv4_conf_all_accept_redirects
  tasks:

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.all.accept_redirects.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Comment out any occurrences of net.ipv4.conf.all.accept_redirects from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv4.conf.all.accept_redirects
        replace: '#net.ipv4.conf.all.accept_redirects'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Ensure sysctl net.ipv4.conf.all.accept_redirects is set
      sysctl:
        name: net.ipv4.conf.all.accept_redirects
        value: '{{ sysctl_net_ipv4_conf_all_accept_redirects_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Enable Kernel Parameter to Log Martian Packets on all IPv4 Interfaces
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_log_martians,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Enable Kernel Parameter to Log Martian Packets on all IPv4 Interfaces
  hosts: 'vian.local'
  become: true
  vars:
    sysctl_net_ipv4_conf_all_log_martians_value: '1'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVktRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      czRNRkF2YVVnM2JGZDBRM2xqWmtwVGRtb3ZhWE4wY1RoRFVFSUtTM2xoU0RsRVJVMUpSMDh5VjB0
      Mk1GWlZXbE52YkV4b09FVXphWEpFWkRKSGVrdElZaTlDTURWTWR6bEdUbFkzWW5OQlprOXVSRWRN
      ZVVKbFRUWnZSd3B0Vm14QlQxbzFhRmRVZDFGWlFuZDNVRnBUVG1NMlQwcHVWVEpHZW1NM2FIQkxZ
      bWhJUW5wT2NqaDNja1F3ZEVGM1dtMUdVSGhZUkV4Rk5TdG9lREpQQ2s0clIxcEhORWxaTmpkck9E
      ZHZVREUyT1c5Q1RIVkJhbXR1Um1wNVRTc3lSbXhqYUVsQlpWcG1jM1ZKWjB0Q1MxUkdRV3BpYVRW
      TVozbzRNMlZTUmpVS1dHRXZhR3h3YTNGWmRuaFBOV2gwZEd0d1UzUnBTV2RoU2xrME1uUktXVloz
      UVU4MFMzZGlVbm8yWmtadFpXVlFNVmxhYlM5bE1Hc3djRUVyWlhsU1p3cG1TelJvTUc5SGEwa3hU
      RWRqZUZFNVdVRTVSa2h2SzBoRmFWbEtPREJTUmk5aGRqQktWSEo1VWpRNFEydGhkSGRvZVdkUGRs
      cGtjVzAzYzJFeldWTlVDbEppUkhORE1rZElXWGRTU1VwbE0wSjNUVVVyVWs1bE5ERm5aMUZtWTNV
      NFdqVldZV3BFWkRGc2FXdFZLMFEyTmtaQlJVcGlWMUprUzFFemJVbGtORWdLWlc1V1VXWkZjM0Zq
      UVRCRlNYbHZaREYwTVU5TGVYRnVRM2xvWVRkTlJ6bHhNMGRxU3pOUkwzWklUeXRTUzJNM1QyWkpi
      RTVOVTJVckwzTXpkM3BNU2dweWNYRmxXWEZFVkhaclRVVnJURmRpUjBNeFVtVlFWRUZFVGs5aGFr
      a3dPRmQwTW1oTU9HTjZlRTkwTkN0MGRrNUZXbU42VmtaWGVVNTRUR00xZVVKeUNtRTViM2xsYTBS
      T0wyUjRPVkZLZEV0YVYxRTViak5TTW1ocmNHOVVkakJUZVZSUU0ydE5iMU51Y0ZwVWVqbFVTVFZI
      VDJaNWNVZHBNVGgwYlUxcmRsUUtOV3hLTm1nNFpHNTRPRGM0ZFhkMGN6SXZPR040WkdOT1VUZHNh
      RGhPTHpadGVqVkhhMGhXWlU5WlFWWktZbmQzVm5RMVZ5OTNZVFJwWkdkV1JHODRhd3BFUVZKQlNV
      UnFXVXMwZG1WNk1qUlVlbHB0YUFvOWNsWlROUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-81018-4
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-SC-5(3)(a)
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - sysctl_net_ipv4_conf_all_log_martians
    - unknown_severity
  tasks:

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.all.log_martians.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Comment out any occurrences of net.ipv4.conf.all.log_martians from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv4.conf.all.log_martians
        replace: '#net.ipv4.conf.all.log_martians'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Ensure sysctl net.ipv4.conf.all.log_martians is set
      sysctl:
        name: net.ipv4.conf.all.log_martians
        value: '{{ sysctl_net_ipv4_conf_all_log_martians_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Disable Kernel Parameter for Accepting Secure ICMP Redirects on all IPv4 Interfaces
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_secure_redirects,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Disable Kernel Parameter for Accepting Secure ICMP Redirects on all IPv4 Interfaces
  hosts: 'vian.local'
  become: true
  vars:
    sysctl_net_ipv4_conf_all_secure_redirects_value: '0'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVkxRVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      bDZhMUF2UVhaeGJqaHVWbXMwYkdWd2J6ZEZUekpqTXpRM09VOEtOMW8wYVVSeVNDdFdObGd5UVhS
      RlFqY3hWVk5CU0ZCQmJWTkdkQ3MxUzFJeGRraHRaVkpsT1dwYVoyZHBUMDA0VVVOdVlYaElXRzFT
      Y1ROdEsxUkRjQXBGVW14WmN5c3pVMHhoWjB4d1Myb3JlaTkwVEdsdVJYaE9URkJKY0dwaWVuaEZa
      bFZLYzNCS2QwcENhMk5xVWt4b05ISjZkRzQyUW1wMVQyNWxiamRZQ2pWQ1QwUkRTbGRMYjB4UUwz
      bHVVMDFrYjNBMVdERkljREJTVXk5RE5ISmxNbEpzZWxsSVZtczNUMjF5Unk5T1QxSXhZWEp1TUhR
      eWIySkZNVkJRTld3S1QzTnNlazExZG1zdlVHZDNla0ZzUzBGMlFsVTJlbHBvU25GclptSlZPV2Rt
      TW5obFlqTlJhbVJNT0VOSU1YTkpXV1E0VkRocGQyMXVUSEpwUVVkSU1RcE1ZVk5uZHl0UmNIRmFX
      blF6Ym14aFIzTTNOa1J5UnpNeVprb3lUQ3RUYlhvNWEyaGpja3hSUzFSSFpGRnRaazVuWlZGWVNG
      aE5URVpHTkRWRFZWZDNDazlaUTA4elFqZFRVbVJIV1RneVpqbEJiSE4zVlZCS2NVTnNiRVZMTUdk
      RWQxQnVWSEphVERoNVUxaE9hV3htVVhWSU1scHpTbWRpTkc5S1UxaHhSV3NLUjFwbWJsQnlWV1JT
      TjJwU1F6Uk5jV1EwYjNOTVNXbENRWFo1S3l0NlUxSmxNM3B6TlVzNVEwNTRPVWhWVTBGTGJIWmtk
      QzlsTjJSblJXVkpWM000YndwVGNYVlVOa3QwUzJWUksyaHhhelF6VDA5M1MweDVaMmRGVWxJeFZY
      SlFLekZIVmsxWlluWnViM0JDZURSTmFrUkJUWE0yT1RkSlVYSllkWE5PVW5oTkNuSm1URUZNZVc1
      Q1NHUkNORGczU2poSVlqQnJNMHh4ZG5kRGVIaEdkV3RUVW5kM1IwTlFjRVEzTURkdWEwbHZUelEz
      UjBvcmIyb3ZNazl0TlZoemVrNEtiamhXWm0xd1pFbDRjQ3RTU0VVNVVERkNZMDAxTUZCWFQyOTZT
      a2x5VjNOd2VYbHFiVzFrUTJ0SmNXOVZhV1pLT0dkWFdYRXhkV3B6V1NzNVMyWm5lQXBuYzNVcmVH
      aEhZVzh5WWtkVlR6Rm9lSFZNTVFvOVlXeHFWd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-81016-8
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-SC-7(a)
    - PCI-DSS-Req-1.4.3
    - PCI-DSSv4-1.4.3
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv4_conf_all_secure_redirects
  tasks:

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.all.secure_redirects.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Comment out any occurrences of net.ipv4.conf.all.secure_redirects from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv4.conf.all.secure_redirects
        replace: '#net.ipv4.conf.all.secure_redirects'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Ensure sysctl net.ipv4.conf.all.secure_redirects is set
      sysctl:
        name: net.ipv4.conf.all.secure_redirects
        value: '{{ sysctl_net_ipv4_conf_all_secure_redirects_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Disable Kernel Parameter for Sending ICMP Redirects on all IPv4 Interfaces
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_send_redirects,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Disable Kernel Parameter for Sending ICMP Redirects on all IPv4 Interfaces
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-80918-6
    - CJIS-5.10.1.1
    - DISA-STIG-RHEL-08-040220
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-SC-5
    - NIST-800-53-SC-7(a)
    - PCI-DSSv4-1.4.5
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv4_conf_all_send_redirects
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVkxRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      NDJZMUFyWjB0eE9HUkRlVGxwZEc5emFWVkVNRVpFVTBsU2NuVUtZMUJJV21SbmFEbFFOREk1UmpR
      NVRqVnphVXhqTTBOWlNUaE5PRFZCYjBaNllWWkdOVzFZVWk5NFVHOHlTR1UyYTNGNE1EZE9kMVZa
      Tkd4d1pESXliQXBHVmtReWFFNTBWSEZpWmpkSVJIVm1jWG81U21rMFVWVjBPRUZCUm1WQkwzQjNj
      VWhEUW0xYWVreFlkRWM0ZDA1UFkwRlViVmxVWjFkeVdEWlZhV281Q210bVVFZFRSV3QzYTJNMFJW
      Sm9RamxuTmxFMGNua3hVRmh0UVVoaU9VRlRaRWwwY1dGaE1XUkNjbGR0UjBOcE1ETjVOa014UkVo
      a00ydGpPV1Z5S3lzS1UzRkRSMjlrVWxOTlVHOTVSU3Q0UTFsS2EySlhXVmRQY1hWS1p6UXhiSHBa
      VUhGVFUxaEdaRWhoY1ZFMVEyZFVORFIwUkU1RldGQnRiRkJpWTBoWGJ3cEVhbWxDUjJsUllqTmpi
      Vk55TjBOU1pXTnlhREJ2V1ZSNE4yOXBNemxHVjFoSVZrZHpkakYwVTFKYVltZENORGxzYTBOdGNF
      eFRaamhKY0UxemNsWlpDbVV2Y0VkWU9TdHZhRVI2U0VOak56UXhaalVyWmxSdVNtZDJjM1V6U201
      WFQwVjZlR2RWU1c5YWFVWjJVRTF4TmpNMk9IWjRNRFZZYUdwU1praDRRM1lLYnl0NlpYSXJNRGMz
      WVVwYVYzbFpNbG95ZVRGTWFtVTFaWGt3UXlzeU9YaHdTekJsYkVKT1RVNTNRV1pYWkVRdmRYVjFj
      Q3R4V1M5WFpsSkRhV3BrVHdvdlpXVTVTVGh0VkZvd1NVWmtha1U1TW5aT2VrRlFiMWRYT0daWUsx
      TjBXbWxCUlZOQ1FsRnRTMFJ0ZG14bVZHTlJlWGs1TjFaSlNHSmlXVFo2VkZobENscHJSUzl0WlZa
      MFdpdDJPWEZwUTBoVFVFRmlWbWRDUkhGVWFYbHNkbVU1TXpaNFMyRldOMHhyTUhsVVJFMHhZbGRJ
      YkhNelpubzJPVlJtTWsxUmJGa0tSMDlHUjNoQ05qQTNhVzFNZHk5MVZ6VjBSMWxQUXpkbWVrWTFR
      Mlp1YUc1bWFHVkNhbkZWYTJobllpOWthSFUyTUhOeFVFNU5TbHBGU0dkVFVqQm9jQW8xV25ac1pE
      WkpRV3BGTWxkS1prbG1jWGhQVndvOU5uWktSZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.all.send_redirects.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Comment out any occurrences of net.ipv4.conf.all.send_redirects from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv4.conf.all.send_redirects
        replace: '#net.ipv4.conf.all.send_redirects'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Ensure sysctl net.ipv4.conf.all.send_redirects is set to 0
      sysctl:
        name: net.ipv4.conf.all.send_redirects
        value: '0'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Disable Kernel Parameter for Accepting ICMP Redirects by Default on IPv4 Interfaces
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_accept_redirects,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Disable Kernel Parameter for Accepting ICMP Redirects by Default on IPv4 Interfaces
  hosts: 'vian.local'
  become: true
  vars:
    sysctl_net_ipv4_conf_default_accept_redirects_value: '0'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVk1RVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      aDZZMUZCU25Rd1UxRm9XSFlyUzNOa1JHOXNWemhTUW1OYWIwTUtMMkUwVEhaNFZHUTBkVFZsTUZZ
      MFpIbEJWR1p1TDIwM1YxRldSekJIWTFZMUt6aDJiVE12VTIweWRGTTBkRzFNVjFvd1duTXdkbXhS
      YWt4VlpqWTBjd3BsWm5wc2EzZ3hTa3hsYVhKck1GQlNWekE1U1d4YWNHNU5jMHhtVWxSek5XVnFh
      MDVTYm10MFltaE1ZbUpqZVZOMVowRnJiRGwzYUc5M2JHdHdUR1p4Q205bVRFNU5MMmw1UTFjMWVr
      Z3ZibmRwTUZWUk5WcG1UWEpPZVdwdFJEUmFlRUpyU0c5bVVrd3pOMGxrYTJSdFkyOTJXa0ZQWkdK
      VE1GWldNalUyWW5FS2FEaFRha1UzT0dsdFMzSjVPRlp6VVU5RlpESlZNa3RMUW5SSE1IUTVLMmxN
      U1hwV2RXdEpVMDg0WTNKSlUwTlpSMUJsUkZwVmJtNDJTSFZaWm1WWE1nbzVRa3RyWjFKVVoyODRk
      Rk5wYUVONmQzVkNZVFJvUnpkdlpsbElhbmd2WVZaVFdVdGtXRUZVYldjclRUZFZOV1JvTms5NGQz
      ZDRaVWMzT0VkelVEbHRDbk5rUjFsMWJERXhWMFo1Um5neVVESjFZVVU1ZEVGV1VFaE1Vamg2VlZv
      dmJ6VXdjRmRLUVRONk4wMHJka1ZETDBzeWQwSjFXRlJJZEVOVmRXSlZZV0VLZW5WemVUVmtZVWhr
      SzJKa09FaFpaVlEyZVc0clFrRjFPVWhFVDBGMWVqbDBkMHhOVUhsYVduWTFRbUZOYzIxTWNrRlNS
      Q3QwU2xGdmRHWTJaRkJCU2dvdlFpczNNVE4xUkhwNFIzQkVaUzkwSzFSUEsya3hUVUZTTkVsaVpH
      WkRUV3RETXpodldEbEtkR2g2YzBWMU1qVnZXRVptSzNCemJFTkNOVXR6VFZOMkNrZzBSM2wyTjBk
      Uk1VRXdTWG92WWpsV1lqQjVURzV3TVd3emEyeHRVMWhEVERGb2RETkdhMEZSVWtWVE1XazBlRU15
      VG1oRFlWRnNheTloWjBSUmNXc0tVVU01YVZOU1IyUm5SVE5rUVVKNGNWZGFWRlJuY0hGSlZ6QmlT
      bk0xVVdKYU1GcERhelpZY2xWNllVeDJUbk5vYW01MllVSnJNVEpXWTJOT01EbFFlZ3B5Wms0d1Yz
      SnRPVU5RVUVKeUswMUdPRmhLWXdvOVNtczNRUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-80919-4
    - CJIS-5.10.1.1
    - DISA-STIG-RHEL-08-040209
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-SC-7(a)
    - PCI-DSS-Req-1.4.3
    - PCI-DSSv4-1.4.3
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv4_conf_default_accept_redirects
  tasks:

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.default.accept_redirects.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Comment out any occurrences of net.ipv4.conf.default.accept_redirects from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv4.conf.default.accept_redirects
        replace: '#net.ipv4.conf.default.accept_redirects'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Ensure sysctl net.ipv4.conf.default.accept_redirects is set
      sysctl:
        name: net.ipv4.conf.default.accept_redirects
        value: '{{ sysctl_net_ipv4_conf_default_accept_redirects_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Disable Kernel Parameter for Accepting Source-Routed Packets on IPv4 Interfaces by Default
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_accept_source_route,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Disable Kernel Parameter for Accepting Source-Routed Packets on IPv4 Interfaces by Default
  hosts: 'vian.local'
  become: true
  vars:
    sysctl_net_ipv4_conf_default_accept_source_route_value: '0'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVk1RVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      TTNVVkZCU1cwNFptWkdOVVZrVG5kcmIwMW9jMFExVGtKNGRGTUtaRmhxU2pRNVZtTmpabkk0ZFdW
      cE5YQnNhREpqWm1OM1dUTnFRazlhY0M5akswcFdkV3R1ZG1WU00zWlBNekoxZVRKWlFqZzJWVkJW
      TDNGbmFHZzJNZ3BHZFdKSE5VUmlkVUZPWVdOVWIwZDFaa0pIWnpCaFVtTXhaamMzTVhwaU1FaHBV
      M0pVU2xvelEySnZhMnhSS3pGbGNHdFhRa2hPTTFveU5EUndOVWsyQ2xScFdtWXlaRXhoVmt4elJW
      WmlRa0pqVVdkdGFGZE9hWGRSWVZsSVRIVllXWEJHSzJGd1VqSkNlRkZMTjJoSWEydzNURE5yVm14
      MWR5ODRRM1ZMVTBRS00zTXJXbWRWVlRoV1dWUlRhV05UYVVzMVFUWnRURzVTZW04d1IzZEljMnB0
      TWpZek9XOXVlbEpDTVVaWWRTOVVZMFZpZWtKeVFYWmtUMmRMWVdGT2VBbzNPV3gwVmxaTFVWZEdU
      amg1VW5SVmMzRXhkV0pRY21wTkwxQmtkMjgwT0RabFZHZDJWWGxOZDBwd1RtaFhXWFpzVkVWclVX
      Rk1Oa0Z5TW1KVE1rUm5Dbmx1TW1zMVJDdHVOMlIyYUdJeGNHNXhTbEpQY0d4dE9URm1kVXA1ZFVO
      TVZVbGFkekY0WVdOMGVHeHZLMWcxTkd0a2FuUkxNVTVCYjNkMVZWbzVVWG9LVkV0MVFqQlZPV0l5
      TlV0M09XaE1hVTV1VGpVMFRXcGlSRU0wYVZobWRrRm9OQzk1ZURWQmVEZEdTR05xV0hFNFRXUkRS
      bXQ1ZUV4UkswWk1hMFJ0UndvNVdIQkpka1JwYTB0NFpEbHdNek5wZERKdlVrdDJSVmRvVkVSV2FW
      cEliR3hxZGtOc09IcEZXSFkxYWtabFVqQjNSQzltVFd4NmJ6VjFUbk5HWVd4M0NrMWFUMDFIVnpS
      MFkzVkNjV1F5T1d3NVYzWTFaM1owVkZCNVpWVkljRmQ0VUZsbE9YVnJhVGh5VW5vM2QycEZSWEYy
      YnpneWFrWk5PV3BoT1RCUmVGUUtUVnBHV1hOcFpUbEtUaXRKYjJWT2JFUkpNSGh6VGtOWGFIVk9O
      VmRtUmxWR1ozcFNZazFVVVRGclJuRllWVFZ5V0VGM01WWTJhR2RrYkZKRVdFeDRkd3BsVVVKMGFX
      Wm9hMU1yYVRndldHRk1iMjAwU0FvOVNGa3lOZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-80920-2
    - CJIS-5.10.1.1
    - DISA-STIG-RHEL-08-040249
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-SC-5
    - NIST-800-53-SC-7(a)
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv4_conf_default_accept_source_route
  tasks:

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.default.accept_source_route.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Comment out any occurrences of net.ipv4.conf.default.accept_source_route from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv4.conf.default.accept_source_route
        replace: '#net.ipv4.conf.default.accept_source_route'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Ensure sysctl net.ipv4.conf.default.accept_source_route is set
      sysctl:
        name: net.ipv4.conf.default.accept_source_route
        value: '{{ sysctl_net_ipv4_conf_default_accept_source_route_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Enable Kernel Paremeter to Log Martian Packets on all IPv4 Interfaces by Default
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_log_martians,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Enable Kernel Paremeter to Log Martian Packets on all IPv4 Interfaces by Default
  hosts: 'vian.local'
  become: true
  vars:
    sysctl_net_ipv4_conf_default_log_martians_value: '1'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVk1RVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      UmljMUF2TXpCNlRFOVRka0ZIZWtSeE5YWkxRbUZXTjA5d2RrRUtNMmM1VUZrMk9EZFhUMHRHVTJw
      Q2EwbGlaVVV2ZVVoclozVnhjV2hIU0RCSWFXVmtObkZ6YUhwT1owOUVjRVJJU0haUWQzRXliMmRP
      SzNKVmFWaFlVZ3BMYUZocVVtNWhlRVI0WVU1aWExZE5ZVWxRUzNCR2RTdHpWR1ppWkRWM01WUm9W
      RzlPZVdwa2RGRjNVR0p1WW5Vd2NXODVVRll4UjJkMGRreDBlbXcwQ21oNVYzcHJSa3RXVFZSbVpt
      Rk1NbFJFWlhwUVJrNHlkMlZ2T0ZCTFRYSm5RMEZIT1VScVlsaFZRbTQwU2pVMlVERnJkVVZhTmpk
      bVJsUTFWRmRJVlhVS1NVNW1RMGRYWlVwMWVrUk5VRTUxTlUwMU1UZFpORlZpTVcxcFZYbHdVbWRt
      SzNGM01GWnJjU3RJTW5Bd1pWcHFPVEJoUkVkeGVrNTBVRzF6Um1welZncHRTbFpKTkVWSlEzQlFh
      MFpEYjJKbUsxaFBNRFIzWkZCSFFUSTJVMDV0VGxSemQyTkNVM1I1U2xoRFIxUTFhemh1VDNwemEz
      aEdPVEl5TW1oU1V6UndDakY0YzNsSlF5OXRka3d5TW1zdlJ6aENXV1pKZVVoYVoyMU1UbE0wYVhW
      SFJWVTViVmRTVVZkblR6TkNSR1pWYWxSRmNVeFdjRUpFT0VrMVdtWTRSR2NLZWtSd1NuUlRjR0py
      WlVWWVdtMUJXRUZNUkRGbU1XVm5ORVpLU0hWV1RIaHdSU3RyTUdST1pXdHdjbWhIU2xoTlNUUjZU
      SFZaZFZwck1DdGlSelUzWWdwa016WkZUMUpxUzJZMVIwcFBja0o0UVV4cVoyMXlhRkV4TW1FMlpI
      WTVVRlpqV1ZaNlFVdEdNazVaUlhGT1ZVaHFZVVZZUkZBM1RDdGlVbEF3V2tNd0NtdzNSREYzYTBW
      aVJtcDFRMDh3Ym1wdFFtZDBUWGgwTjBkTVNsSkJObEY2U2xGWFpISmhZMFVyYkdKd1YwdHVUVlZr
      WVc5eE1YVllURTR6Wkc5MFNIVUtUVFZvZDJzd1NrWXZaWEYxZERGQ1VHcDBaREpoZWtoRlRYaG1L
      M0JMVVU1WlluVnBjbXhyTnpKUldXbDZWbEI0TDNZeWNWSmxTMDkzZFc1RmJFOUxZUXA2V0RSQ2RH
      bFdNRU4yWjBObk5GVmtkMUJ2WmdvOU1XaHlLd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-81020-0
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-SC-5(3)(a)
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - sysctl_net_ipv4_conf_default_log_martians
    - unknown_severity
  tasks:

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.default.log_martians.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Comment out any occurrences of net.ipv4.conf.default.log_martians from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv4.conf.default.log_martians
        replace: '#net.ipv4.conf.default.log_martians'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Ensure sysctl net.ipv4.conf.default.log_martians is set
      sysctl:
        name: net.ipv4.conf.default.log_martians
        value: '{{ sysctl_net_ipv4_conf_default_log_martians_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Enable Kernel Parameter to Use Reverse Path Filtering by Default
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_rp_filter,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Enable Kernel Parameter to Use Reverse Path Filtering on all IPv4 Interfaces by Default
  hosts: 'vian.local'
  become: true
  vars:
    sysctl_net_ipv4_conf_default_rp_filter_value: '1'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVk5RVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      aFJTVkF2UVhSclVHWm5TSG95V1cxMVluWnJhblZZYURGbE1WQUthV2hIZWpWMlpDODJXVFZPVmpa
      aldWSkRXR3hPVEdwU2NVeEtkV05CYkd0NVRUWnphMHRNUm5JNGNGTmFTWEV3U0ZsaVlWWlVia05E
      V0dacWVYQnNjd3BWVEZWUlQzcGhiVEF6YWxvNVNYcE5abWx5YzBFMWFYUm5SR2wyY1hWYVRETldV
      RXMyU1VsS2QzQXpSRWRTZWpocU1VcFlielpuYUZweFRqRkRhMHRCQ2pBeVNVNVpRMGd6ZERGU05r
      MTBSMVExZGtoek1UVXdTWFZOUVhkMFRIZ3JOa1ZGUW5Cd1MyVnZOSFpyVVhGQ1ZERTFReTlGUW5w
      aFlXNTZkM1JVUVdrS1EwUnNTRVpoY1ZwaFIwOWxWMjVVUWt0M2JVNU9aR1pLYkdFd1pYUjVXRE16
      WVVwMGFGSTFVaTh2ZURORlNHa3dXVWR6ZEZneFZDOUlSbE5ZUm5sd1NBcHJlbGh0YzNkeE1WcG9a
      RE5tVTJKdFJqVmtPRVo2SzFGUmEwTmpaMUI0VTNWWlRUUnJaMmxDWVhaQlJUaE5TVXBpVUdrNVZr
      aGxTVGt5UzFweGQyZGhDbEpGVUdKc1JVWllVbEF4YldWNk1UZHJUWEpzZEdsNk1qRlRUSEZzWjJS
      c01ITTNZbXRuVjFGdmJHVm5SMHhGWWxCQldFUkdXRkZyUWpsTWRHNDVNbllLYldWbk1VMVJja2sy
      UW1ka1oxcGlNMlJEU1V0alp6RnBaVXBoVGxKb1NYTm1aMmxvY2tWaU5EVTVhR3B1TUc5elNDODJN
      RkY1VEhJMlJuaHBOVEl2VmdwWU1tazRUelZRV0VsUk1YRlhUaXRTTjJFNFNIUnBja05wTlhweWNI
      RklkamhxWjFFM04zSm1TemhYYkZJeWVVWmpiV2MwV0U1U2VXeHBWamxEUTFOd0NqaDVaVmxxY2tO
      cmFWRkVVMHhYYkRaSGNFSTJNbXAxTTJwTmNGbEtNSGxNYWpGb2QycDVTV3RwWVVONlNFcGlVVVl5
      Y1cxWWFVUnBTRmsxY2pBMFNsZ0tPWGRoT1VOaFUzbGxVMlZKZGxodlptSXpkaTlDTmxOcE1VOHpR
      bWxNZVVzeGRqVlZObFpFZVZwU2JqSTFUVWxIYlZabVZuaDBhWEZNVjJkblFYRXhWQXAxUTJSMWVt
      cEZTbVJEYkN0V2NuWnJXRmc0TndvOWIycDNSUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-81022-6
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-SC-7(a)
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv4_conf_default_rp_filter
  tasks:

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.default.rp_filter.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Comment out any occurrences of net.ipv4.conf.default.rp_filter from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv4.conf.default.rp_filter
        replace: '#net.ipv4.conf.default.rp_filter'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Ensure sysctl net.ipv4.conf.default.rp_filter is set
      sysctl:
        name: net.ipv4.conf.default.rp_filter
        value: '{{ sysctl_net_ipv4_conf_default_rp_filter_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Configure Kernel Parameter for Accepting Secure Redirects By Default
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_secure_redirects,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Configure Kernel Parameter for Accepting Secure Redirects By Default
  hosts: 'vian.local'
  become: true
  vars:
    sysctl_net_ipv4_conf_default_secure_redirects_value: '0'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVk5RVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      RXdPRkF2TVZkSk5tZHZVSEZ5WkVsTVVuVjRRV1EyZDBGV2FYRUtRVVJQUkVNeGMwcEZOVU5CVjBw
      SmVFeFVNemhxYzJGMmNtMTJieTl6WnprMVdFbDVVMUJCYm5kME1rcDFaMUZtY2tnNE1sSXhkVTFL
      Vm1SWWNtUmFUd3AzWmtkVVowSTRWa1JMZGxCTk5tVlFlbFpwZFZKWWRUSlZiM1JsZFhaRlJXVm1X
      bVJCVVRSdE1GQnRSMloxU0daVFRXaHBkMkpPUTNoSlJHWXJaWE5UQ20wMVEwWkVRVUptVFV4cVNq
      WXlaVTlEYXpab2VqQkxWa1pYZUdadWNuTnFkbGxPZEdOWmRHdHJjMEZGYzJWWGVEZE1PRXQ1YjNk
      cGNWUlJhR1Z4YTFvS2JGcHlOVzlXWVZKeE1GQnZhRTVSU1Zwa1JHNTNURkZSVXpNM1dsY3hkalo1
      V25GWVFVbE9NRmxRVTIwdkszUnROVk5HZEZSRk1qRlJRM2xsUkZsdmNncHpXRWxpWlhaMFRHMDFN
      aTlKYldGQmIyVk5UbUkxWVZaVmJqVlFkR05zTm5walNtbEpUV1JhTnpCU1YxbDNlRUk1TkdoNllY
      Z3JlRkpsYzJKaWRqWkZDazVaVjFrMWRsWldTbFpuYUU0M1ZrMWFOaXRwWTIwelUzSnRWMFk1UTNW
      Tk9FeGpabkozTm5NeWFVNWFMMlJhVmsxRFl6RjBkbE5qWmsxdlMwTTBVV1FLUmpReFMyZHBaRVpJ
      Vm5vdlJYZGxiVVE1U1VkR2JHNVJabEJvWjFkS1ZXeFlNRFJuTUVKQ09EbDZaVUZ0VTJod2FrdHJh
      SFl5YlV0SFdWSTBVbVpaWXdwVldqVm9TVk5ZTjFwRE5qVnZkVXh6VUdSSU15dElWRlpOVGpWdGRu
      VkVibVZDYVVSNVpETkZORkpqUzNZeGNqZ3dkWE5KUlZKclUyUkpiemRIWkZKTkNtRnVNQ3RaV2tR
      eWNIWkxOemxETDFCTE1WUnlhSFozTmpkdFdrNTVPVXBIVjA1dVdqUXZLM000ZDNaTllXWTRaVGxE
      U0VGS1RYVkdUSEJpZW1ObGNWZ0tWV2xRZGpoMWNURkpVbEZxZUdSYUwzUllSRTB6U0dVNGIwcHFV
      MlpaYlc5aFZrWkNUMjAwV1hwNlNIbHFhbkZxUkdwV1VWTlZOSGxYYVRSYVRtcHpkZ3BUV2tnM1Rt
      UldkMHBqVkUxaVp5dHBUMUZCYVFvOVJFUTVZZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-81017-6
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-SC-5
    - NIST-800-53-SC-7(a)
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv4_conf_default_secure_redirects
  tasks:

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.default.secure_redirects.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Comment out any occurrences of net.ipv4.conf.default.secure_redirects from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv4.conf.default.secure_redirects
        replace: '#net.ipv4.conf.default.secure_redirects'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Ensure sysctl net.ipv4.conf.default.secure_redirects is set
      sysctl:
        name: net.ipv4.conf.default.secure_redirects
        value: '{{ sysctl_net_ipv4_conf_default_secure_redirects_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Disable Kernel Parameter for Sending ICMP Redirects on all IPv4 Interfaces by Default
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_send_redirects,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Disable Kernel Parameter for Sending ICMP Redirects on all IPv4 Interfaces by Default
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-80921-0
    - CJIS-5.10.1.1
    - DISA-STIG-RHEL-08-040270
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-SC-5
    - NIST-800-53-SC-7(a)
    - PCI-DSSv4-1.4.5
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv4_conf_default_send_redirects
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVk5RVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      UlVkMUF2TWtKRlYxaHFOSHB4VmxJMmIwcHBhbUl2U3pWclJYRUtRalpsUm1sbVpISTBMek5TZEZZ
      NWVFd3hORWxoYVM5VVVUaHFaVVYyWW5wSE1rZExPRmxDUkV0eldIY3pkV1pOVjJ0M1RHVndibGxR
      V0Vwb1lWcHFTUXAzYVhwTmNYZHNlbXh1TVRobWRFdFNjMmhSVVZoNU5rNDVXVkpFZHpsUkwxWTNk
      Rkl2VWpBd2JIQm5ZM1F3TjBsR1VHNXhVRlpDY21sQlNFMWtORFJvQ2tSVVowZ3hTRU5hT0c1NGFX
      UlFNVEV6VlhaSFRITjBjbE5aYkVOak5WaDZSbEZFZVZZNGMyWnpka1JwUjFkRlJUUnlhVUlySzJk
      YVVISTVNRFJ0U21FS01GSlRPWEo0VTNaelMzWTFXVVozUlc5TFRHRkthV1JNZVZWMlNtRnNZVVV4
      YlRWRlJEZEJVV2g2VUVsNWVEQmtlVzVCVTJkYVVqSnFia28yWldaSlV3cFdlRWN5WTFwaVJXTTVW
      ME00WjBSa2NtSkhhVGsyVnpoTVZrTm1jM2hXUXpZelRUZEZRbGhEU1Zkck4ySlpkVWQzZVRnMmRG
      RktiR2x2VG1vM1RtaHVDbVZ3ZHpad1pHZFdja0ZMVVc1clNGUnZRVVJLWlhoaFpFOHZiV3AwY0da
      dVVYVk9hRGRGTTA4eVZrMW5MemQ1UW1OVkt6aEtUbWgyTUdaYVJFUllTSEVLZVZsbU1HZFJWVGhr
      YWpKR2VuVnpSbFIwY2twclp6UktjMlIwUkUxNFp6UlZVRFpYVDJReU0wWlNOV3BzU0VNeWRVZFBS
      MHhEWmlzeFltaHFPREZZTHdwbFQyOHZia1pFZUc5WmJISnlURTF0VUhaelNHaFJSRXR1TUc5eFpF
      TnNRV1F4YlZoaWN6Vm5LMDA1VDA1Q01XeHdjR3RRYWs5clFuTXZPRWhUZDBwdkNqbEhjSE5xUVd4
      d2RWWTNNMFkyYkdsaGQxUmxkWFJaYkZOaFJTdFNSRFpwUkhKMlVsZzFUWEI1YUc1UVlWY3JRbEI1
      ZURGb1RITndiVFIyZFV4SFRHVUtOVVY0VXpoSmJGWlBZMHN2WmpaMFNHYzBRVVpsZVZZeGJVUjJV
      bFJoU1RWd1lqY3JUSEJaU1hKYWFUWmFUWFZ3VWxCRmRXSm9Xa2hoTVVWWVJIZG9hZ3ByUlRKSVdU
      VlJWV00zYTBOa2RWUnBVbXBSZFFvOWIzVmxUd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.default.send_redirects.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Comment out any occurrences of net.ipv4.conf.default.send_redirects from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv4.conf.default.send_redirects
        replace: '#net.ipv4.conf.default.send_redirects'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Ensure sysctl net.ipv4.conf.default.send_redirects is set to 0
      sysctl:
        name: net.ipv4.conf.default.send_redirects
        value: '0'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Enable Kernel Parameter to Ignore ICMP Broadcast Echo Requests on IPv4 Interfaces
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_icmp_echo_ignore_broadcasts,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Enable Kernel Parameter to Ignore ICMP Broadcast Echo Requests on IPv4 Interfaces
  hosts: 'vian.local'
  become: true
  vars:
    sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value: '1'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVk9RVUZ2U2tWTmRuYzFPRVFyYWpWd1Rp
      dHlhMUF2TTNoNWFVZGlRa0l2YlRsMWJIY3pRWGx4Y2t0TVlrUUtVRVpOZFd4QlRVSndVMEZRVUVk
      SmJWWTNhMnAwWVhKTmVXVkNRM1Y2UkZNNWN6VXZiVGRWUVRWQ05HZzVXVU50VGpCSFYwUkVSVkZo
      U1d0Q0x6VjZiQW81UTNKRFdqTTBkRU5CVDFWalZFODBMM1JUYVhCUWR6TkZiVTlFTkVwNVVrOHJN
      VUZ1TlRaYWEyVk1Zamc0YTBwWVJEaFlVekZVTVV3emJESjRVVXd4Q2tWTGRYTklVVkZXV1ZkcVZV
      SjBNRlYxWWxCeFRWZExTVVpaY2pKcVpUTTVkWGw0ZVhaYVlUbERPRnAyY214MVIzRldUbW8yYVVa
      cFVtSlhXSFpNUW5vS1oyUnNURWQ0ZWpKNFRsVnlZV0o1TTJwMlRFbzBkeXRLU0RFeWNraG9iaXRZ
      T1hoYU0wRk5ZM1JGTmpaa1ZWSTFjMk5aU1dGNE1HbDRiMlJtUWxRMFdBcFlRMGN3YjJaNE9GTXpS
      bmxEUjFWU1ZtUlNjWFF5UmxadFdXSm5OamxFUW1kcWVISlBiVVpaVnpKdVNHMTBUbGsxWkdWeVEw
      WkRaazFtYlVOS05tTnFDbWx1Ym01aVZraEVTVTlpV0ZSQ2VIQnJWWFZCZWpNdk5rVm5OMWhRUjFG
      aU9VaHVhR3BPVWtrNFMzWmxVVk12UjNsNldEbHNjbVpVYUdoVmNTOVFiSGtLZFV0aVJVaGFXRW8w
      YUM5Q1IyVndSbko0VEVKbWVXSldjSEl3YUhwRmFYUmxiRWRNTlc4cldYZG1NV3h2WW5SRFQwOVlU
      blZIUmtkcFRYRkZSMmt2UkFwbVRUWkNVM1o1ZVVONGFVSkJiemM0YUUwMWVtcEZTRUo1VDI5TU5s
      QXpWMnBTTWtwNU1HNTFWMWxQWmpCR1ZuUXJPVGhKWkhNNWVsVkhTeTlLUTNCeUNsSjZLeXRDUVdS
      RlNrcFpWbTVwZFRGWlJucE5kVmx1ZEVGM2RtMWFVRTEzVjFCM2FrMTBVVEJsTHpkWFJFNUVNVTFJ
      ZURCaFZTdGxiVkl2YzJscmNHb0tibFZ0TkRCU04wOW5ieTlLVEdScE5FczJTVEpXZGxOblV6bHZU
      RXBoWW1sWVRGVlBObUV4YkZGalduazJlR1JPTkdWS1ZXVlRielV6Ym5sdmNYWXZad3AwUkRaTE5U
      WjVTSEJRYm1SdlYwUjFVVzFWWlFvOVdsWlZTd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-80922-8
    - CJIS-5.10.1.1
    - DISA-STIG-RHEL-08-040230
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-SC-5
    - PCI-DSS-Req-1.4.3
    - PCI-DSSv4-1.4.2
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv4_icmp_echo_ignore_broadcasts
  tasks:

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv4.icmp_echo_ignore_broadcasts.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Comment out any occurrences of net.ipv4.icmp_echo_ignore_broadcasts from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv4.icmp_echo_ignore_broadcasts
        replace: '#net.ipv4.icmp_echo_ignore_broadcasts'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Ensure sysctl net.ipv4.icmp_echo_ignore_broadcasts is set
      sysctl:
        name: net.ipv4.icmp_echo_ignore_broadcasts
        value: '{{ sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Enable Kernel Parameter to Ignore Bogus ICMP Error Responses on IPv4 Interfaces
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_icmp_ignore_bogus_error_responses,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Enable Kernel Parameter to Ignore Bogus ICMP Error Responses on IPv4 Interfaces
  hosts: 'vian.local'
  become: true
  vars:
    sysctl_net_ipv4_icmp_ignore_bogus_error_responses_value: '1'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVk9RVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      VmpkMUF2YW1sSWMyaEZSMEpDU1dWa01UZHhNMWMyT1ZKRVFUTUtMMDR6YWpONWFYSjFVVTFMZDBW
      bk4zaHRVM0JHZWtsQ055dHJVMDkzYjNSNFFYaFJaSHB4U1dkSWRuazJZMXByY0hwSE5IbExVMWRZ
      ZUhBemFFOURad3BDVkRWRVRqTkRSbEF5UjBncmFEaG1hV2RpT0M5a1dqZExOMHhvWVdkVldsSk5R
      bG80VERkRE1XNTJjM1Z4VkVSdlFVUnVTRUZZWlZSb1IzUlhXbmd2Q2xKR1VVSnNNM3BsVmtkNWNr
      d3pOekF5WkROWFRVcG1XWGxOYW5sVldHeFJkblExUVZZMU5IbHRjV1ppV2xVNU9EZEZPVmhhWW1K
      TGFFaE9UR1JPVlhVS05FRXlNekpOUm04NE9XZGFkVWhtWVdnd1NVVnZNMHhKVVRZemRsQkRUV28w
      UmxwME5HMXdVWGxDSzFkalF6aE1PVTFHVEcxalQxVmhSbXM1YlRWcFlncG9WbTEwTnpBeU1ESjNV
      MGwzTldGNVlsVktlVVJsTTNKeU1tWk9XakEzYldkMGFrRkZRMWRoTjA5WlJ6UjFSV04wTjFjMVNU
      SnFla3RDWXpkMlpYTk1DbU5yY205eWVHdGhjMWRCWm5KblExbDNXSEZaZW1oS2NYaE9UMlJxVDJw
      Q2FEUlVSMk5LVEdOd01tOWhSMnRpVUdkSWVVRXZkMGxNVkVwTlltcDVaVEFLTURaVlFqZENTMUY2
      TTNCcFVISjVMMVZGTTFsYU9IbDBURVJ6UkZCNGMxWnlaV1JrVUVOTGFXSXhWVVJ0WkZaTU5WaEJl
      VGMzWTNSWlRFRTJPVTEwY1FwR1pVdHpXVzR5U0dKdVQyVmpjbTVUWVZCMGVrcEhTVkYzYjNWeGRr
      VTFlRWQxT0daMFdtMUlRVmxQY2tWSU4zUXlLMlpWUm5FclVHWlVLekJ5UVVSVUNuWlJUR3AyUXpZ
      M2NYTlJlRUpJZVRsVWVFZG1Va3B2VVRsMVVVc3hSVEJ2UjBKMVVHdElWazlzVVVodk9XMVdZalpt
      VEdsd05GbFlPRmxvWTNSblFUVUtablpXZEhSMWIyWjZUMUJhUW5aaGIzaGtlRll3TkRaUGR6WnBO
      RzR5UTBoS1RuUnlVVk5zYTFocFNYb3dZVEpNTWpSSllrd3liWEV5ZFRaNVptdGpVZ3BOUkhsalVr
      UjZlRlJSYm1jMFpHRXdNRkZ0Y1FvOVZtMU1SQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-81023-4
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-SC-5
    - PCI-DSS-Req-1.4.3
    - PCI-DSSv4-1.4.2
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - sysctl_net_ipv4_icmp_ignore_bogus_error_responses
    - unknown_severity
  tasks:

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv4.icmp_ignore_bogus_error_responses.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Comment out any occurrences of net.ipv4.icmp_ignore_bogus_error_responses from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv4.icmp_ignore_bogus_error_responses
        replace: '#net.ipv4.icmp_ignore_bogus_error_responses'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Ensure sysctl net.ipv4.icmp_ignore_bogus_error_responses is set
      sysctl:
        name: net.ipv4.icmp_ignore_bogus_error_responses
        value: '{{ sysctl_net_ipv4_icmp_ignore_bogus_error_responses_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Disable Kernel Parameter for IP Forwarding on IPv4 Interfaces
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_ip_forward,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Disable Kernel Parameter for IP Forwarding on IPv4 Interfaces
  hosts: 'vian.local'
  become: true
  tags:
    - CCE-81024-2
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-SC-5
    - NIST-800-53-SC-7(a)
    - PCI-DSS-Req-1.3.1
    - PCI-DSS-Req-1.3.2
    - PCI-DSSv4-1.4.3
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv4_ip_forward
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVlBRVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      QmpVVkF2YVc5alIzSkxOV1F3TTBGaWRFaGlPSFJYWXpKbE56Y0tTbVEwUW5KbU1uUnVWVEE0T1Vn
      M1YwZ3ZSbEZ5WWt0TFZqWnJTSFVyU1hwQ2RHMUJUMWhYZUVOT1MwUjJiRE5wVDBzcmMySlRTRXMz
      UVdOM1NUSlhNZ3BZVTA1R2RWSjBWMHR1T1VOWVExVnJNMDA0V0RkMlRXeFljWEJJUlRSSE5VRndX
      RXhuVDNadWJHWk9WMmxSTmtabU4zbzROelpWU3pCM2VESllkWEJMQ2l0RE9FcDFNSEp0Y1hKUldW
      WXJaV2w0YW5KeWRXTmlSbE0yYzFCNlVrUldaRkJFTW5RNVppdG1WekEySzJscFoyNTFTRnBEZFhs
      cllXTnJORU4xVFZjS0wyTkdOeTlGUVRaSlFsSlpXbWQ2VlZOc00wZDRabWRsUTI1bFREWnNUWEoz
      TTB0QkwwSjRTalpaVlc1NU5uRjJNRTQzYWpoSlpXWlFOVWRsZWs5SlF3cHVOV3ByV25WdWNsQlpW
      MUpRWm05cWJVVjFWVWhxUWtwdk5IWTVORXBKTUhSUVFrdFFTRXR3WXpjeVNDdEZZM2QxWmtORldu
      Tm1PV2t3VTJSQllsbE5DblJzY0RJeE5HdFZkMUl2UldOTFVGZEVjM014ZGpSclVXdEdSMDVMYURK
      clIyOXBZMlZFZFhSdE9VY3pUMkpKVUZkVlNqbEphbTVOSzNCQ2NERnZhRE1LVm1KS1NUa3JUSEJH
      ZDBOT04xQTFkR1Y0TDFwNWRqQkVXazlFUzFWRmFtWk5XbGR4WTNCNlZHcHpNamRuVldSSmNXeEtW
      MmN2VFdwRVNtNXRWRzFrYVFwTlJrbHlSa0V2VFdkQmNUbG5lbll4YzA0eE9HUkRUVEZGYUVOdFMy
      dDJOWEZFY1hScFp6WnRLMUJvZEhRd1lXRnNZbVpoVERaeGQwRXhNMWhNYTJKbUNqWXJjVGxYTmtk
      a1N5OTZOMjFIUW1OSE5ucFdZVTFZYXl0VUt6RjFNVEI0ZFZJd1FuZ3pUVVEzY2pWVmNVUm1TRUl4
      Y1dGSFkzSkxUREp1WVhoMmIwTUtRVkl3UjB0S2NUTmtSMGhoUm10MmRuVTBURnBTS3k5dVJqQkVW
      V2hvTlhGS04zaENWRmxMZVVVMWMwUlRNVXM0VUhOTGRsazJOVk0xUjBwclpVRjZNQXB2UlU5bU5W
      RktSa0k1YW1oUlVtMXRRMVJPZUFvOWJWaFBTd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv4.ip_forward.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Comment out any occurrences of net.ipv4.ip_forward from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv4.ip_forward
        replace: '#net.ipv4.ip_forward'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Ensure sysctl net.ipv4.ip_forward is set to 0
      sysctl:
        name: net.ipv4.ip_forward
        value: '0'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]


# Enable Kernel Parameter to Use TCP Syncookies
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_tcp_syncookies,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Enable Kernel Parameter to Use TCP Syncookies on Network Interfaces
  hosts: 'vian.local'
  become: true
  vars:
    sysctl_net_ipv4_tcp_syncookies_value: '1'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVlBRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      ZGxhMUF2TTBwSGVHSkhMemgyYlZoclJsYzFSelp3UkhRcldpc0tjazFPYld3NU0zWnlTVVZETlds
      cldtaHBkVkpJVUZkNlFsTnZZbkIzUW1oRlkxQlNUVWRzVmxWS1UxWnlNSEUwT0VZelYwTk9abWRH
      T1ZkeFNUWjBOUXBVWVdKU1QwdDRiMGxHYkhkTlMxSm9WRmhMTlRobmFHMWhUVGhMWVRoYVduTmlV
      RUp1YW1scE1EazFRUzlWZFhOa1l6Y3hiVUpyT1ZSblEwOXVVbTVGQ21vdlFrZHhRbXhGVkU4MGJt
      ODVNMkYxWTFkV2R6SldibTVZVEM5a09XcE1kMnN2ZG0xT2JsQTJhMll6WVRaTVFtcDVla1ExWkZO
      dGRqSkVPSE5TV2s0S01FSm1SRlIzYTJGMU1WWjZZV3BLVVUxV1kwZHBhR2xEVEhkcGIycFVTMUZM
      WjA0NUwyOVVPVzkxVnpWVGEzZ3pObWM1TmpKc1prNWhVbmRvTjJwMlF3cDNUek0wYjFKU1dYcE1k
      VU5IVWtoVEx5OXdOa3hEV1cwcmNVcGhXR1JUUTNOalYyMXlNVTF6UWxsWmVUUkZNWFJpZDBjMVJp
      OXBUVEl3YUhNcmQwMUVDbVV4ZG1KS1QxaGtaemhXTDFwVlNWZEVVa1o1YnpaRFpuUmxWemRyVUhG
      UlRrZGtVVmRNTlRWMFJFUnFNemx0Y1ZwbE9HWk1NMG92YTB4VGVqbEtSMVFLV1c0MGRHeG5TbWRh
      V1dSUVNUbG5ZazF0UjFKNlNIQnFXa3BGWlRCak0zbGFTbXRCYTNSVWFEbHpjMnRGVVhoMlRGRnpj
      a1EzVFdaMFpuQjNORVoyVUFwdVEwUnVOR1ZqVVZodlQwRXhjMG81VmxBMWRUSmpXRzFtYzBkT2VV
      TkRhVU5rYkZwVkwzTTRWM0U0YlhCS2VISkZZMDloVFVJeVJtZzRkV1I1ZVVjekNqaFdaMFZhWlhw
      UkwyaGxOMnREWkdaRVkzWnpUR3B1UW5VeFQwb3pTSE5xV2tGTWExQm5ZMWgzUjJ4T2NYWktkR0o0
      VUdKRFpIZEpZM2hQV201MU1GWUtXbUZLUVRadGJGUmlWbGRLU1ZwTFlsSnFRa3hXZEVoTlUzSm5X
      SFZqWmxWcWFtWm5VSGd2Uml0QlFXSkdVblJ2UmpaeVVWZHRObk5YVFU1RFIybHJSd3BFVW1WbE1G
      SnJVR3RSZFZaME4zQlhiakl5U0FvOWRrNVBTZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-80923-6
    - CJIS-5.10.1.1
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-SC-5(1)
    - NIST-800-53-SC-5(2)
    - NIST-800-53-SC-5(3)(a)
    - PCI-DSS-Req-1.4.1
    - PCI-DSSv4-1.4.3
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv4_tcp_syncookies
  tasks:

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv4.tcp_syncookies.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Comment out any occurrences of net.ipv4.tcp_syncookies from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv4.tcp_syncookies
        replace: '#net.ipv4.tcp_syncookies'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Ensure sysctl net.ipv4.tcp_syncookies is set
      sysctl:
        name: net.ipv4.tcp_syncookies
        value: '{{ sysctl_net_ipv4_tcp_syncookies_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Configure Accepting Router Preference in Router Advertisements on All IPv6 Interfaces
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_all_accept_ra,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Configure Accepting Router Advertisements on All IPv6 Interfaces
  hosts: 'vian.local'
  become: true
  vars:
    sysctl_net_ipv6_conf_all_accept_ra_value: '0'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVlBRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      Tm9VVkZCU2tKVWFVMXNha3RuV1RWRmVERXdORVZNTWxoNk1HZ0tiRkF2U2xOdFQyaHNUbVpYVWl0
      MWRtNVJkVzV1V0VRd015c3pMMWN4VjJKcmNqWTFkU3N6VXpKaGVUbHVVVU53Vm1KdU1YRktURkYy
      U1d0NGFuUXpkUW92V0U1TGJGbEVVRXgwVXpKR1NYRXdNV0Z5U2k5V2FDOVhWR1p0UjNwSFYxcHFa
      V2xHVUVoYWNYZHZaWGxYV2pNd1owNTFSbU16U0hWWGJYTjRUVmN5Q21OeE1EbEJiMHRHY1RCR2VV
      b3ZjWGRVVDJrNVpWTjBORFpQYzFscU1ubHNhVEZMTUdKQlMxTnRWRmhFVGtaek5qbDZiazV3UVRo
      RGVYQjNVa00wVnpZS1UyZE1ZVTF1ZVhWc01tSjNMMHhYYTJKMmRUVXJhbTFvUWtVeVdqRmliamxv
      UmtkMlRHTmtWbmhYV1M5dlpucEdTMFpQWlhoaFJGVlBUR3RwVG1sWVlncFVSVVJQYm5Cb2JEUnhX
      REZOZWpKTlVtZExjbVpOVG05T2QwdG9ORWg2Ym13cmJHcFdSMXA1Y0dFMlVqZzJZbEo2TUVwVmNt
      RlFORVV5YmxsbWNVOURDa1UxVWxsamJFTlBNRUUyTTFWR2VIVmFVemhNYUd3eVlUSXpXbkJIYWxK
      cE1uTnlja0oxWlVKMlJFc3JjVkJDYWxReWNVNXVLelZuY214T2RVWnZiVlFLYm5STlltaG5iVmN3
      WW5ONVZrODBVVkZwZUV4dk5sZDFZamxtUzBnNWVUSjZiVXRVWW5vNWJrczNjVTV0TkhBM1RsRkhj
      RVF3UlhwbGF6QkZUV2Q1Y3dweGRsbHZVVEl2Vm1GUVZWQndkMGMxTW5OcVdsbHJTbnBpTUhJMU5t
      UjJZMHB5WjNCeFEyczFNMlJDSzA1VE5tbDNVMVo2V1ROUVRqSkxhbkJvTTBRMENrZ3dUWFozYTFW
      dlRtNW5ibWhMV25sUmJscGFlVE5aY2t0T1Z6aFVZbFZsY0dvek4yWlFabVpIYW1kcFozbHdZV1o1
      Vldwa05YQndPRU5FTlZGcFdFRUtiMGxLTTNBd1IwTTRNbnBpU0dSVWFuVklkWGxGYW5KV1VFVXhN
      MHM0U1dVNWNXb3hORUZ5ZGxFNFRHcEdWVzQyWkZWQk5YRmtSVTAwYzI5VlptaFVSd3BET1ZaeFZV
      dExSM1ZuTWxjNWJ5OW9ibVV4VmdvOVduaEdSUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-81006-9
    - DISA-STIG-RHEL-08-040261
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv6_conf_all_accept_ra
  tasks:

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv6.conf.all.accept_ra.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Comment out any occurrences of net.ipv6.conf.all.accept_ra from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv6.conf.all.accept_ra
        replace: '#net.ipv6.conf.all.accept_ra'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Ensure sysctl net.ipv6.conf.all.accept_ra is set
      sysctl:
        name: net.ipv6.conf.all.accept_ra
        value: '{{ sysctl_net_ipv6_conf_all_accept_ra_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Disable Accepting ICMP Redirects for All IPv6 Interfaces
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_all_accept_redirects,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Disable Accepting ICMP Redirects for All IPv6 Interfaces
  hosts: 'vian.local'
  become: true
  vars:
    sysctl_net_ipv6_conf_all_accept_redirects_value: '0'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVlFRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      OU1WVkZCU1c1U1FrUjJTQ3RWY2xseFMzWk9UUzlMUVVKeFpqSUtSeTlWWlc5SGVUZHRTMUIzWmpK
      dWFtWlpVbGR6YTNCeWFqZHVUamRDVEdwMlZITllTRkpUTTBGRVlYTlVha0ZxZEdwRGRHTjVRbm81
      TkhWTFVGWXZWUXBCYkdKcFFTOTJTWGh4VmpaRGNUSkdkRXBIVDBoRE9WZFZOVEV5TVhjM01EVllP
      Vk51ZFRoVVJXTXhXVEJyTkRaSFpsUTJjblJOVm5sbk9XbE1NbVl4Q21kRWRVMHlMelpXYzFFNUsz
      SjFZMWhrTVRsdFNtZzNRVzlUUWxKM2JqVlZSV3hzV0V4c1dGbHJXVTFJUzJKSU5XcGlNRk5tUVZa
      NGRHRnhaVk13TjNVS1pqUmxkM0k0TkhNcmFVWjJRVXBOZVV4VlFUbHdTMlpRTjFZMlpUVkRZbmRw
      T0hSa04wcE5iVWRqV2tsVFp6SmhNMEUwWlVkV1REWnpaMDExU0ZSelRBcFdPRUZuUzFWNWNtcHdO
      MUZ2VHpjeFUzRnlaMUJOV0UxTWFXOUNTakpKY21sVFRDOUpNblV2Ym5saFMwaEJZVE5GWTFWNU5F
      cG5abFJFVTFkaVNESjVDa1JTVUVFcmMwVlVUMFpoVlU4eGIyRkZlbGRQVDB0TWFra3ljakZWU1VG
      VldVWnFPRUpyUTBsRloxcG9UWFZoVEVsUmFuZDVLekZQYkdGcVdFY3hhM1FLVDBWVVFYRTRUWEpw
      TjJORlpIazFaaTl4Y0RZM05tbDRkamN2VUVZNGNXVlJiMDFJYm5OdFIzTjFTR1JSTkRWclFVaFBl
      REYzY0ZCMlJuZ3ZUelo2TWdwWVNFcHpNRE5uTjBGWldFVlFhRlpCYkRWa2RrVlJUMFF2YlhGdmRr
      RmxLMUUyUkZWdlExcEtaMWRtZEVOUGRGZElSbXRVZG5vNVduTjJhVmQyTnpaV0NsZE5keXRqVEVG
      cE5FSmpNR2ROWnpRd1FtdFZOalp4U1dobWVYWm5SbEpsVFdwRk5rbHRhMnhWYms5SU1YRk5OM2Ru
      Y0dscmNVeEtkbU5zVW5OTVZ6TUtjSFFyVjFGaGJWb3dObEF6WjJvdlQybzNjR2t2U0UwNVZHeEVT
      ak0zYTJ0RVpqSjFjazk2UmxrclpUQTFUemhvTm14UE1pdDVWMGhEYzFWeU0wWnZjd3BJZEdvMVpF
      cFNiMm8xWjJwNmFsTjBZVXN6VndvOWRDdDFVZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-81009-3
    - DISA-STIG-RHEL-08-040280
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-6(b)
    - NIST-800-53-CM-6.1(iv)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv6_conf_all_accept_redirects
  tasks:

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv6.conf.all.accept_redirects.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Comment out any occurrences of net.ipv6.conf.all.accept_redirects from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv6.conf.all.accept_redirects
        replace: '#net.ipv6.conf.all.accept_redirects'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Ensure sysctl net.ipv6.conf.all.accept_redirects is set
      sysctl:
        name: net.ipv6.conf.all.accept_redirects
        value: '{{ sysctl_net_ipv6_conf_all_accept_redirects_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Disable Kernel Parameter for Accepting Source-Routed Packets on all IPv6 Interfaces
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_all_accept_source_route,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Disable Kernel Parameter for Accepting Source-Routed Packets on all IPv6 Interfaces
  hosts: 'vian.local'
  become: true
  vars:
    sysctl_net_ipv6_conf_all_accept_source_route_value: '0'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVlFRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      cFBXVkF2TTFaeFoyNURTSGxCTnk4elVURk5aVkZXYkZCVksyb0tlSGc1U1VSUFpFTnhNekJvTjB0
      R1dsbzBWMHRvT1VkNk1USTBaM1pRUkhob1ZIWnRVRk5zV1RNNWJuRnhNV0ZPVkc1SU0xYzVaMUpx
      YlZoMFRGRnJSUXBtVDNWT1lYSkZURUkyVmtwb05qQXhlVXc1WlN0UFNqTjFRbmQ0U0ZKME9FWlBX
      V2hLVGt0RlJXTXdhMk5XWjNsdE1uSm1ORzVSYTFSM2MxSlFlVXRNQ2tSbGVHNW5XSGxRTUdaaVV6
      VXhjRzlJV0d0UVNtNXBOakIwTUhveVdWUjFTMloyWldSaFUxSnZkMGhvTjJ4dWQwNVJkM2d6V0Ux
      VEwzazRjVTAzT0ZBS0sySkdia3RSUlVsc1RrVjJWSFYxZFdkNFExUjZTRXRCU0RrMlZtdGlWVXQx
      U0ZkYU0xa3haSEp3WTBad2VWZFlSbGNySzFscGNVWnJOVk5DWjJ4eWJBb3daVFl3TVV4cWNXNU5l
      akpNVm5kRk9XaG5RMEZJYTFCT1NFZG5aRGhCTm1WeFluRnlTVXA1ZGpFemNUTk9MM2RXVVVaTlFq
      QjZaVlZoZUV0dk5ERm9DbFJDZWpoQlUyOU1WbmszYXpFM2FqRkpMMnNyZFhkblEweEdRMWt3Vmxw
      aU9WSm5hVFpvUzI1b1NYb3phbkV4Ym10UVJqaFRNM042ZFUxNVlWSkRSRWNLVURoV2RHaHVlRFZ3
      YURSWWVVSlJjR0ZRVlRsbmMySlJSVkpVUjFCUlRYazVNMk4yZVdaRGIwNVNVazF6YTBwd1FUQlNZ
      aTlrTm5sMk0zWm9XVE50T1FvMFNFNDRaV0Y1UTNSaU1qVkVSamhoVnpCbVdFaHRSalJuWVc1Q1Yz
      WnFlbkZVZUc5MVQwMXBiVE5ITjNCRE5UaG5Na1UzUkhSbVNWcDJNSFFyUTIwckNqUnlVVVE0V1Rk
      YWEwUnNNVXhIZDNWb1RHaGhOalZ4UVVaQlZraDVZbGxuWTFGU0swaHRaSGRDYWpGYVNURXdTM1J2
      TUhKTk1WTkJObkJ3YjNvek9WUUtUSFY1VEdWVFUxUTNiV1ZyYjNwcFMzWm5XVEJOVldOTloxUXpS
      VVZSUzNkc1ptNURTbWROZG1VM01sZFpkR2REWkhaSWEyODRiMUJMY0ZOVlVrRXhXQXBRTVd0S1Iw
      MVhPVTVOZGt4U2J6QlBlVEIxVndvOVNWVndSZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-81013-5
    - DISA-STIG-RHEL-08-040240
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv6_conf_all_accept_source_route
  tasks:

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv6.conf.all.accept_source_route.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Comment out any occurrences of net.ipv6.conf.all.accept_source_route from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv6.conf.all.accept_source_route
        replace: '#net.ipv6.conf.all.accept_source_route'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Ensure sysctl net.ipv6.conf.all.accept_source_route is set
      sysctl:
        name: net.ipv6.conf.all.accept_source_route
        value: '{{ sysctl_net_ipv6_conf_all_accept_source_route_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Disable Kernel Parameter for IPv6 Forwarding
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_all_forwarding,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Disable Kernel Parameter for IPv6 Forwarding
  hosts: 'vian.local'
  become: true
  vars:
    sysctl_net_ipv6_conf_all_forwarding_value: '0'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVlFRVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      bHJPRkZCU1ZwaGQwVk9TWHBIY1RoRmRHdE5PVkpsTkdzemNUWUtVV3Q1VGpkcVlsUlViRWxtVURC
      TWRFa3ljbVYzVGtwbVFscEdTbUl6VHpWQ05tVjZhV3hDZG5GVlJVbFBZMEpCUm5wMUt6VnFSVEly
      WTA0clFWSXhjZ29yVWtkSWNWWkhkRVpOVW5FME1HVXlNRlJUU1ZWclZGRjRTM1JqV2s4MVUyVnNP
      Vkl4YWxFNUsxTXZlbTVQVUhwdlJETlNNbTgwWWtKWFkyTlZlbWsxQ201UE1EaDVTMHh3WmxaSVZX
      MVBaMlJrZDNwcFpEWkdVV0pPTkc5VWFFNVpPR1pvVWtOeldFTXJNRTlLU1dSa2FTOVNlR2h1Ymt3
      MVpqSnBXSGgyUVRZS1ZFUTJaVmR4YUVoU1R6VkhkaTl5ZW1Wb2RYbEVlWGxUUWtSUWJ6ZDJjMnht
      Ym1KMEx6SkJhbWRHUW0weVFUWnJXbmhhWTNSclZXcFJjREpsS3l0eGFRb3ZLMnBIZVV4dGVTOTRV
      RVJwUnpkaFNtUlVNazFTY2xSV0wwUlNVVzgzYTJGMlMwNXZiMnRZVGpCelRVSnNUVWhWVWxFM04w
      RktiRXhWYlhKdFNEVm1DbUZLUmtGaFdURktLM0oyY1VkcldIaEtRVll3YWpsSVZGWXdlbmxYVkZW
      V01UaFhkVFZvY25Ndldra3ZkbGxwUkZVeE4zbHlMM1JRWVhWeFQzRklPRm9LYjFJMWNtMXpXR1ZI
      WXpaWFl6ZE5iSGxVYW1abVZISklOMWxpYUZWMFptOUlhWGdyVm1kMmJrZHZSMHh6Y0U1U1MwMTZO
      MkYxVG1VMmIxRnhXa3BoVEFwNlVFaFVRVU5FWkhJMloyOVhabUZZTTFCVWNYQm9hMkZ1UVc5dGR6
      SXJUVzVaUm5KRk0xTldjRVpGZEhBNVJqTlhTWEZQYURSeVVXTlhTVXc0YW5KbkNtOW5kbWt3TXpW
      WU5XSnNNRlY2YzNoNGQzaFdRbkpDU1haclprUktWbXh0VkVzclV6SklPVUZWVlZkdWRVZHlaVTFI
      ZW1JemRXUXhiR1JFYzIxRFNWTUtPVk5tU2tSQkt6ZzFVSGhPWnpGd01IcExXVmh5ZUVSQ1IxaG5N
      MFJKVlRsaU56TXlSSHBhU0dneGFISXJXWEZUVTNGbmNWbEVNRVpEUmtSWVYzTk1NUXAwYUZFMmJY
      bE1TRU5STkVoTVZsRlhNME0xU0FvOVZtb3ZWUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-82863-2
    - DISA-STIG-RHEL-08-040260
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-6(b)
    - NIST-800-53-CM-6.1(iv)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv6_conf_all_forwarding
  tasks:

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv6.conf.all.forwarding.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Comment out any occurrences of net.ipv6.conf.all.forwarding from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv6.conf.all.forwarding
        replace: '#net.ipv6.conf.all.forwarding'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Ensure sysctl net.ipv6.conf.all.forwarding is set
      sysctl:
        name: net.ipv6.conf.all.forwarding
        value: '{{ sysctl_net_ipv6_conf_all_forwarding_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Disable Accepting Router Advertisements on all IPv6 Interfaces by Default
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_default_accept_ra,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Disable Accepting Router Advertisements on all IPv6 Interfaces by Default
  hosts: 'vian.local'
  become: true
  vars:
    sysctl_net_ipv6_conf_default_accept_ra_value: '0'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVlJRVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      TktkMUZCU2xvME1WTlJOUzlsUjJWUVF5OHhkMk5DTTFwelowTUtTbW94VFVscFpISXhUbE55Tm5C
      eFRreExjbEpoUlZwUFFYcDZlWEpQWlZWeU5tY3ZabEZzV0dGeVYzRk9UWFJrY1dSck1ISkxWQ3Qz
      VkhwNGMxUktOd3B1Y1d3NFRHOURkU3R3YWsweE1VSlpTVk16VVRCSlNrSTNjRUp3U1ZSc2JraEVk
      M1JMV1ZORGRHdExjRkZHUjBObk5VUm9kVUl2Y0daTVdYbG5Ua0V6Q2xRemNHeG1VRVkwVlZFeGJV
      Unhja1pTTTJKNE5pOVZPVXAxVW05a1NUZGtWV3Q1UkV0WlFuQXhaekJPZURod016bE9UMDA0VlZs
      dVVubHdjMU5SVUhVS1pqTmhjQ3RhTDFobVkyMVNObVZRY2xGd2JuaGlWbTlpYm1KelFrcEhTekpH
      U21KbE0yZGlNM0JYT1hkS1ltRlhUVXhZV1RWRFdFdEROVk5KV1c1bll3cDVUMDVwWVRRdk5XWTJh
      bTFuUnpWSE5UWlVNekIxT1RCWVVIRkVZbmxIYjJ0eFVGSnBVVVpTZGxacEszRlZWSGxsZEdFNFJr
      cEZRVGxTVEZKaFJXZHJDbUUwUkhOVlpGWjVXVXBIVFdGTFdqSm9iVXhFTURobldGSTFiVlJRVm1S
      eFMxZGxRMWhCU0ZaT1RGaEdhamhXV0ZSQllrSnpXbkl6VW1kTE1ISnBhVGtLWTFWRE1FOUVVVkZG
      TUVneE1WTjNOWHAzY0dwd2EzaGpTM0pwV1Rabk5UYzJTRkZIYVRGelVqSk1SazVzUkRJMk4yaFBX
      V2wxVkM5NGJXdHlWbUZwWXdwaFFYRlZPV3BxV0haMVIyZzFiVkJPUVV0SVQxcHRabXBaYTBKYVlr
      ZFdVblZpU0U1Sk1IQXlUakJPT1ZCVmJXdERibEowYjNSWldVTjJZbGxsZDNrNUNtZE1RemxoZFRK
      NmIwaFVUbFJ3ZEd4SWNWUjBLekIxVlhsaEsxUXZURzVxYjFoYWJGUjFTMUkxY1c0MFZWRkhWbEZt
      Wms1cllVazVVblpUTkRNemJXSUtOamh5ZG0xTWNWTnJjR3RKYW14bWMzZzRiWHBwTlU0NVRpc3ZV
      MFowTTJobWJITmtSRVpXZEhNd1EzaHZiV0pNV1VKNldrazJZM1ZDWnpGb2VtTklVUXB5V2s1blJu
      cGpVRU54VldOdWRtZ3ZXVU5OTHdvOVpWQTRlZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-81007-7
    - DISA-STIG-RHEL-08-040262
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv6_conf_default_accept_ra
  tasks:

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv6.conf.default.accept_ra.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Comment out any occurrences of net.ipv6.conf.default.accept_ra from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv6.conf.default.accept_ra
        replace: '#net.ipv6.conf.default.accept_ra'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Ensure sysctl net.ipv6.conf.default.accept_ra is set
      sysctl:
        name: net.ipv6.conf.default.accept_ra
        value: '{{ sysctl_net_ipv6_conf_default_accept_ra_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Disable Kernel Parameter for Accepting ICMP Redirects by Default on IPv6 Interfaces
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_default_accept_redirects,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Disable Kernel Parameter for Accepting ICMP Redirects by Default on IPv6 Interfaces
  hosts: 'vian.local'
  become: true
  vars:
    sysctl_net_ipv6_conf_default_accept_redirects_value: '0'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVlJRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rs
      TndjMUFyZDFvMWQxUXpNR1J0UlhWR2MzTTNWMGxtYm5CaVFWRUtNalpuUVVkeE5XTXhjVmw1VkVG
      bWRUaFZReXMxZUdrMlRHZExaVTFYZFdKTFIxbzVPRGMwVkdka1IyeDJTME5vUTIxUVRIaFdja3Bp
      Y2xSV2NuUnJNZ3ByYmtkcGMwOUtTU3R2TW1kSU0waElTbmd3YzBWdE4wTlhTM0JPU0VkcWQydFNX
      WHBKTm0xRFVFWTJjM0pIWjJ4aFVEWmpkMVpXWWtZMGQxWnhOMUJaQ210dmJUaEVOR1IzV204NEt6
      VmhlR042Ykhab1NsQm5XRzFrTkVSTFMxUjBkMWd2UVZaTVQwUTRaRzlQVWpGc2EwWlFUM1ZEUlRa
      VFZYWkZlbWhxZFhVS2MyOXZaMmhITUhWU1RqUTBhVmRFV0hsa1JqRjRTbWM1SzIxWlRHcFlRVWww
      TmxaSE0yTjNVM016WVRBMWR6WnBhamxJZDJZMFIzbDBWVEJoYm1GRlNRcDNkbWRvTVVaelMycEtU
      RUpJUzJGM1NVOXFhakpYVURZeVRVWnNSM05UYzNsS00yNUNSa0V3VTFORldFZGhXRWh2U1cwNE0y
      a3JjMUl4UkRKR2JWaGFDbFpGZGtSYWVqaE9SVmxtTTNKS1JqaEhaRGx4YmtkRFZsSjZVbGh5ZWtv
      d1NUYzJObGhYUXpoeFVEUkdNa1J6TDJ0TldIQnZiRkZvUW1NM1ZGRTJWRE1LTlZoWlNHOVpPRkIz
      ZDJKWFNGRkVVV0Z2ZUZjeGJWWmhUaXQ0VGpsM1EyRllWVTFRY0ZkeVpHSXhXbE5YU25SdVQzSlJi
      bWxCUlhOWk4zVmFkRWwwTmdwaVpXTmtaWGgzVUhKQkx6bGtibkpqWm1GTVNqaFpWa3RoUmtwVVUw
      MUZXRWRrWlZWa1JFeGtURkEzTUdSV01XYzJXSEpwYkVoRllUUmhUbmh4YldaRkNtUlpWa1I0Vm5C
      bVNFTmxRakYxY25sMVVHTkNVSEl6Vm5sNWNubFhWa2RCT1dKMVdtVXJPRFIxVm5wRlZEWndObkI1
      WkhsNFNHSldkMmx2TjB0UlkxSUtaM05HVkhZMVVEQnNTbk5vUXpSTVEyaDZhSGNyV1VoWVUyVTJU
      SEoxUTNwVldtdGxWMjAxVFV0aFFqTTVTRXhMYm5KVlJEZ3pUVU54UTFST1NqaE9hUXBuVmtoNFIx
      YzJhVGhDT0daV1NuQlBWMFp3UndvOVlVZFZNQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-81010-1
    - DISA-STIG-RHEL-08-040210
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv6_conf_default_accept_redirects
  tasks:

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv6.conf.default.accept_redirects.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Comment out any occurrences of net.ipv6.conf.default.accept_redirects from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv6.conf.default.accept_redirects
        replace: '#net.ipv6.conf.default.accept_redirects'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Ensure sysctl net.ipv6.conf.default.accept_redirects is set
      sysctl:
        name: net.ipv6.conf.default.accept_redirects
        value: '{{ sysctl_net_ipv6_conf_default_accept_redirects_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Disable Kernel Parameter for Accepting Source-Routed Packets on IPv6 Interfaces by Default
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_default_accept_source_route,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Disable Kernel Parameter for Accepting Source-Routed Packets on IPv6 Interfaces by Default
  hosts: 'vian.local'
  become: true
  vars:
    sysctl_net_ipv6_conf_default_accept_source_route_value: '0'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVlpRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      MWpiMUF2TUVNMFNHTkplVFo1Um1sUGNXa3ZOM0ZYY2taR0syc0tlbTFoVFhZckwwSk9UVmRLV1Vk
      TWFIbG1kbEZ5WkZOelJuZDRWSEZaYUV3MVNGSlhWR0l3VkRkTlpIazBVbWRsU1V4U1NVVXZkMFkx
      YzJwM1RTdFhhZ3B0V0hoTk1VSklTbVJFVDI5U1RHMVhiMDR5U0ZWS05VbFBPWFpVVG1NNGRuSkZa
      MjgxVlRobU0xQTFPVVJYUmtkd1UzUlZOMngyVjNwV2NVWlliRWRQQ25SbFFqTmpkbk5uYjNKcU1E
      STNkR2xFZGtsbVVVRjJZbEU1ZHpoaEsyeHpUVTl3Y3pCc2NtWnVSR0ZrTUdSWFVreG9SM1JQTkda
      V1ZrVjNjakpLTjJjS2VYSlpkM1ZSVlN0QmRYSllWVTlMTUhKRU5WbFRaVWN3YTBOb2RqTTFkMWRH
      TUM5bU1YRjRNakJxY2tWTWIzZHpNRFpzVGtOa1UxbEVVbmRxYXpaTGFBcEdhMDFrVTNkb1drbFlU
      a0ZLZVU5U2JVWTBkSHAzWmt0dVIwRTBWelZQTVRoeldYaFhRMUJ0VVdGWVdFdHNOVkZCUkRSQ2Vs
      bEhabkY0S3lzMFJVNUNDbEk0YVhwaWF6SnlaVTByV2k5aVdtbEtVRmxaUTJ4VmNsWnpRVloyTTI5
      eWVrWmxXV2RzYkVOU09HMTRSbWxHUmxKd1NtTlpTREpJUjFGeGNsQjFiRzBLVldaeFpVOXFWV1pW
      YXpaNE0wOUNXVFJ4T0ZSMmNsSm9RelV3YlRoQ1UydzBXamx5WjNSbFExbHRRbHBTVHpsa1YyZ3hN
      WGx0TUdjd09GSnlTalZJWkFwa09VOTZPRk5IY1V0T2RWcEVSSFJuYUVONFZ5ODJiMjkwVTBOR2Vu
      TkROVU5GWkhSVmFIUnZSMVp0TnpReVlrRXJhMUJ3TTNOVmFGYzVjalZLYld4UkNrWkpSVU13ZVU5
      cVVEVkJNVEJaVjFWRGNYZElLM2xpYmtnd2JVZEVlR1pJUVZkSU1UQXZSbVEwVDB4RE0zbFNSWEJa
      V25sV1pGVjRkVE5NTm1wVWRFOEtLemxWZEhWWGJuSlpjblZQVHpOTlZrOXBkRmhtWmk5SVFpOTFV
      V3BTVkc5b1UxaEVRM0pFUjJONlFrOXNOSEZOWm10TVlWZGhjVk5EWVhsVE4xUlVNZ3AxUlM5dllW
      ZENka2xzYVRKV1pYSnBZbkJaZGdvOU5VY3dOUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-81015-0
    - DISA-STIG-RHEL-08-040250
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-6(b)
    - NIST-800-53-CM-6.1(iv)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - PCI-DSS-Req-1.4.3
    - PCI-DSSv4-1.4.2
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv6_conf_default_accept_source_route
  tasks:

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv6.conf.default.accept_source_route.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Comment out any occurrences of net.ipv6.conf.default.accept_source_route from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv6.conf.default.accept_source_route
        replace: '#net.ipv6.conf.default.accept_source_route'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]

    - name: Ensure sysctl net.ipv6.conf.default.accept_source_route is set
      sysctl:
        name: net.ipv6.conf.default.accept_source_route
        value: '{{ sysctl_net_ipv6_conf_default_accept_source_route_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Enforce Usage of pam_wheel with Group Parameter for su Authentication
# Identifier: (ssg:rhel8|cis_server_l1|xccdf_org.ssgproject.content_rule_use_pam_wheel_group_for_su,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_sle,multi_platform_ubuntu
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Enforce Usage of pam_wheel with Group Parameter for su Authentication
  hosts: 'vian.local'
  become: true
  vars:
    var_pam_wheel_group_for_su: sugroup
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213emQzVlNRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      MWFkMUF2TWtaNk56RnVVVFJSVkZSRFJreDBOekpqV1RkRFJHa0tPVFl5WVVJNVRrcDJhRTVuZFRk
      dU9HeFdaV1ZOVlc1aWNqTjZZMnRJYzBoM2EyVnpjVzlQT1c5b1pWQkhRMHhuVW5sM2NFUkJZblJZ
      UTNKSk5XbDRPUXBvZVZGVWEwOW9iVlZuWjBSWFQxbEpZa2hpVEZoSE0yMVFLMm96YkhaUVpqTTFV
      M1JXUzJGRWFsaHlNSEZrVFZkRE1YRlVXR2x5UlhOSWFFeEVSMFYyQ2tVM2JtNTJTalZJY3pkc1dV
      eEJUR2RuYUhaV2RsTlFkMGs1ZUVWdllXRTNPV1YzV1V4WFRsUkJTRFEyVFRJMmR6WTNNRVozV0hO
      bUswVlJSMFpxTW13S2NqWjFla3RpUmxoVE1YbDNZWFpsZVZWNk5UTjJPU3RhZVhGcGJXMXpjMUUw
      UmxoUGIxTjJLMnRFVWtwaVMyRjBkSFJpYjFwSlIwUnZUbXBMT1c5WlNnbzVXaTlIV0hKVFRWWXhk
      bTByTUZobFRXWnBjRzF0VFZGWVpWTndaRVJrYlhKRmEzRlVNSGRaTDBsSFoyUXhWMlZKWlhWNFVr
      TjFaRTF0YkRadVNWTTFDbUYxTkZwcU5VTTBOVEo2T0hodVJVODJZMWhFTjNSM1l6QjFaa2xCTkVO
      T2F6RTNaVlJWZHpFM2NWSlVhRVp1Um1KWlJTOTBPVkF6YlVKNVduZFVkRllLVTJzMVpDOWFSRFZp
      UlcxbmNFWm5WbXhzT1VSa1ExRTFWbU5SV2tscFp6SktWRWh5ZFhkVU0xTXJRbkpVY21wa2JqRTJU
      M05RZFZBeVdGRnFkRVJsUmdwVk4zSkpSazE0Y21SbVYyMWlPWFZqZHpoaWFrRmFVbWRtWkZCdmR6
      ZElZbE4wZG05cU4zZFJNWEZoYms1VWVUWnNSVmhzZFZwNVlUTkRUMDlCTm1reENsVnFiRUZCYjBa
      NlRXczJlVlZKYjNoTU5rNHJXbE5OZFVObk4yWmFiRTkzZVZReFFtMDNVSFkxYkUxbWJrbG9SVU0z
      Y0VreVVHcDNZMnBaTkZnMlIyVUthRWx5Vm1ad1ZYYzRRVXRVY1daT00wWTFRbFU1ZEdWSVFtUmhN
      M0JDU1VkQllrbHJXVU53VTBkWlNqaGFkSHBOYVcxVVZ6STVRMXBWZERoTU9VaFJTZ3BrVTBaQ2R5
      czNZbEJWVW5ac01tMXlUMnRuV1FvOVEzTTBhQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-86064-3
    - PCI-DSSv4-2.2.6
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - use_pam_wheel_group_for_su
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Enforce Usage of pam_wheel with Group Parameter for su Authentication - Add the group to the /etc/pam.d/su file
      ansible.builtin.lineinfile:
        path: /etc/pam.d/su
        state: present
        regexp: ^[\s]*#[\s]*auth[\s]+required[\s]+pam_wheel\.so[\s]+use_uid group=$
        line: auth             required        pam_wheel.so use_uid group={{ var_pam_wheel_group_for_su }}
      when: '"pam" in ansible_facts.packages'


- name: generate Compliance report
  hosts: "vian.local"
  become: true
  gather_facts: false
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213elMyZFlRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      a3djMUZCU1dwWVVsWklhUzh5WkdRclFrdzRhRnBCVXlzNGJrd0tjbUp5WkhobWRra3ZhM1p3TWxj
      eGNrMWtNbkJ0YmpsV1owOURXVll6YzI5Nk1FNURjRTVKZUhsUFFuZFpXVmhOYkdwYU5XcGhOSE5F
      TkZVME5HbzFRUXBQUmxWTE1IQmxaR3QwVTJseVVsbDJhbTFsVm1oU1YyRnhURzE0VnpJeFFVdDNN
      bmR5YTBRM1EwNVRjM1JtYmxWMlRtUkJabU5LYjFGV2NHODJOM2RyQ2sxUFNUaFJZMlo2ZFdJMWNu
      aHlTSFV3ZUM5eFZqVnROa3RPZVZORFptaFlLelo0SzFkMWFqQk1ibEZqYTJ4WVYyVkZVM2hQV1N0
      blRrMUJNMFkxYkU4S1dXcHdSMmhVU25oeFkzSXpTRWh0TURsV1RWTk1aeTkwTjNFNGRqaERWMlp1
      Wms1M2VVcDBOazVsYVV0MGFVYzVUa2hKV1d0M1NFZ3lOMFZZTlhORk9Rb3pSakEyWWs5NlpsQkdT
      RWRaUzBzeFlYTmplamhvTDNOMVRtMDRiWFJ4Ym5CQmIycHNkM1JZVDNKWmFVaG1hV1JsTWtSaWEz
      VjNOUzl0ZDBGSFFXZFVDbGhtTWtJMGMybFBVSHBpWWxvMVUzUjJSbFk0YzBaMVVrMTFjWEpHVTJj
      M2FsSkpkbkpQT1ZjeE5YQTBiV04xUnpkSWVDOVJRMVpvUmpkb1FuUkZUMG9LVFhCdmFYVjBOVlpx
      ZGxsVFkwcEJUM05tTUdsYU5FaFlRWEZtVEVWWWVtdzFja1ZzUmtoek1GSnlWRkJsWVZoSmRqTmti
      bkpUV0dkNFNUZFVTVUpUYVFwYWJtTkNZalpMVUdkNWFVSXJibWRQV0ZCbFEyMUhNbmRMVm5CSGVI
      ZDFkV0pXTWtScE5FdGxhWHB0V25KcWNtMVFPRlJLWjJWb2QyRktSMmt5TlZwakNrcFpVMlpGTVU5
      T1pucDVaR2gxVmxscVltSnhabkppZGxKWU4zaExlV1JNTVhWQlRucG9Ua05wY2pSRk0xcHRaRloy
      UlVSd04wNVNhalIwTmpReldrY0tTVGxSYnpGRldEazNlR001YmtwYU0wMDVWME5zYVhSa2MwUTJh
      V1JQWlhCU1FuRlBhSFJIU0hoRlkxVkJUMHgxWkUwelNVNDNNM1pDVlRCa1dsbFVXQXByYVhwNVRV
      VXJibGxEUmxKSk9XWjFaemx2ZGdvOVVtcGxWZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:
    - name: generate Compliance report
      command: insights-client --compliance
      changed_when: false

# Reboots a system if any of the preceeding plays sets the 'insights_needs_reboot' variable to true.
# The variable can be overridden to suppress this behavior.
- name: Reboot system (if applicable)
  hosts: "vian.local"
  become: true
  gather_facts: false
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTVlpCZDFWQldVaHBRMVk0ZG5jMU9FUXJhalZ3VGtGUmFrMUVRa0ZCYTJOeE1W
      WlhVbEF3VUVoMGRIRjBWMGt4UkZSdU4zcE1kbFUyU0hKd2QxSUtUbkJ3Um5SWGJWRktiM2xxYm1w
      bE5XUmFSemMxUTNCU1kzZGFPRU5XVW5sRlRVRXpVREExZW1Kc1UzSnFWbTUxVW5oNlpVeG1SbTFy
      YW1SRVJWcHdjZ3ByWTJ0d2FFazJSVUpIYWtJemEyaGFUalJ5YTNwUWRWQm1PR1pMUVdsSE1ESmxk
      SGhXVFZWV01tZHRkV3c0UjBJMmRIcEpkRk5uVFRGQlFYQkdORTFRQ2s1NFRDOUpUMlY2ZFdRMGFt
      VlFaV05KZWpGS1dtMTVkVGgzWTNoVFZqWkpTbTVPU1VGSGVHYzVWRUpVYzNNMFEwbHVaVlZXY0RG
      VWRrUlFPUzlHVXk4S2VGaFlaMFphWlM5VlZuQjBaRzA1ZDJkbmRVOXRiR2hvWVZCTVZHNU5Tbkoy
      UVRsV2FVUnZRVzV2WWt0b1VIbEtZMHBSYjJOTFdrRlRjVTF6ZWs1VWNncHVNek5JYlRoUk9IQnRW
      VTFLYldobU9VRnZkM2x4VW5GWVVHeHpXVGwzT0UxRU1WQkZjR3htY2pJeVlYTjFMMHhvYjNGNlIz
      TmtOMUUxTTJwdFMyNXBDaXM1Y0VjeWEzVkNSVXhpVVhoblRHcERiVlZsUzFCdmJuaFhjM0JuVFZs
      M2VYQjFaVFJvYnl0dmFsZG5WRGR2ZG1GbFRFNVRTMkV2UkZOS2JEWldRaThLZEd4YUwxUXJPRFZr
      Ym5ZclNWb3phbEJTZFM5bVpuZFBkVVpVV2xoNmVGTkJUalZSV1M5ak15c3hhbUZSTDBKeFdYTmhi
      M2RpUkZreGRXUXZVeXRsYVFwa2FEa3JWRkV5TlVKa1NYa3hibGh3ZWpoV1JHbHpjbEp3Y0VrNWFs
      SldWakkwTVVVelRVWkhka1ZaTm1aVFYzSlZWMWMzY0RKbFpUbGphelpOVlUweUNrNUZjRXBLWm5G
      UFNFdHBjRXRPZVRKdVFVRTJURmcxTHpNeGFWSk9VSEZZVXpKRVdqSlpkbVZTUTJOMmVDOHZPVTlo
      UzFWd1FsZElZVmxYYW5STU4wWUtSWFJWVEZGeFZESkJPVTF3WjFSU1RtOU5WbEZ4Y1haQ01GUlBP
      WE00TmxoTmRuUkdRa1IzYW5SbWIxSm9NRnBEYlUwME1FRlhRMHBxT0RKNlduTlRZUXBCYXpkUEsy
      UkpkMFl5VVQwS1BWcEtiallLTFMwdExTMUZUa1FnVUVkUUlGTkpSMDVCVkZWU1JTMHRMUzB0Q2c9
      PQ==
  tasks:
    - when:
        - insights_needs_reboot is defined
        - insights_needs_reboot
      block:
        - name: Reboot system
          shell: sleep 2 && shutdown -r now "Ansible triggered reboot"
          async: 1
          poll: 0
          ignore_errors: true

        - name: Wait for system to boot up
          local_action:
            module: wait_for
            host: "{{ hostvars[inventory_hostname]['ansible_host'] | default(hostvars[inventory_hostname]['ansible_ssh_host'], true) | default(inventory_hostname, true) }}"
            port: "{{ hostvars[inventory_hostname]['ansible_port'] | default(hostvars[inventory_hostname]['ansible_ssh_port'], true) | default('22', true) }}"
            delay: 15
            search_regex: OpenSSH
            timeout: 300
          become: false

- name: run insights
  hosts: "vian.local"
  become: true
  gather_facts: false
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTVlpCZDFWQldVaHBRaXR6ZG5jMU9FUXJhalZ3VGtGUmFXdDRaeTh2WmtaRFoz
      QXlTblIxVEd0UU5qQnNTa3BZYm1GU1JGTjVjVVYwU0ZSNlRGY0tOVlZSVlc5MWEyUmpVRFJVUlZn
      d01EaDFhRkJHUzFaSmVrdFVTR2RsYTFOaU1UUXlkMjlQYm5sR2VUUnpRbEJrZEZoaGREVlliWEp0
      VGxsR1EwaEVWZ28xYVhSdlNrcDBPVzg1UWtkQlJVaDVZMFJ3SzBoNVNqWXphM0paZVRGUk1rOXVU
      azF3VjJaSmNtYzJUakJXVTJoa1JtVk1lR0ppTjBaMlpFaEpjbFo2Q2pJNGFrdHhOemx1Tm13eUx6
      aDZZVkJSTDFkWVZIWkNaMDVhUkVWTFJ6TmhSSFl3WVRkbWIyUnlPRWhEZGxseE5tNUhNRkZOY1RO
      U1ZFOXBkbFZtTTFnS1JuQnlhVTh2TDNKSlRDOVlSelE1TTA1NGFWSjBRakVyZEhSUk0wZHNhM1ZE
      ZFVwck1EQkdaREp0ZDNZNFprRnZaR2xUUW5aelQydEpZekZyV25adFN3cEJjR3BEY1ZKMWVHaExU
      MDgzYWxZM1FYSnRTV0p6TkhobVJrUkJVMkZaV2t4R01VMHZhME42ZWs1d1MwTjFhbE5hVUUxRlVt
      WlhhV2RHVGpGMWRqRjNDalpQSzB0b1pTdFJVRU5hUm5CV1kwVndSbTFSTVdwcWFrOVFPV2haSzNW
      alZWSnhSVEkyTlhGTWRuWnFSWE4wUW5WQk4xQkZNRVZ3UkRsaU5VaFZSM1lLTkZKemJXc3pNbFpC
      Vnl0WE5IWk1VRWQwZG1sQ00wSXpUbE0wZUhCdVIzSmlObGs1Y1cwNFZuVTJSRUZIV2xOYWRsbFlk
      bWQwTm1WR2N6RTVTVFZZUWdvMGVtcFVSRUlyTW1sT2NrcE9jM2d5YURoU1VGVnJMMmhZUzFKMGEy
      WnZZMlpKZVRkcGNWY3hiMGRsTlZSMmFqTTFSbXRqUld0YU9VRnpSMjl6WXpWMENuUlZkVlZJWWpS
      ME5EVTFSSE5EWlZWc1ZEZFNOakJDTTB4d1Z6TmlTRTF0YzFCMEx6RktNRFEwYm1KS2RFTkhUM1Jy
      UVVWWVRsVTJlbGxUTDNBMFFqSUtaSFYxY2tZdlNHUnFWWFJNVDNSdlNFTnlZVWd2WkZwaFRVNTZk
      MVZpZUc1VFZXUkdZU3R6TTBaNFJHczFVVkU0VVRaMVVucFpRbWw0WkcxeWREZGpUQXBKYTA1NlEy
      aHBRMDlrY3owS1BVMVZOMk1LTFMwdExTMUZUa1FnVUVkUUlGTkpSMDVCVkZWU1JTMHRMUzB0Q2c9
      PQ==
  tasks:
    - name: run insights
      command: insights-client
      changed_when: false